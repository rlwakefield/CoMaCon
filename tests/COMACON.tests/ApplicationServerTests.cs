using COMACON.config;
using COMACONTranslationToHelperUtility;
using FluentAssertions;
using Microsoft.AspNetCore.Mvc.ApplicationParts;
using Microsoft.Web.Administration;
using Newtonsoft.Json;
using System.Xml;

namespace COMACON.tests;

public class ApplicationServerTests
{
    private readonly string cleanWebApplicationDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
    private readonly string cleanWebApplicationDataStructure211WithVersionNumber = @"{""Type"":"""",""Version"":""21.1.38.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
    private readonly string cleanWebApplicationDataStructure221WithVersionNumber = @"{""Type"":"""",""Version"":""22.1.8.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
    private readonly string cleanWebApplicationDataStructure231WithVersionNumber = @"{""Type"":"""",""Version"":""23.1.7.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
    private readonly string cleanWebApplicationDataStructure241WithVersionNumber = @"{""Type"":"""",""Version"":""24.1.7.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

    [Fact]
    public void Test1()
    {
        //Testing to validate that the key is found and the appropriate value is returned.
        var factory = new DefaultGenericHelperMethods();

        var xmlNode = @"<appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""true"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>";

        string keyName = "endpoints:WorkViewMobile";
        string defaultValue = "false";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        string value = factory.getNonStandardXmlValue(xmldoc.DocumentElement, keyName, defaultValue);

        value.Should().Be("true");
    }

    [Fact]
    public void Test2()
    {
        //Testing to validate that the key is not found and the default value is returned.
        var factory = new DefaultGenericHelperMethods();

        var xmlNode = @"<appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>";

        string keyName = "Endpoints:WorkViewMobile";
        string defaultValue = "false";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        string value = factory.getNonStandardXmlValue(xmldoc, keyName, defaultValue);

        value.Should().Be(defaultValue);
    }

    [Fact]
    public void Test3()
    {
        //Testing to validate that the key is found and the appropriate value is returned.
        //This is testing with just one level of nesting.
        var factory = new DefaultGenericHelperMethods();

        var xmlNode = @"<system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""2048"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>";

        string nodeName = "httpRuntime";
        string attributeName = "maxRequestLength";
        string defaultValue = "4096";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        string value = factory.getStandardXmlValue(xmldoc.DocumentElement, nodeName, attributeName, defaultValue);

        value.Should().Be("2048");
    }

    [Fact]
    public void Test4()
    {
        //Testing to validate that the key is not found and the default value is returned.
        //This is testing with just one level of nesting.
        var factory = new DefaultGenericHelperMethods();

        var xmlNode = @"<system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>";

        string nodeName = "httpRuntime";
        string attributeName = "MaxRequestLength";
        string defaultValue = "4096";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        string value = factory.getStandardXmlValue(xmldoc.DocumentElement, nodeName, attributeName, defaultValue);

        value.Should().Be(defaultValue);
    }

    [Fact]
    public void Test5()
    {
        //Testing the Prebuilding of the 211 appSettings section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseHTMLClientType"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Use-HTML-Client-Type"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"appSettings","add","ServerDesignation","2","Server-Designation","","","",""},
            {"appSettings","add","dmsdatasource","2","Data-Source","[Datasource]","","",""},
            {"appSettings","add","UseOSAuthentication","1","Use-OS-Authentication","false","","",""},
            {"appSettings","add","DocumentQueryWarningThreshold","2","Document-Query-Warning-Threshold","500","","",""},
            {"appSettings","add","DocumentQueryLimit","2","Document-Query-Limit","2000","","",""},
            {"appSettings","add","ItemCacheTimeout","2","Item-Cache-Timeout","60","","",""},
            {"appSettings","add","RawImagesAllowed","1","Raw-Images","true","","",""},
            {"appSettings","add","UseIsolatedImageProcess","1","Use-Isolated-Image-Process","true","","",""},
            {"appSettings","add","CompressionQuality","2","Compression-Quality","70","","",""},
            {"appSettings","add","EnableIsolatedChromiumProcess","1","Enable-Isolated-Chromium-Process","true","","",""},
            {"appSettings","add","FormSaveToTiffTimeout","2","Form-Save-To-TIFF-Timeout","60","","",""},
            {"appSettings","add","PrintImageFormViaPDF","1","Print-Image-Form-Via-PDF","false","","",""},
            {"appSettings","add","TPCFWorkerLocationOverride","2","TPCF-Worker-Location-Override","","","",""},
            {"appSettings","add","DefaultStoragePath","2","Default-Storage-Path","","","",""},
            {"appSettings","add","watchFolder","2","Watch-Folder","","","",""},
            {"appSettings","add","siteIDKeywordType","2","Site-ID-Keyword-Type","Site ID","","",""},
            {"appSettings","add","cleanupTimerInterval","2","Cleanup-Timer-Interval","15","","",""},
            {"appSettings","add","maxFileAgeInHours","2","Max-File-Age","4","","",""},
            {"appSettings","add","ValidateMessageSchema","1","Integrations-EIS-Validate-Message-Schema","true","","",""},
            {"appSettings","add","ContinueOnValidationError","1","Integrations-EIS-Continue-On-Validation-Error","false","","",""},
            {"appSettings","add","DataSetCacheCleanUpIntervalInMins","2","Integrations-EIS-Data-Set-Cache-Cleanup-Interval","60","","",""},
            {"appSettings","add","AppNetDirectory","2","Integrations-EIS-AppNet-Directory","[virtualRoot]","","",""},
            {"appSettings","add","UseHTMLClientType","1","Integrations-EIS-Use-HTML-Client-Type","false","","",""},
            {"appSettings","add","MessageBrokerMonitorStartDelayInMinutes","2","Message-Broker-Monitor-Start-Delay","","","",""},
            {"appSettings","add","GCSUsername","2","GCS-Username","","","",""},
            {"appSettings","add","GCSPassword","2","GCS-Password","","","",""},
            {"appSettings","add","useLegacyKeyForUsageBasedBilling","2","Use-Legacy-Key-For-Usage-Based-Billing","false","","",""},
            {"appSettings","add","GCSPhoneHomeIntervalInMinutes","2","GCS-Phone-Home-Interval","60","","",""},
            {"appSettings","add","DataCaptureServerWCFEndpointAddress","2","Data-Capture-Server-WCF-Endpoint-Address","net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service","","",""},
            {"appSettings","add","AllowInsecureConnection","1","Allow-Insecure-Connections","false","","",""},
            {"appSettings","add","AppServerOrigin","2","OWIN-Application-Server-Origin","[virtualRoot]","","",""},
            {"appSettings","add","owin:AutomaticAppStartup","1","OWIN-Automatic-App-Startup","false","","",""},
            {"appSettings","add","owin:appStartup","2","OWIN-App-Startup","Hyland.Owin.Core.Startup, Hyland.Owin.Core","","",""},
            {"appSettings","add","IdentityModelServerURI","2","Identity-Model-Server-URI","","","",""},
            {"appSettings","add","mobileAppsPath","2","Mobile-Apps-Path","[unc path]","","",""},
            {"appSettings","add","corsPolicy","2","CORS-Policy","*","","",""},
            {"appSettings","add","endpoints:WorkViewMobile","1","WorkView-Mobile-Endpoint","false","","",""},
            {"appSettings","add","endpoints:ResponsiveApps","1","Responsive-Apps-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Wopi","1","WOPI-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Sesame","1","Sesame-Endpoint","false","","",""},
            {"appSettings","add","endpoints:GovernanceRulesAsAService","1","Governance-Rules-As-A-Service-Endpoint","false","","",""},
            {"appSettings","add","endpoints:FHIR","1","Web-BLOB-Passthrough-FHIR-Endpoint","false","","",""},
            {"appSettings","add","SMARTonFHIRApplicationId","2","SMART-On-FHIR-Application-ID","[GUID]","","",""},
            {"appSettings","add","endpoints:PPL","1","PPL-Endpoint-Enabled","false","","",""},
            {"appSettings","add","endpoints:Forms","1","Forms-Endpoint","false","","",""},
            {"appSettings","add","DocPopUrl","2","PPL-DocPop-URL","","","",""},
            {"appSettings","add","StatementCompCacheLimit","2","Statement-Composition-Cache-Limit","","","",""},
            {"appSettings","add","UnityFormsToggleMaxFormWidth","1","Unity-Forms-Toggle-Max-Form-Width","false","","",""},
            {"appSettings","add","owin:oia:msgItemTypeId","2","owin:oia:msgItemTypeId","[Message Item Type ID]","","",""},
            {"appSettings","add","owin:oia:lifeCycleId","2","owin:oia:lifeCycleId","[Lifecycle ID]","","",""},
            {"appSettings","add","owin:oia:tmpFilePath","2","owin:oia:tmpFilePath","[UNC Path]","","",""},
            {"appSettings","add","owin:oia:tmpFileAgeInMs","2","owin:oia:tmpFileAgeInMs","[Temp File Age ms]","","",""},
            {"appSettings","add","owin:oia:cleanupIntervalInMs","2","owin:oia:cleanupIntervalInMs","[Cleanup Interval ms]","","",""},
            {"appSettings","add","UseOnBaseFulltext","1","Use-OnBase-Full-Text","false","","",""},
            {"appSettings","add","ContentComposerIdpPath","2","Content-Composer-IdP-Path","","","",""},
            {"appSettings","add","KeywordDataCacheTimeout","2","Keyword-Data-Cache-Timeout","20","","",""},
            {"appSettings","add","AllowInsecureExternalXsl ","1","Allow-Insecure-External-XSL","false","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test6()
    {
        //Testing the Prebuilding of the 211 Hyland.ResponsiveApps section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.ResponsiveApps","WorkViewApi","url","2","Responsive-Apps-WorkView-API-URL","https://[Server]/[AppServer]/private/workview/api/","","",""},
            {"Hyland.ResponsiveApps","WorkViewFiles","url","2","Responsive-Apps-WorkView-Files-URL","https://[Server]/[AppServer]/private/workview/files/","","",""},
            {"Hyland.ResponsiveApps","ResponsiveAppsApi","url","2","Responsive-Apps-API-URL","https://[Server]/[AppServer]/private/responsive-apps/api/","","",""},
            {"Hyland.ResponsiveApps","IdentityProvider","url","2","Identity-Provider-URL","https://[Server]/idp/[tenant]/[population]","","",""},
            {"Hyland.ResponsiveApps","CoreAccessTokenLifetime","value","2","Core-Access-Token-Lifetime","691200","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test7()
    {
        //Testing the Prebuilding of the 211 Hyland.PlatterManagement section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.PlatterManagement","Logging/FileIODetail","value","1","File-IO-Detail","false","","",""},
            {"Hyland.PlatterManagement","ForeignStorageDevices/EMCTHRESHOLD","value","2","Foreign-Storage-EMC-Threshold","","","",""},
            {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheLocation","value","2","Foreign-Storage-PM-Cache-Location","","","",""},
            {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheTimeout","value","2","Foreign-Storage-PM-Cache-Timeout","","","",""},
            {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheSize","value","2","Foreign-Storage-PM-Cache-Size","","","",""},
            {"Hyland.PlatterManagement","FileAccess/PMAccessLevel","value","2","PM-File-Access-Level","0","","",""},
            {"Hyland.PlatterManagement","TemporaryFiles/TempFileExpirationThreshold","value","2","Temp-File-Expiration-Threshold-Time","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test8()
    {
        //Testing the Prebuilding of the 211 Hyland.Services section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Services","poolSettings","minSessions","2","Hyland-Services-AppPool-Minimum-Sessions","0","","",""},
            {"Hyland.Services","poolSettings","maxSessions","2","Hyland-Services-AppPool-Maximum-Sessions","10","","",""},
            {"Hyland.Services","serviceLogin","username","2","Hyland-Services-AppPool-Username","[serviceUserName]","","",""},
            {"Hyland.Services","serviceLogin","password","2","Hyland-Services-AppPool-Password","[servicePassword]","","",""},
            {"Hyland.Services","securitySettings","useQueryContext","1","Use-Query-Context","false","","",""},
            {"Hyland.Services","securitySettings","filterExceptions","1","Filter-Exceptions","true","","",""},
            {"Hyland.Services","Endpoint","useRemoting","1","Endpoint-Use-Remoting","true","","",""},
            {"Hyland.Services","session","enableTimeout","1","Session-Enable-Timeout","false","","",""},
            {"Hyland.Services","applicationServerCallback","url","2","Application-Server-Callback-URL","","","",""},
            {"Hyland.Services","webServerBaseUrl","url","2","Web-Server-Base-URL","","","",""},
            {"Hyland.Services","requestValidation","minVersion","2","Request-Validation-Minimum-Version","0","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test9()
    {
        //Testing the Prebuilding of the 211 Hyland.XMLServices.DocumentConnector section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.XMLServices.DocumentConnector","loginId","name","2","Login-ID","","","",""},
            {"Hyland.XMLServices.DocumentConnector","loginPassword","name","2","Login-Password","","","",""},
            {"Hyland.XMLServices.DocumentConnector","loginDatasource","name","2","Login-Datasource","","","",""},
            {"Hyland.XMLServices.DocumentConnector","pool","min","2","Pool-Min","0","","",""},
            {"Hyland.XMLServices.DocumentConnector","pool","max","2","Pool-Max","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test10()
    {
        //Testing the Prebuilding of the 211 Hyland.Core.FullText section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Core.FullText","SearchTimeout","value","2","Search-Timeout","30","","",""},
            {"Hyland.Core.FullText","SearchLog","enableSearchlog","1","Enable-Search-Log","false","","",""},
            {"Hyland.Core.FullText","SearchLog","path","2","Search-Log-Path","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test11()
    {
        //Testing the Prebuilding of the 211 Hyland.WorkView.Core section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.WorkView.Core","UnityEditableFilterMaxRows","value","2","Unity-Editable-Filter-Max-Rows","20","","",""},
            {"Hyland.WorkView.Core","ERPDateFormat","value","2","ERP-Date-Format-LOB-Broker","yyyyMMdd","","",""},
            {"Hyland.WorkView.Core","FormattedTextIframeSupportedDomains","value","2","Formatted-Text-Iframe-Supported-Domains","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test12()
    {
        //Testing the Prebuilding of the 211 Hyland.Core.IDOL section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Core.IDOL","RemoteOCREngine","remoteServer","2","Remote-OCR-Engine-Remote-Server","localhost","","",""},
            {"Hyland.Core.IDOL","RemoteOCREngine","port","2","Remote-OCR-Engine-Port","9050","","",""},
            {"Hyland.Core.IDOL","RemoteOCREngine","timeOut","2","Remote-OCR-Engine-Timeout","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test13()
    {
        //Testing the Prebuilding of the 211 Hyland.Core.Wopi section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Core.Wopi","useOfficeWebAppServer","value","2","Use-Office-Online-Server","false","","",""},
            {"Hyland.Core.Wopi","owaServerUri","value","2","Office-Online-Server-URI","https://[servername]/","","",""},
            {"Hyland.Core.Wopi","owaProxyBase","value","2","Office-Online-Server-Proxy-Base","https://[servername]/[appserver]/private","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test14()
    {
        //Testing the Prebuilding of the 211 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheSearchMinChars","2","Vendor-Cache-Search-Minimum-Characters","1","","",""},
            {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterKeyedLookupOp","2","Vendor-Master-Keyed-Lookup-Op","GetVenMasterRecordbyVenIDNCompID","","",""},
            {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupSequence","2","Vendor-Master-Lookup-Sequence","GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID","","",""},
            {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupReturnMultiple","1","Vendor-Master-Lookup-Return-Multiple","false","","",""},
            {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheAutoCompleteResultsMax","2","Vendor-Cache-AutoComplete-Result-Max","30","","",""},
            {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","IsEnabled","","1","Enable-LOB-Broker-Accounts-Payable","false","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test15()
    {
        //Testing the Prebuilding of the 211 system.web section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"system.web","httpRuntime","maxRequestLength","2","Http-Runtime-Maximum-Request-Length","30000","","",""},
            {"system.web","httpRuntime","executionTimeout","2","Http-Runtime-Execution-Timeout","300","","",""},
            {"system.web","sessionState","timeout","2","Session-Timeout-Length","20","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test16()
    {
        //Testing the Prebuilding of the 211 system.webServer section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"system.webServer","security/requestFiltering/requestLimits","maxAllowedContentLength","2","Max-Allowed-Content-Length","30000000","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test17()
    {
        //Testing the Prebuilding of the 211 root section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"root","Hyland.Core.IDOL","ImageCompression","2","Image-Compression","70","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test18()
    {
        //Testing the parsing of the 211 appSettings section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseHTMLClientType"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Use-HTML-Client-Type"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":""Test"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""SQL Integrated Security"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseHTMLClientType"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Use-HTML-Client-Type"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "appSettings", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test19()
    {
        //Testing the parsing of the 211 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":{""responsiveApps"":[{""Name"":""[appName]"",""IconURL"":""[urlToAppIcon]"",""URL"":""[urlToApp]"",""id"":""""}]},""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
        <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" />
    </Apps>
  </Hyland.ResponsiveApps>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.ResponsiveApps", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test20()
    {
        //Testing the parsing of the 211 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":{""diskGroupAliases"":[{""oldname"":""OldName"",""newname"":""NewName"",""type"":""unc"",""id"":null}]},""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value=""0"" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.PlatterManagement", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test21()
    {
        //Testing the parsing of the 211 Hyland.Services section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
    <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
  </Hyland.Services>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Services", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test22()
    {
        //Testing the parsing of the 211 Hyland.XMLServices.DocumentConnector section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.XMLServices.DocumentConnector>
    <loginId name=""5"" />
    <loginPassword name=""5"" />
    <loginDatasource name=""5"" />
    <pool min=""5"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.XMLServices.DocumentConnector", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test23()
    {
        //Testing the parsing of the 211 Hyland.Core.FullText section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.FullText", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test24()
    {
        //Testing the parsing of the 211 Hyland.WorkView.Core section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""250"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <UnityEditableFilterMaxRows value=""250"" />
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <ERPDateFormat value=""yyyyMMdd"" />
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <FormattedTextIframeSupportedDomains value="""" />
  </Hyland.WorkView.Core>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.WorkView.Core", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test25()
    {
        //Testing the parsing of the 211 Hyland.Core.IDOL section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.IDOL ImageCompression=""70"">
    <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
    <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
  </Hyland.Core.IDOL>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.IDOL", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test26()
    {
        //Testing the parsing of the 211 Hyland.Core.Wopi section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>
  <connectionStrings>
    <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security Additional Options""
      connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>
  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging TruncateLogValues=""1024"">
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""Splunk"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Splunk"" value=""http://localhost:8989"" />
        <add key=""SplunkToken"" value=""token"" />
        <add key=""SplunkIndex"" value=""Index"" />
        <add key=""SplunkSource"" value=""Source"" />
        <add key=""SplunkSourceType"" value=""Source Type"" />
        <add key=""SplunkHost"" value=""Host"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""DiagnosticsConsole"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Http"" value=""http://localhost:8989"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value=""anothererror"" />
      </Route>
      <Route name=""ErrorEventLog"">
        <add key=""minimum-level"" value=""Error"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
    </Routes>
    <AuditRoutes />
  </Hyland.Logging>
  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>
  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>
  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
    </Apps>
  </Hyland.ResponsiveApps>
  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value=""id"" />
    <ClientSecret value=""secret"" />
    <Username value=""UN"" />
    <Password value=""PW"" />
  </Hyland.ContentComposer.Core>
  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>
  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>
  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value=""0"" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>
  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
    <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
  </Hyland.Services>
  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name=""5"" />
    <loginPassword name=""5"" />
    <loginDatasource name=""5"" />
    <pool min=""5"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>
  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>
  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <UnityEditableFilterMaxRows value=""250"" />
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <ERPDateFormat value=""yyyyMMdd"" />
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <FormattedTextIframeSupportedDomains value="""" />
  </Hyland.WorkView.Core>
  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>
  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
    <trustedClients trustMode=""Off"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
  </Hyland.Authentication>
  <!--
    Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
  -->
  <Hyland.Core.IDOL ImageCompression=""70"">
    <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
    <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
  </Hyland.Core.IDOL>
  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->
  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
      <authentication>
        <anonymousAuthentication enabled=""true"" />
        <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
      </authentication>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--<system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>-->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--<system.identityModel.services>
    <federationConfiguration requireSsl=""false"">
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>-->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
    <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
    <DataSources>
      <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
  <location path=""AuthService.asmx"">
  </location>
  <location path=""AuthOptServicePipeline.ashx"">
  </location>
</configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.Wopi", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test27()
    {
        //Testing the parsing of the 211 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>
  <connectionStrings>
    <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security Additional Options""
      connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>
  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging TruncateLogValues=""1024"">
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""Splunk"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Splunk"" value=""http://localhost:8989"" />
        <add key=""SplunkToken"" value=""token"" />
        <add key=""SplunkIndex"" value=""Index"" />
        <add key=""SplunkSource"" value=""Source"" />
        <add key=""SplunkSourceType"" value=""Source Type"" />
        <add key=""SplunkHost"" value=""Host"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""DiagnosticsConsole"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Http"" value=""http://localhost:8989"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value=""anothererror"" />
      </Route>
      <Route name=""ErrorEventLog"">
        <add key=""minimum-level"" value=""Error"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
    </Routes>
    <AuditRoutes />
  </Hyland.Logging>
  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>
  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>
  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
    </Apps>
  </Hyland.ResponsiveApps>
  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value=""id"" />
    <ClientSecret value=""secret"" />
    <Username value=""UN"" />
    <Password value=""PW"" />
  </Hyland.ContentComposer.Core>
  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>
  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>
  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value=""0"" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>
  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
    <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
  </Hyland.Services>
  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name=""5"" />
    <loginPassword name=""5"" />
    <loginDatasource name=""5"" />
    <pool min=""5"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>
  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>
  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <UnityEditableFilterMaxRows value=""250"" />
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <ERPDateFormat value=""yyyyMMdd"" />
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <FormattedTextIframeSupportedDomains value="""" />
  </Hyland.WorkView.Core>
  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>
  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
    <trustedClients trustMode=""Off"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
  </Hyland.Authentication>
  <!--
    Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
  -->
  <Hyland.Core.IDOL ImageCompression=""70"">
    <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
    <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
  </Hyland.Core.IDOL>
  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->
  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
      <authentication>
        <anonymousAuthentication enabled=""true"" />
        <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
      </authentication>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--<system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>-->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--<system.identityModel.services>
    <federationConfiguration requireSsl=""false"">
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>-->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
    <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
    <DataSources>
      <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
  <location path=""AuthService.asmx"">
  </location>
  <location path=""AuthOptServicePipeline.ashx"">
  </location>
</configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Integrations.LOBBroker.LOBBrokerConfigSection", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test28()
    {
        //Testing the parsing of the 211 system.web section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.web", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test29()
    {
        //Testing the parsing of the 211 system.webServer section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
      <authentication>
        <anonymousAuthentication enabled=""true"" />
        <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
      </authentication>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.webServer", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test30()
    {
        //Testing the parsing of the 211 root section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>
  <connectionStrings>
    <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security Additional Options""
      connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>
  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging TruncateLogValues=""1024"">
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""Splunk"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Splunk"" value=""http://localhost:8989"" />
        <add key=""SplunkToken"" value=""token"" />
        <add key=""SplunkIndex"" value=""Index"" />
        <add key=""SplunkSource"" value=""Source"" />
        <add key=""SplunkSourceType"" value=""Source Type"" />
        <add key=""SplunkHost"" value=""Host"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""DiagnosticsConsole"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Http"" value=""http://localhost:8989"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value=""anothererror"" />
      </Route>
      <Route name=""ErrorEventLog"">
        <add key=""minimum-level"" value=""Error"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
    </Routes>
    <AuditRoutes />
  </Hyland.Logging>
  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>
  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>
  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
    </Apps>
  </Hyland.ResponsiveApps>
  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value=""id"" />
    <ClientSecret value=""secret"" />
    <Username value=""UN"" />
    <Password value=""PW"" />
  </Hyland.ContentComposer.Core>
  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>
  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>
  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value=""0"" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>
  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
    <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
  </Hyland.Services>
  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name=""5"" />
    <loginPassword name=""5"" />
    <loginDatasource name=""5"" />
    <pool min=""5"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>
  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>
  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <UnityEditableFilterMaxRows value=""250"" />
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <ERPDateFormat value=""yyyyMMdd"" />
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <FormattedTextIframeSupportedDomains value="""" />
  </Hyland.WorkView.Core>
  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>
  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
    <trustedClients trustMode=""Off"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
  </Hyland.Authentication>
  <!--
    Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
  -->
  <Hyland.Core.IDOL ImageCompression=""70"">
    <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
    <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
  </Hyland.Core.IDOL>
  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->
  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
      <authentication>
        <anonymousAuthentication enabled=""true"" />
        <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
      </authentication>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--<system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>-->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--<system.identityModel.services>
    <federationConfiguration requireSsl=""false"">
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>-->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
    <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
    <DataSources>
      <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
  <location path=""AuthService.asmx"">
  </location>
  <location path=""AuthOptServicePipeline.ashx"">
  </location>
</configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "root", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test31()
    {
        //Testing the parsing of the 211 ADFS section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":{""systemIdentityModel"":{""audienceUris"":[{""URI"":""https://Audience/URI/"",""id"":null}],""trustedIssuers"":[{""Thumbprint"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Name"":""Optional_Friendly_Name_For_The_Certificate"",""id"":null}]},""systemIdentityModelServices"":{""wsFederation"":{""Issuer"":""https://issuer/adfs/ls/"",""Realm"":""https://realm/URI/""},""serviceCertificate"":{""X509FindType"":""FindByThumbprint"",""FindValue"":""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"",""StoreLocation"":""LocalMachine"",""StoreName"":""My""},""CookieHandlerRequireSSL"":""false""},""knownKeys"":[],""ADFSEnabled"":""false"",""RequestValidationMode"":""2.0"",""AuthenticationMode"":""Windows"",""SynchronizeUserAttributes"":""true"",""AuthenticationOnly"":""2.0""},""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>
  <connectionStrings>
    <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security Additional Options""
      connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>
  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging TruncateLogValues=""1024"">
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""Splunk"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Splunk"" value=""http://localhost:8989"" />
        <add key=""SplunkToken"" value=""token"" />
        <add key=""SplunkIndex"" value=""Index"" />
        <add key=""SplunkSource"" value=""Source"" />
        <add key=""SplunkSourceType"" value=""Source Type"" />
        <add key=""SplunkHost"" value=""Host"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""DiagnosticsConsole"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Http"" value=""http://localhost:8989"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value=""anothererror"" />
      </Route>
      <Route name=""ErrorEventLog"">
        <add key=""minimum-level"" value=""Error"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
    </Routes>
    <AuditRoutes />
  </Hyland.Logging>
  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>
  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>
  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
    </Apps>
  </Hyland.ResponsiveApps>
  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value=""id"" />
    <ClientSecret value=""secret"" />
    <Username value=""UN"" />
    <Password value=""PW"" />
  </Hyland.ContentComposer.Core>
  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>
  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>
  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value=""0"" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>
  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
    <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
  </Hyland.Services>
  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name=""5"" />
    <loginPassword name=""5"" />
    <loginDatasource name=""5"" />
    <pool min=""5"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>
  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>
  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <UnityEditableFilterMaxRows value=""250"" />
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <ERPDateFormat value=""yyyyMMdd"" />
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <FormattedTextIframeSupportedDomains value="""" />
  </Hyland.WorkView.Core>
  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>
  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
    <trustedClients trustMode=""Off"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
  </Hyland.Authentication>
  <!--
    Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
  -->
  <Hyland.Core.IDOL ImageCompression=""70"">
    <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
    <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
  </Hyland.Core.IDOL>
  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->
  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
      <authentication>
        <anonymousAuthentication enabled=""true"" />
        <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
      </authentication>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--<system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>-->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--<system.identityModel.services>
    <federationConfiguration requireSsl=""false"">
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>-->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
    <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
    <DataSources>
      <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
  <location path=""AuthService.asmx"">
  </location>
  <location path=""AuthOptServicePipeline.ashx"">
  </location>
</configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "ADFS", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test32()
    {
        //Testing the parsing of the 211 Hyland.Logging section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure211WithVersionNumber);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":""21.1.38.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":{""windowsEventLogging"":{""SourceName"":""Hyland Application Server""},""Routes"":[{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":null,""splunk"":{""ServerUrl"":""http://localhost:8989"",""SplunkToken"":""token"",""SplunkIndex"":""Index"",""SplunkSource"":""Source"",""SplunkSourceType"":""Source Type"",""SplunkHost"":""Host""},""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""Splunk"",""Name"":""Splunk"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""anothererror""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Exclude""},""eventlog"":null,""splunk"":null,""file"":null,""http"":{""URL"":""http://localhost:8989""},""durablehttp"":null,""console"":null,""RouteType"":""Http"",""Name"":""DiagnosticsConsole"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""5"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":{""SourceName"":""Hyland""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""ErrorEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""asp.net"",""client"",""test"",""dummy""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""NamedPipeCoreEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":{""SourceName"":""Hyland""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""PIMManagerEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null}],""truncateloggingcharacters"":""1024"",""profilesForHTML"":[""asp.net"",""ChangeTracking"",""client"",""configuration"",""error"",""EpicSettings"",""fulltext"",""ihe"",""ldap"",""logging"",""mobile.service"",""None"",""Patient-Window"",""report.services"",""service"",""tcservices"",""timer"",""undefined"",""vbscript"",""wcf"",""workflow"",""cache"",""chromium-service-pim"",""configuration"",""db"",""file"",""hl7"",""image-rendering-pim"",""locking"",""mobile.raw"",""named-pipe-core"",""OnBase"",""pim-manager"",""scriptexecution"",""TC"",""tcverbose"",""trace"",""unity"",""warnings"",""web.service""]},""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Logging TruncateLogValues=""1024"">
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""Splunk"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Splunk"" value=""http://localhost:8989"" />
        <add key=""SplunkToken"" value=""token"" />
        <add key=""SplunkIndex"" value=""Index"" />
        <add key=""SplunkSource"" value=""Source"" />
        <add key=""SplunkSourceType"" value=""Source Type"" />
        <add key=""SplunkHost"" value=""Host"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""DiagnosticsConsole"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Http"" value=""http://localhost:8989"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value=""anothererror"" />
      </Route>
      <Route name=""ErrorEventLog"">
        <add key=""minimum-level"" value=""Error"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
    </Routes>
    <AuditRoutes />
  </Hyland.Logging>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Logging", xmldoc, new DefaultWebApplicationDataStructures());

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test33()
    {
        //Testing the parsing of the 211 Hyland.Authentication section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":{""trustedClients"":[{""StoreLocation"":""LocalMachine"",""StoreName"":""My"",""FindType"":""FindByThumbprint"",""FindValue"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Description"":""OptionalDescription"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindBySubjectName"",""FindValue"":"""",""Description"":""OptionalDescription"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPublisher"",""FindType"":""FindBySubjectDistinguishedName"",""FindValue"":"""",""Description"":""OptionalDescription"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""CertificateAuthority"",""FindType"":""FindByIssuerName"",""FindValue"":"""",""Description"":""OptionalDescription"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""AuthRoot"",""FindType"":""FindByIssuerDistinguishedName"",""FindValue"":"""",""Description"":""OptionalDescription"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""Root"",""FindType"":""FindBySerialNumber"",""FindValue"":"""",""Description"":""OptionalDescription"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""AddressBook"",""FindType"":""FindByTimeValid"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""My"",""FindType"":""FindByTimeNotYetValid"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""Disallowed"",""FindType"":""FindByTimeExpired"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindByTemplateName"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindByApplicationPolicy"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindByCertificatePolicy"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindByExtension"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindByKeyUsage"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindBySubjectKeyIdentifier"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null},{""StoreLocation"":""CurrentUser"",""StoreName"":""TrustedPeople"",""FindType"":""FindByThumbprint"",""FindValue"":"""",""Description"":""<Blank>"",""id"":null}],""TrustMode"":""false""},""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
    <trustedClients trustMode=""Off"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
  </Hyland.Authentication>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Authentication", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test34()
    {
        //Testing the parsing of the translator that came back from the COMACON Helper executable
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var translatorValue = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");

        factory.ParseTranslator(ds, translatorValue);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test35()
    {
        //Tests the parsing of a 21.1 web.config and the iis settings to verify that determine if any of the Optimize for Windows Authentication settings are applied.
        var factory = new DefaultGenericHelperMethods();
        ServerManager manager = new ServerManager();
        Configuration config = manager.GetWebConfiguration("Default Web Site/AppServerx64-211");
        string xmlNode = @"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>
  <connectionStrings>
    <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
      providerName=""System.Data.SqlClient"" />
    <add name=""Oracle TNS Integrated Security Additional Options""
      connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
    <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
      providerName=""Oracle.ManagedDataAccess.Client"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value=""Test"" />
    <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false"" />
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value="""" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
    <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <add key=""AllowInsecureExternalXsl "" value=""false"" />
  </appSettings>
  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging TruncateLogValues=""1024"">
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""Splunk"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Splunk"" value=""http://localhost:8989"" />
        <add key=""SplunkToken"" value=""token"" />
        <add key=""SplunkIndex"" value=""Index"" />
        <add key=""SplunkSource"" value=""Source"" />
        <add key=""SplunkSourceType"" value=""Source Type"" />
        <add key=""SplunkHost"" value=""Host"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""DiagnosticsConsole"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""Http"" value=""http://localhost:8989"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""ErrorEventLog"">
        <add key=""minimum-level"" value=""Error"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value=""asp.net,client"" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""minimum-level"" value=""Information"" />
        <add key=""maximum-level"" value=""Critical"" />
        <add key=""EventLog"" value=""Hyland"" />
        <add key=""DisableIPAddressMasking"" value=""False"" />
        <add key=""include-profiles"" value="""" />
        <add key=""exclude-profiles"" value="""" />
      </Route>
    </Routes>
    <AuditRoutes />
  </Hyland.Logging>
  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>
  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>
  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
    </Apps>
  </Hyland.ResponsiveApps>
  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value=""id"" />
    <ClientSecret value=""secret"" />
    <Username value=""UN"" />
    <Password value=""PW"" />
  </Hyland.ContentComposer.Core>
  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>
  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>
  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value=""0"" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>
  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
    <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
  </Hyland.Services>
  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name=""5"" />
    <loginPassword name=""5"" />
    <loginDatasource name=""5"" />
    <pool min=""5"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>
  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>
  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <UnityEditableFilterMaxRows value=""250"" />
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <ERPDateFormat value=""yyyyMMdd"" />
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <FormattedTextIframeSupportedDomains value="""" />
  </Hyland.WorkView.Core>
  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>
  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
    <trustedClients trustMode=""Off"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
      <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
      <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
  </Hyland.Authentication>
  <!--
    Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
  -->
  <Hyland.Core.IDOL ImageCompression=""70"">
    <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
    <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
  </Hyland.Core.IDOL>
  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->
  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
      <authentication>
        <anonymousAuthentication enabled=""true"" />
        <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
      </authentication>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--<system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>-->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--<system.identityModel.services>
    <federationConfiguration requireSsl=""false"">
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>-->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
    <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
    <DataSources>
      <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
          <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
  <location path=""AuthService.asmx"">
        <system.web>
            <identity impersonate=""true"" />
            <authorization>
                <deny users=""?"" />
            </authorization>
        </system.web>
        <system.webServer>
            <security>
                <authorization>
                    <add accessType=""Deny"" users=""?"" />
                </authorization>
            </security>
        </system.webServer>
  </location>
  <location path=""AuthOptServicePipeline.ashx"">
        <system.web>
            <identity impersonate=""true"" />
            <authorization>
                <deny users=""?"" />
            </authorization>
        </system.web>
        <system.webServer>
            <security>
                <authorization>
                    <add accessType=""Deny"" users=""?"" />
                </authorization>
            </security>
        </system.webServer>
  </location>
</configuration>";
        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };
        XmlNode root = xmldoc.DocumentElement;
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        var translator = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");
        factory.CreateOptimizeWindowsAuthenticationForArray(config, new DefaultWebApplicationDataStructures(), xmldoc, webconfigconfig, "Application Server", translator, root.SelectSingleNode("appSettings"));

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[""ApplicationServer""],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test36()
    {
        var factory = new DefaultGenericHelperMethods();
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        factory.ParseSessionAdministration(webconfigconfig, @"C:\inetpub\wwwroot\AppServerx64-211\Admin\sessionAdminSecurity.config");
        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":{""users"":[{""user"":""MANAGER"",""id"":null},{""user"":""Test"",""id"":null},{""user"":""carle_logon\\dummyaccount"",""id"":null}],""roles"":[{""role"":""Testing"",""id"":null}]},""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test37()
    {
        //Testing the Prebuilding of the 221 appSettings section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseHTMLClientType"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Use-HTML-Client-Type"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"appSettings","add","ServerDesignation","2","Server-Designation","","","",""},
            {"appSettings","add","dmsdatasource","2","Data-Source","[Datasource]","","",""},
            {"appSettings","add","UseOSAuthentication","1","Use-OS-Authentication","false","","",""},
            {"appSettings","add","DocumentQueryWarningThreshold","2","Document-Query-Warning-Threshold","500","","",""},
            {"appSettings","add","DocumentQueryLimit","2","Document-Query-Limit","2000","","",""},
            {"appSettings","add","ItemCacheTimeout","2","Item-Cache-Timeout","60","","",""},
            {"appSettings","add","RawImagesAllowed","1","Raw-Images","true","","",""},
            {"appSettings","add","UseIsolatedImageProcess","1","Use-Isolated-Image-Process","true","","",""},
            {"appSettings","add","CompressionQuality","2","Compression-Quality","70","","",""},
            {"appSettings","add","EnableIsolatedChromiumProcess","1","Enable-Isolated-Chromium-Process","true","","",""},
            {"appSettings","add","FormSaveToTiffTimeout","2","Form-Save-To-TIFF-Timeout","60","","",""},
            {"appSettings","add","PrintImageFormViaPDF","1","Print-Image-Form-Via-PDF","false","","",""},
            {"appSettings","add","TPCFWorkerLocationOverride","2","TPCF-Worker-Location-Override","","","",""},
            {"appSettings","add","DefaultStoragePath","2","Default-Storage-Path","","","",""},
            {"appSettings","add","watchFolder","2","Watch-Folder","","","",""},
            {"appSettings","add","siteIDKeywordType","2","Site-ID-Keyword-Type","Site ID","","",""},
            {"appSettings","add","cleanupTimerInterval","2","Cleanup-Timer-Interval","15","","",""},
            {"appSettings","add","maxFileAgeInHours","2","Max-File-Age","4","","",""},
            {"appSettings","add","ValidateMessageSchema","1","Integrations-EIS-Validate-Message-Schema","true","","",""},
            {"appSettings","add","ContinueOnValidationError","1","Integrations-EIS-Continue-On-Validation-Error","false","","",""},
            {"appSettings","add","DataSetCacheCleanUpIntervalInMins","2","Integrations-EIS-Data-Set-Cache-Cleanup-Interval","60","","",""},
            {"appSettings","add","AppNetDirectory","2","Integrations-EIS-AppNet-Directory","[virtualRoot]","","",""},
            {"appSettings","add","UseHTMLClientType","1","Integrations-EIS-Use-HTML-Client-Type","false","","",""},
            {"appSettings","add","MessageBrokerMonitorStartDelayInMinutes","2","Message-Broker-Monitor-Start-Delay","","","",""},
            {"appSettings","add","GCSUsername","2","GCS-Username","","","",""},
            {"appSettings","add","GCSPassword","2","GCS-Password","","","",""},
            {"appSettings","add","useLegacyKeyForUsageBasedBilling","2","Use-Legacy-Key-For-Usage-Based-Billing","false","","",""},
            {"appSettings","add","GCSPhoneHomeIntervalInMinutes","2","GCS-Phone-Home-Interval","60","","",""},
            {"appSettings","add","DataCaptureServerWCFEndpointAddress","2","Data-Capture-Server-WCF-Endpoint-Address","net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service","","",""},
            {"appSettings","add","AllowInsecureConnection","1","Allow-Insecure-Connections","false","","",""},
            {"appSettings","add","AppServerOrigin","2","OWIN-Application-Server-Origin","[virtualRoot]","","",""},
            {"appSettings","add","owin:AutomaticAppStartup","1","OWIN-Automatic-App-Startup","false","","",""},
            {"appSettings","add","owin:appStartup","2","OWIN-App-Startup","Hyland.Owin.Core.Startup, Hyland.Owin.Core","","",""},
            {"appSettings","add","IdentityModelServerURI","2","Identity-Model-Server-URI","","","",""},
            {"appSettings","add","mobileAppsPath","2","Mobile-Apps-Path","[unc path]","","",""},
            {"appSettings","add","corsPolicy","2","CORS-Policy","*","","",""},
            {"appSettings","add","endpoints:WorkViewMobile","1","WorkView-Mobile-Endpoint","false","","",""},
            {"appSettings","add","endpoints:ResponsiveApps","1","Responsive-Apps-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Wopi","1","WOPI-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Sesame","1","Sesame-Endpoint","false","","",""},
            {"appSettings","add","endpoints:GovernanceRulesAsAService","1","Governance-Rules-As-A-Service-Endpoint","false","","",""},
            {"appSettings","add","endpoints:FHIR","1","Web-BLOB-Passthrough-FHIR-Endpoint","false","","",""},
            {"appSettings","add","SMARTonFHIRApplicationId","2","SMART-On-FHIR-Application-ID","[GUID]","","",""},
            {"appSettings","add","endpoints:PPL","1","PPL-Endpoint-Enabled","false","","",""},
            {"appSettings","add","endpoints:Forms","1","Forms-Endpoint","false","","",""},
            {"appSettings","add","DocPopUrl","2","PPL-DocPop-URL","","","",""},
            {"appSettings","add","StatementCompCacheLimit","2","Statement-Composition-Cache-Limit","","","",""},
            {"appSettings","add","UnityFormsToggleMaxFormWidth","1","Unity-Forms-Toggle-Max-Form-Width","false","","",""},
            {"appSettings","add","owin:oia:msgItemTypeId","2","owin:oia:msgItemTypeId","[Message Item Type ID]","","",""},
            {"appSettings","add","owin:oia:lifeCycleId","2","owin:oia:lifeCycleId","[Lifecycle ID]","","",""},
            {"appSettings","add","owin:oia:tmpFilePath","2","owin:oia:tmpFilePath","[UNC Path]","","",""},
            {"appSettings","add","owin:oia:tmpFileAgeInMs","2","owin:oia:tmpFileAgeInMs","[Temp File Age ms]","","",""},
            {"appSettings","add","owin:oia:cleanupIntervalInMs","2","owin:oia:cleanupIntervalInMs","[Cleanup Interval ms]","","",""},
            {"appSettings","add","UseOnBaseFulltext","1","Use-OnBase-Full-Text","false","","",""},
            {"appSettings","add","ContentComposerIdpPath","2","Content-Composer-IdP-Path","","","",""},
            {"appSettings","add","KeywordDataCacheTimeout","2","Keyword-Data-Cache-Timeout","20","","",""},
            {"appSettings","add","AllowInsecureExternalXsl ","1","Allow-Insecure-External-XSL","false","","",""},
            {"appSettings","add","SB_MaxQueryExecutionParallelism","2","Max-Query-Execution-Parallelism","10","","",""},
            {"appSettings","add","SB_FolderFetchBatchSize","2","Folder-Fetch-Batch-Size","300","","",""},
            {"appSettings","add","SB_DatabaseCommandTimeOut","2","Database-Command-TimeOut","300","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test38()
    {
        //Testing the Prebuilding of the 221 Hyland.ResponsiveApps section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.ResponsiveApps","WorkViewApi","url","2","Responsive-Apps-WorkView-API-URL","https://[Server]/[AppServer]/private/workview/api/","","",""},
            {"Hyland.ResponsiveApps","WorkViewFiles","url","2","Responsive-Apps-WorkView-Files-URL","https://[Server]/[AppServer]/private/workview/files/","","",""},
            {"Hyland.ResponsiveApps","ResponsiveAppsApi","url","2","Responsive-Apps-API-URL","https://[Server]/[AppServer]/private/responsive-apps/api/","","",""},
            {"Hyland.ResponsiveApps","IdentityProvider","url","2","Identity-Provider-URL","https://[Server]/idp/[tenant]/[population]","","",""},
            {"Hyland.ResponsiveApps","CoreAccessTokenLifetime","value","2","Core-Access-Token-Lifetime","691200","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test39()
    {
        //Testing the Prebuilding of the 221 Hyland.PlatterManagement section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.PlatterManagement","Logging/FileIODetail","value","1","File-IO-Detail","false","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/EMCTHRESHOLD","value","2","Foreign-Storage-EMC-Threshold","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheLocation","value","2","Foreign-Storage-PM-Cache-Location","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheTimeout","value","2","Foreign-Storage-PM-Cache-Timeout","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheSize","value","2","Foreign-Storage-PM-Cache-Size","","","",""},
                {"Hyland.PlatterManagement","FileAccess/PMAccessLevel","value","2","PM-File-Access-Level","0","","",""},
                {"Hyland.PlatterManagement","TemporaryFiles/TempFileExpirationThreshold","value","2","Temp-File-Expiration-Threshold-Time","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test40()
    {
        //Testing the Prebuilding of the 221 Hyland.Services section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Services","poolSettings","minSessions","2","Hyland-Services-AppPool-Minimum-Sessions","0","","",""},
            {"Hyland.Services","poolSettings","maxSessions","2","Hyland-Services-AppPool-Maximum-Sessions","10","","",""},
            {"Hyland.Services","securitySettings","useQueryContext","1","Use-Query-Context","false","","",""},
            {"Hyland.Services","securitySettings","filterExceptions","1","Filter-Exceptions","true","","",""},
            {"Hyland.Services","Endpoint","useRemoting","1","Endpoint-Use-Remoting","true","","",""},
            {"Hyland.Services","session","enableTimeout","1","Session-Enable-Timeout","false","","",""},
            {"Hyland.Services","applicationServerCallback","url","2","Application-Server-Callback-URL","","","",""},
            {"Hyland.Services","webServerBaseUrl","url","2","Web-Server-Base-URL","","","",""},
            {"Hyland.Services","requestValidation","minVersion","2","Request-Validation-Minimum-Version","0","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test41()
    {
        //Testing the Prebuilding of the 221 Hyland.XMLServices.DocumentConnector section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.XMLServices.DocumentConnector","loginId","name","2","Login-ID","","","",""},
                {"Hyland.XMLServices.DocumentConnector","loginPassword","name","2","Login-Password","","","",""},
                {"Hyland.XMLServices.DocumentConnector","loginDatasource","name","2","Login-Datasource","","","",""},
                {"Hyland.XMLServices.DocumentConnector","pool","min","2","Pool-Min","0","","",""},
                {"Hyland.XMLServices.DocumentConnector","pool","max","2","Pool-Max","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test42()
    {
        //Testing the Prebuilding of the 221 Hyland.Core.FullText section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.FullText","SearchTimeout","value","2","Search-Timeout","30","","",""},
                {"Hyland.Core.FullText","SearchLog","enableSearchlog","1","Enable-Search-Log","false","","",""},
                {"Hyland.Core.FullText","SearchLog","path","2","Search-Log-Path","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test43()
    {
        //Testing the Prebuilding of the 221 Hyland.WorkView.Core section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.WorkView.Core","UnityEditableFilterMaxRows","value","2","Unity-Editable-Filter-Max-Rows","20","","",""},
                {"Hyland.WorkView.Core","ERPDateFormat","value","2","ERP-Date-Format-LOB-Broker","yyyyMMdd","","",""},
                {"Hyland.WorkView.Core","FormattedTextIframeSupportedDomains","value","2","Formatted-Text-Iframe-Supported-Domains","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test44()
    {
        //Testing the Prebuilding of the 221 Hyland.Core.IDOL section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.IDOL","RemoteOCREngine","remoteServer","2","Remote-OCR-Engine-Remote-Server","localhost","","",""},
                {"Hyland.Core.IDOL","RemoteOCREngine","port","2","Remote-OCR-Engine-Port","9050","","",""},
                {"Hyland.Core.IDOL","RemoteOCREngine","timeOut","2","Remote-OCR-Engine-Timeout","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test45()
    {
        //Testing the Prebuilding of the 221 Hyland.Core.Wopi section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.Wopi","useOfficeWebAppServer","value","2","Use-Office-Online-Server","false","","",""},
                {"Hyland.Core.Wopi","owaServerUri","value","2","Office-Online-Server-URI","https://[servername]/","","",""},
                {"Hyland.Core.Wopi","owaProxyBase","value","2","Office-Online-Server-Proxy-Base","https://[servername]/[appserver]/private","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test46()
    {
        //Testing the Prebuilding of the 221 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheSearchMinChars","2","Vendor-Cache-Search-Minimum-Characters","1","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterKeyedLookupOp","2","Vendor-Master-Keyed-Lookup-Op","GetVenMasterRecordbyVenIDNCompID","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupSequence","2","Vendor-Master-Lookup-Sequence","GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupReturnMultiple","1","Vendor-Master-Lookup-Return-Multiple","false","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheAutoCompleteResultsMax","2","Vendor-Cache-AutoComplete-Result-Max","30","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","IsEnabled","","1","Enable-LOB-Broker-Accounts-Payable","false","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test47()
    {
        //Testing the Prebuilding of the 221 system.web section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"system.web","httpRuntime","maxRequestLength","2","Http-Runtime-Maximum-Request-Length","30000","","",""},
                {"system.web","httpRuntime","executionTimeout","2","Http-Runtime-Execution-Timeout","300","","",""},
                {"system.web","sessionState","timeout","2","Session-Timeout-Length","20","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test48()
    {
        //Testing the Prebuilding of the 221 system.webServer section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"system.webServer","security/requestFiltering/requestLimits","maxAllowedContentLength","2","Max-Allowed-Content-Length","30000000","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test49()
    {
        //Testing the Prebuilding of the 221 root section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"root","Hyland.Core.IDOL","ImageCompression","2","Image-Compression","70","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test50()
    {
        //Testing the parsing of the 221 appSettings section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseHTMLClientType"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Use-HTML-Client-Type"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseHTMLClientType"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Use-HTML-Client-Type"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value="""" />
	<add key=""dmsdatasource"" value=""[Datasource]"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false""/>
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
    <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />

    <!-- Sharebase folder descriptors fetch related configuration-->
    <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
    <add key =""SB_FolderFetchBatchSize"" value =""300""/>
    <!-- Sharebase folder Database Command Time Out in Seconds-->
    <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
  </appSettings>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "appSettings", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test51()
    {
        //Testing the parsing of the 221 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":{""responsiveApps"":[]},""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
        </Apps>
      </Hyland.ResponsiveApps>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.ResponsiveApps", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test52()
    {
        //Testing the parsing of the 221 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":{""diskGroupAliases"":[{""oldname"":""OldName"",""newname"":""NewName"",""type"":""unc"",""id"":null}]},""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value=""0"" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.PlatterManagement", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test53()
    {
        //Testing the parsing of the 221 Hyland.Services section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
  </Hyland.Services>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Services", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test54()
    {
        //Testing the parsing of the 221 Hyland.XMLServices.DocumentConnector section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.XMLServices.DocumentConnector>
        <loginId name=""5"" />
        <loginPassword name=""5"" />
        <loginDatasource name=""5"" />
        <pool min=""5"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.XMLServices.DocumentConnector", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test55()
    {
        //Testing the parsing of the 221 Hyland.Core.FullText section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.FullText", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test56()
    {
        //Testing the parsing of the 221 Hyland.WorkView.Core section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""250"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <UnityEditableFilterMaxRows value=""250"" />
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <ERPDateFormat value=""yyyyMMdd"" />
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <FormattedTextIframeSupportedDomains value="""" />
      </Hyland.WorkView.Core>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.WorkView.Core", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test57()
    {
        //Testing the parsing of the 221 Hyland.Core.IDOL section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.IDOL ImageCompression=""70"">
        <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
        <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
      </Hyland.Core.IDOL>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.IDOL", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test58()
    {
        //Testing the parsing of the 221 Hyland.Core.Wopi section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>
      <connectionStrings>
        <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
          providerName=""System.Data.SqlClient"" />
        <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
          providerName=""System.Data.SqlClient"" />
        <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
          providerName=""System.Data.SqlClient"" />
        <add name=""Oracle TNS Integrated Security Additional Options""
          connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value=""Test"" />
        <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
        <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false"" />
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value="""" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
        <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />
        <add key=""AllowInsecureExternalXsl "" value=""false"" />
      </appSettings>
      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging TruncateLogValues=""1024"">
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""Splunk"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""Splunk"" value=""http://localhost:8989"" />
            <add key=""SplunkToken"" value=""token"" />
            <add key=""SplunkIndex"" value=""Index"" />
            <add key=""SplunkSource"" value=""Source"" />
            <add key=""SplunkSourceType"" value=""Source Type"" />
            <add key=""SplunkHost"" value=""Host"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""DiagnosticsConsole"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""Http"" value=""http://localhost:8989"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value=""anothererror"" />
          </Route>
          <Route name=""ErrorEventLog"">
            <add key=""minimum-level"" value=""Error"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
        </Routes>
        <AuditRoutes />
      </Hyland.Logging>
      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>
      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>
      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
        </Apps>
      </Hyland.ResponsiveApps>
      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value=""id"" />
        <ClientSecret value=""secret"" />
        <Username value=""UN"" />
        <Password value=""PW"" />
      </Hyland.ContentComposer.Core>
      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>
      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>
      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value=""0"" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>
      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      </Hyland.Services>
      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name=""5"" />
        <loginPassword name=""5"" />
        <loginDatasource name=""5"" />
        <pool min=""5"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>
      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>
      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <UnityEditableFilterMaxRows value=""250"" />
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <ERPDateFormat value=""yyyyMMdd"" />
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <FormattedTextIframeSupportedDomains value="""" />
      </Hyland.WorkView.Core>
      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>
      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
        <trustedClients trustMode=""Off"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
      </Hyland.Authentication>
      <!--
        Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
      -->
      <Hyland.Core.IDOL ImageCompression=""70"">
        <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
        <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
      </Hyland.Core.IDOL>
      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->
      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->
        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
          <authentication>
            <anonymousAuthentication enabled=""true"" />
            <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
          </authentication>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--<system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>-->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--<system.identityModel.services>
        <federationConfiguration requireSsl=""false"">
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>-->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
      </runtime>
      <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
        <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
        <DataSources>
          <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
      <location path=""AuthService.asmx"">
      </location>
      <location path=""AuthOptServicePipeline.ashx"">
      </location>
    </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.Wopi", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test59()
    {
        //Testing the parsing of the 221 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>
      <connectionStrings>
        <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
          providerName=""System.Data.SqlClient"" />
        <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
          providerName=""System.Data.SqlClient"" />
        <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
          providerName=""System.Data.SqlClient"" />
        <add name=""Oracle TNS Integrated Security Additional Options""
          connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value=""Test"" />
        <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
        <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false"" />
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value="""" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
        <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />
        <add key=""AllowInsecureExternalXsl "" value=""false"" />
      </appSettings>
      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging TruncateLogValues=""1024"">
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""Splunk"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""Splunk"" value=""http://localhost:8989"" />
            <add key=""SplunkToken"" value=""token"" />
            <add key=""SplunkIndex"" value=""Index"" />
            <add key=""SplunkSource"" value=""Source"" />
            <add key=""SplunkSourceType"" value=""Source Type"" />
            <add key=""SplunkHost"" value=""Host"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""DiagnosticsConsole"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""Http"" value=""http://localhost:8989"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value=""anothererror"" />
          </Route>
          <Route name=""ErrorEventLog"">
            <add key=""minimum-level"" value=""Error"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
        </Routes>
        <AuditRoutes />
      </Hyland.Logging>
      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>
      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>
      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
        </Apps>
      </Hyland.ResponsiveApps>
      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value=""id"" />
        <ClientSecret value=""secret"" />
        <Username value=""UN"" />
        <Password value=""PW"" />
      </Hyland.ContentComposer.Core>
      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>
      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>
      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value=""0"" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>
      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      </Hyland.Services>
      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name=""5"" />
        <loginPassword name=""5"" />
        <loginDatasource name=""5"" />
        <pool min=""5"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>
      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>
      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <UnityEditableFilterMaxRows value=""250"" />
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <ERPDateFormat value=""yyyyMMdd"" />
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <FormattedTextIframeSupportedDomains value="""" />
      </Hyland.WorkView.Core>
      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>
      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
        <trustedClients trustMode=""Off"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
      </Hyland.Authentication>
      <!--
        Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
      -->
      <Hyland.Core.IDOL ImageCompression=""70"">
        <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
        <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
      </Hyland.Core.IDOL>
      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->
      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->
        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
          <authentication>
            <anonymousAuthentication enabled=""true"" />
            <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
          </authentication>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--<system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>-->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--<system.identityModel.services>
        <federationConfiguration requireSsl=""false"">
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>-->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
      </runtime>
      <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
        <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
        <DataSources>
          <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
      <location path=""AuthService.asmx"">
      </location>
      <location path=""AuthOptServicePipeline.ashx"">
      </location>
    </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Integrations.LOBBroker.LOBBrokerConfigSection", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test60()
    {
        //Testing the parsing of the 221 system.web section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->
        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.web", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test61()
    {
        //Testing the parsing of the 221 system.webServer section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
          <authentication>
            <anonymousAuthentication enabled=""true"" />
            <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
          </authentication>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.webServer", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test62()
    {
        //Testing the parsing of the 221 root section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>
      <connectionStrings>
        <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
          providerName=""System.Data.SqlClient"" />
        <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
          providerName=""System.Data.SqlClient"" />
        <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
          providerName=""System.Data.SqlClient"" />
        <add name=""Oracle TNS Integrated Security Additional Options""
          connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
        <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
          providerName=""Oracle.ManagedDataAccess.Client"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value=""Test"" />
        <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
        <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false"" />
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value="""" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
        <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />
        <add key=""AllowInsecureExternalXsl "" value=""false"" />
      </appSettings>
      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging TruncateLogValues=""1024"">
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""Splunk"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""Splunk"" value=""http://localhost:8989"" />
            <add key=""SplunkToken"" value=""token"" />
            <add key=""SplunkIndex"" value=""Index"" />
            <add key=""SplunkSource"" value=""Source"" />
            <add key=""SplunkSourceType"" value=""Source Type"" />
            <add key=""SplunkHost"" value=""Host"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""DiagnosticsConsole"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""Http"" value=""http://localhost:8989"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value=""anothererror"" />
          </Route>
          <Route name=""ErrorEventLog"">
            <add key=""minimum-level"" value=""Error"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""minimum-level"" value=""Information"" />
            <add key=""maximum-level"" value=""Critical"" />
            <add key=""EventLog"" value=""Hyland"" />
            <add key=""DisableIPAddressMasking"" value=""False"" />
            <add key=""include-profiles"" value="""" />
            <add key=""exclude-profiles"" value="""" />
          </Route>
        </Routes>
        <AuditRoutes />
      </Hyland.Logging>
      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>
      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>
      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
        </Apps>
      </Hyland.ResponsiveApps>
      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value=""id"" />
        <ClientSecret value=""secret"" />
        <Username value=""UN"" />
        <Password value=""PW"" />
      </Hyland.ContentComposer.Core>
      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>
      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>
      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value=""0"" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>
      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      </Hyland.Services>
      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name=""5"" />
        <loginPassword name=""5"" />
        <loginDatasource name=""5"" />
        <pool min=""5"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>
      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>
      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <UnityEditableFilterMaxRows value=""250"" />
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <ERPDateFormat value=""yyyyMMdd"" />
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <FormattedTextIframeSupportedDomains value="""" />
      </Hyland.WorkView.Core>
      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>
      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
        <trustedClients trustMode=""Off"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
          <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
          <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
      </Hyland.Authentication>
      <!--
        Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
      -->
      <Hyland.Core.IDOL ImageCompression=""70"">
        <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
        <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
      </Hyland.Core.IDOL>
      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->
      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->
        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
          <authentication>
            <anonymousAuthentication enabled=""true"" />
            <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
          </authentication>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--<system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>-->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--<system.identityModel.services>
        <federationConfiguration requireSsl=""false"">
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>-->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
      </runtime>
      <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
        <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
        <DataSources>
          <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
              <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
      <location path=""AuthService.asmx"">
      </location>
      <location path=""AuthOptServicePipeline.ashx"">
      </location>
    </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "root", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test63()
    {
        //Testing the parsing of the 221 ADFS section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":{""systemIdentityModel"":{""audienceUris"":[{""URI"":""https://Audience/URI/"",""id"":null}],""trustedIssuers"":[{""Thumbprint"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Name"":""Optional_Friendly_Name_For_The_Certificate"",""id"":null}]},""systemIdentityModelServices"":{""wsFederation"":{""Issuer"":""https://issuer/adfs/ls/"",""Realm"":""https://realm/URI/""},""serviceCertificate"":{""X509FindType"":""FindByThumbprint"",""FindValue"":""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"",""StoreLocation"":""LocalMachine"",""StoreName"":""My""},""CookieHandlerRequireSSL"":""false""},""knownKeys"":[],""ADFSEnabled"":""false"",""RequestValidationMode"":""2.0"",""AuthenticationMode"":""Windows"",""SynchronizeUserAttributes"":""true"",""AuthenticationOnly"":""false""},""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>

  <connectionStrings>
    <!-- ADO.NET connection string
      Fill in the [parameters]. Provider name is the database type.-->
	  <add name=""[DataSourceName]"" connectionString=""Data Source=[server\instance];database=[databaseName];User Id=[user name];Password=[password]"" providerName=""[providerName]"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value="""" />
	<add key=""dmsdatasource"" value=""[Datasource]"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false""/>
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
    <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />

    <!-- Sharebase folder descriptors fetch related configuration-->
    <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
    <add key =""SB_FolderFetchBatchSize"" value =""300""/>
    <!-- Sharebase folder Database Command Time Out in Seconds-->
    <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
  </appSettings>

  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging>
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""DiagnosticsConsole"">
        <add key=""Http"" value=""http://localhost:8989"" />
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
      <Route name=""ErrorEventLog"">
        <!-- Write errors to the Event Log using the source specified above -->
        <add key=""HylandLog"" />
        <add key=""minimum-level"" value=""Error"" />
      </Route>
      <!--<Route name=""ELK"">
            <add key=""Http"" value=""http://localhost:5586""/>
            <add key=""CompactHttpFormat""/>
        </Route>-->
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
        <add key=""include-profiles"" value=""named-pipe-core""/>
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""EventLog"" value=""Hyland PIM Manager"" />
        <add key=""include-profiles"" value=""pim-manager""/>
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
    </Routes>
    <AuditRoutes>
      <!--<Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" /> 
        </Route>-->
    </AuditRoutes>
  </Hyland.Logging>

  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>

  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>

  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <!-- <WorkViewApi url=""https://[Server]/[AppServer]/private/workview/api/"" /> -->
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <!-- <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" /> -->
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <!-- <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" /> -->
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <!-- <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" /> -->
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
      <!-- <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" /> -->
    </Apps>
  </Hyland.ResponsiveApps>

  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value="""" />
    <ClientSecret value="""" />
    <Username value="""" />
    <Password value="""" />
  </Hyland.ContentComposer.Core>

  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>

  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>

  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <!-- The alias must map to a mount location which is equal to the contents of physicalplatter.lastuseddrive. -->
      <!-- type attribute can be ""unc"" or ""unix"".  Default is ""unc"" -->
      <!--
      <Alias   oldname=""\\ftp:\anonymous:<pwd>\\ftp-server\:21\\Diskgroups\FTPTest1\copy1"" 
          newname=""\\file-server\DISKGROUPS\FTPTest1\copy1"" 
          type=""unc""/>
      -->
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value="""" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>

  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
  </Hyland.Services>

  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name="""" />
    <loginPassword name="""" />
    <loginDatasource name="""" />
    <pool min=""0"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>

  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>

  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <!--<UnityEditableFilterMaxRows value=""250"" />-->
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <!--<ERPDateFormat value=""yyyyMMdd""/>-->
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <!--<FormattedTextIframeSupportedDomains value=""""/>-->
  </Hyland.WorkView.Core>

  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>

  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
    <trustedClients trustMode=""On"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
  </Hyland.Authentication>

  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->

  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--To use UTC time based cache refresh, set UseUTCTimeCacheRefresh to ""true"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll""
             UseUTCTimeCacheRefresh=""false"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->

  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" />
    <httpCookies httpOnlyCookies=""true"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->

    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--
  <system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris>
            <add value=""https://Audience/URI/"" />
          </audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers>
              <add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" />
            </trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>
  -->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--
  <system.identityModel.services>
    <federationConfiguration>
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>
  -->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Win32.Registry"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.1.1.0"" newVersion=""4.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.5.0"" newVersion=""1.2.5.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Memory"" culture=""neutral"" publicKeyToken=""cc7b13ffcd2ddd51"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.1"" newVersion=""4.0.1.1"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.TypeExtensions"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.1.2.0"" newVersion=""4.1.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Security.Principal.Windows"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.1.3.0"" newVersion=""4.1.3.0"" />
      </dependentAssembly>
    </assemblyBinding>    
  </runtime>
</configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "ADFS", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test64()
    {
        //Testing the parsing of the 221 Hyland.Logging section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure221WithVersionNumber);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":""22.1.8.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":{""windowsEventLogging"":{""SourceName"":""Hyland Application Server""},""Routes"":[{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":null,""splunk"":null,""file"":null,""http"":{""URL"":""http://localhost:8989""},""durablehttp"":null,""console"":null,""RouteType"":""Http"",""Name"":""DiagnosticsConsole"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""5"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":{""SourceName"":""Hyland""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""ErrorEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""named-pipe-core""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland Named Pipe Core""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""NamedPipeCoreEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""pim-manager""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland PIM Manager""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""PIMManagerEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null}],""truncateloggingcharacters"":""1024"",""profilesForHTML"":[""asp.net"",""ChangeTracking"",""client"",""configuration"",""error"",""EpicSettings"",""fulltext"",""ihe"",""ldap"",""logging"",""mobile.service"",""None"",""Patient-Window"",""report.services"",""service"",""tcservices"",""timer"",""undefined"",""vbscript"",""wcf"",""workflow"",""cache"",""chromium-service-pim"",""configuration"",""db"",""file"",""hl7"",""image-rendering-pim"",""locking"",""mobile.raw"",""named-pipe-core"",""OnBase"",""pim-manager"",""scriptexecution"",""TC"",""tcverbose"",""trace"",""unity"",""warnings"",""web.service""]},""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Logging>
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""DiagnosticsConsole"">
        <add key=""Http"" value=""http://localhost:8989"" />
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
      <Route name=""ErrorEventLog"">
        <!-- Write errors to the Event Log using the source specified above -->
        <add key=""HylandLog"" />
        <add key=""minimum-level"" value=""Error"" />
      </Route>
      <!--<Route name=""ELK"">
            <add key=""Http"" value=""http://localhost:5586""/>
            <add key=""CompactHttpFormat""/>
        </Route>-->
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
        <add key=""include-profiles"" value=""named-pipe-core""/>
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""EventLog"" value=""Hyland PIM Manager"" />
        <add key=""include-profiles"" value=""pim-manager""/>
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
    </Routes>
    <AuditRoutes>
      <!--<Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" /> 
        </Route>-->
    </AuditRoutes>
  </Hyland.Logging>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Logging", xmldoc, new DefaultWebApplicationDataStructures());

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test65()
    {
        //Testing the parsing of the 221 Hyland.Authentication section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":{""trustedClients"":[{""StoreLocation"":""LocalMachine"",""StoreName"":""My"",""FindType"":""FindByThumbprint"",""FindValue"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Description"":""OptionalDescription"",""id"":null}],""TrustMode"":""true""},""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
    <trustedClients trustMode=""On"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
  </Hyland.Authentication>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Authentication", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test66()
    {
        //Testing the parsing of the translator that came back from the COMACON Helper executable
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var translatorValue = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");

        factory.ParseTranslator(ds, translatorValue);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test67()
    {
        //Tests the parsing of a 21.1 web.config and the iis settings to verify that determine if any of the Optimize for Windows Authentication settings are applied.
        var factory = new DefaultGenericHelperMethods();
        ServerManager manager = new ServerManager();
        Configuration config = manager.GetWebConfiguration("Default Web Site/AppServerx64-221");
        string xmlNode = @"<?xml version=""1.0"" encoding=""utf-8""?>
<configuration>
  <configSections>
    <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
    <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
    <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
    <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
    <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
    <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
    <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
    <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
    <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
    <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
    <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
    <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
    <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
    <!-- ADFS sections -->
    <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
    <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
    <!-- End ADFS sections -->
    <!--LOB Broker Section-->
    <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
    <!--End LOB Broker Section-->
    <!-- External Access Client section -->
    <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
    <!-- End External Access Client section-->
    <!-- Responsive Apps section-->
    <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
    <!-- End Responsive Apps section-->
    <!-- SharePoint Integration section -->
    <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
    <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
    <!-- End SharePoint Integration section -->
    <!-- Content Composer section -->
    <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
    <!-- End Content Composer section -->
  </configSections>

  <connectionStrings>
    <!-- ADO.NET connection string
      Fill in the [parameters]. Provider name is the database type.-->
	  <add name=""[DataSourceName]"" connectionString=""Data Source=[server\instance];database=[databaseName];User Id=[user name];Password=[password]"" providerName=""[providerName]"" />
  </connectionStrings>
  <appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value="""" />
	<add key=""dmsdatasource"" value=""[Datasource]"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""false""/>
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
    <add key=""UseHTMLClientType"" value=""false"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
    <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />

    <!-- Sharebase folder descriptors fetch related configuration-->
    <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
    <add key =""SB_FolderFetchBatchSize"" value =""300""/>
    <!-- Sharebase folder Database Command Time Out in Seconds-->
    <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
  </appSettings>

  <!--HYLAND DIAGNOSTICS
    Used for debugging on machines with Hyland.Logging installed
    -->
  <Hyland.Logging>
    <WindowsEventLogging sourcename=""Hyland Application Server"" />
    <Routes>
      <Route name=""DiagnosticsConsole"">
        <add key=""Http"" value=""http://localhost:8989"" />
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
      <Route name=""ErrorEventLog"">
        <!-- Write errors to the Event Log using the source specified above -->
        <add key=""HylandLog"" />
        <add key=""minimum-level"" value=""Error"" />
      </Route>
      <!--<Route name=""ELK"">
            <add key=""Http"" value=""http://localhost:5586""/>
            <add key=""CompactHttpFormat""/>
        </Route>-->
      <Route name=""NamedPipeCoreEventLog"">
        <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
        <add key=""include-profiles"" value=""named-pipe-core""/>
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
      <Route name=""PIMManagerEventLog"">
        <add key=""EventLog"" value=""Hyland PIM Manager"" />
        <add key=""include-profiles"" value=""pim-manager""/>
        <!-- <add key=""minimum-level"" value=""Trace"" /> -->
      </Route>
    </Routes>
    <AuditRoutes>
      <!--<Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" /> 
        </Route>-->
    </AuditRoutes>
  </Hyland.Logging>

  <Hyland.Web.AppServerPop>
    <EnableChecksum value=""false"" />
    <ChecksumKey value="""" />
    <EnableLegacyChecksumCreation value=""false"" />
  </Hyland.Web.AppServerPop>

  <Hyland.Applications.Portals.ExternalAccess>
    <username value="""" />
    <password value="""" />
    <minPoolSize value=""0"" />
    <maxPoolSize value=""0"" />
  </Hyland.Applications.Portals.ExternalAccess>

  <Hyland.ResponsiveApps>
    <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
    <!-- <WorkViewApi url=""https://[Server]/[AppServer]/private/workview/api/"" /> -->
    <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
    <!-- <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" /> -->
    <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
    <!-- <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" /> -->
    <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
    <!-- <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" /> -->
    <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
    <CoreAccessTokenLifetime value=""691200"" />
    <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
    <Apps>
      <!-- <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" /> -->
    </Apps>
  </Hyland.ResponsiveApps>

  <!-- Content Composer settings -->
  <Hyland.ContentComposer.Core>
    <ClientId value="""" />
    <ClientSecret value="""" />
    <Username value="""" />
    <Password value="""" />
  </Hyland.ContentComposer.Core>

  <!-- SharePoint Integrations settings -->
  <Hyland.Applications.Sharepoint.Services>
    <PoolSize max=""5"" min=""1"" />
    <ExpandKeysets value=""true"" />
  </Hyland.Applications.Sharepoint.Services>

  <Hyland.Applications.Sharepoint.SearchAdapter>
    <PoolSize max=""4"" min=""1"" />
    <DataSource name=""[DATASOURCE]"" />
    <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
    <StripDomainOnSecurityCheck value=""true"" />
    <isDocPop value=""true"" />
  </Hyland.Applications.Sharepoint.SearchAdapter>

  <!-- End SharePoint Integrations settings-->
  <Hyland.PlatterManagement>
    <Logging>
      <!-- This controls whether file I/O details (reading and writing) are logged. -->
      <FileIODetail value=""false"" />
    </Logging>
    <DiskgroupAlias>
      <!-- The alias must map to a mount location which is equal to the contents of physicalplatter.lastuseddrive. -->
      <!-- type attribute can be ""unc"" or ""unix"".  Default is ""unc"" -->
      <!--
      <Alias   oldname=""\\ftp:\anonymous:<pwd>\\ftp-server\:21\\Diskgroups\FTPTest1\copy1"" 
          newname=""\\file-server\DISKGROUPS\FTPTest1\copy1"" 
          type=""unc""/>
      -->
    </DiskgroupAlias>
    <ForeignStorageDevices>
      <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
      <EMCTHRESHOLD value="""" />
      <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
      <PmCacheLocation value="""" />
      <!-- Path to cache location -->
      <PmCacheTimeout value="""" />
      <!-- Timeout in minutes.  Default is 60 minutes. -->
      <PmCacheSize value="""" />
      <!-- Cache size in MB.  Default is 500. -->
    </ForeignStorageDevices>
    <FileAccess>
      <PMAccessLevel value="""" />
      <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
    </FileAccess>
    <TemporaryFiles>
      <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
      <TempFileExpirationThreshold value="""" />
    </TemporaryFiles>
  </Hyland.PlatterManagement>

  <Hyland.Services>
    <!-- POOL SETTINGS
      Controls the size of the session pools when using disconnected web services.

      minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
      available in the session pool.

      maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
      available in the session pool.  Requests from the pool that exceed this value will block
      until another session is placed back into the pool.
    -->
    <poolSettings minSessions=""0"" maxSessions=""10"">
      <!-- Parameters that should be used in the session pool.
         parameter
          (attributes: 
          name = ""[licenseType]""
          value = ""[queryMeter]"" use query metering)
      -->
      <!--
      <parameters>
        <parameter name=""licenseType"" value=""queryMeter""/>
      </parameters
      -->
      <!-- Allows specification of a Service Login for use in Session Pools.  -->
      <!--
        <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
      -->
    </poolSettings>
    <!-- SECURITY SETTINGS
      Controls the security behavior of the Hyland APIs.

      useQueryContext (default false) - This parameter indicates if query context security will be
      used during the course of retrieval.  Query context means that a document must be retrieved
      through a document query before the document itself is accessible via another call.  If this
      parameter is omitted, the default is true.  Note: this value should be set to false when being
      used for disconnected web services.

      filterExceptions (default true) - This parameter indicates if the application server should not 
      send detailed information about exception. For example, the exact stack trace of the exception will 
      be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
      is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
      an authorized user.
    -->
    <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
    <Endpoint useRemoting=""true"" />
    <!-- SESSION SETTINGS
     Controls the session behavior.

     enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
     If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
     The timeout period is based on the ASP.NET session timeout found in the system.web\session 
     section with a minimum of 10 minutes-->
    <session enableTimeout=""false"" />
    <applicationServerCallback url="""" />
    <webServerBaseUrl url="""" />
    <!--requestValidation increases the security of your application server installation. It controls the level at 
    which the application server will validate client requests.

    Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
    server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
    coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
    only supported validation level.

    Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
    valid source. Note that if older clients are communicating to the application server that do not support request
    validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
    the application server. If there are clients older than the release version of the application server that will not
    be upgraded you should leave this value at zero (0).-->
    <requestValidation minVersion=""0"" />
  </Hyland.Services>

  <!--
    The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
    -->
  <Hyland.XMLServices.DocumentConnector>
    <loginId name="""" />
    <loginPassword name="""" />
    <loginDatasource name="""" />
    <pool min=""0"" max=""5"" />
  </Hyland.XMLServices.DocumentConnector>

  <!--
    The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
  -->
  <Hyland.Core.FullText>
    <!-- The length of time (in seconds) before the search will timeout. -->
    <SearchTimeout value=""30"" />
    <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
    <SearchLog enableSearchlog=""false"" path="""" />
  </Hyland.Core.FullText>

  <!--
    The Hyland.Core.WorkView block defines options used by WorkView.
  -->
  <Hyland.WorkView.Core>
    <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
    <!--<UnityEditableFilterMaxRows value=""250"" />-->
    <!--Sets the ERP date format for processing results for LOB Broker classes.-->
    <!--<ERPDateFormat value=""yyyyMMdd""/>-->
    <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
		Example:

			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
			only allow sandbox overrides for that specific domain and sub-domain. 
		-->
    <!--<FormattedTextIframeSupportedDomains value=""""/>-->
  </Hyland.WorkView.Core>

  <Hyland.Core.Media />
  <Hyland.Core.Media.HostedApplicationServer>
    <url value="""" />
    <datasource value="""" />
    <username value="""" />
    <password value="""" />
  </Hyland.Core.Media.HostedApplicationServer>

  <Hyland.Authentication>
    <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
    <trustedClients trustMode=""On"">
      <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
    </trustedClients>
    <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
  </Hyland.Authentication>

  <!--
    Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
    The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
    The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
    The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
  -->
  <!--<Hyland.Core.Wopi>
 <useOfficeWebAppServer value=""false""/>
    <owaServerUri value=""https://[servername]/""/>
    <owaProxyBase value=""https://[servername]/[appserver]/private"" />
  </Hyland.Core.Wopi>-->

  <!-- Uncomment this section to enable LOB Broker Integration -->
  <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
    <AccountsPayableAPI
       VendorCacheSearchMinChars=""1""
        VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
        VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
        VendorMasterLookupReturnMultiple=""false""
         VendorCacheAutoCompleteResultsMax=""30""  />

    <DataSources>
      -->
  <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
  <!--To use UTC time based cache refresh, set UseUTCTimeCacheRefresh to ""true"".-->
  <!--
      <DataSource Name=""APAcceleratorRelay""
             API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
             API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
             LOB_RelayEndpoint =""LOBBrokerEndpoint""
             Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll""
             UseUTCTimeCacheRefresh=""false"">

        <Operations>
          <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
          <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
        </Operations>
      </DataSource>
    </DataSources>
  </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->

  <system.web>
    <webServices>
      <protocols>
        <add name=""HttpGet"" />
        <add name=""HttpPost"" />
        <add name=""HttpPostLocalhost"" />
        <add name=""Documentation"" />
      </protocols>
    </webServices>
    <!--  HTTPRUNTIME
      By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
      need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
      By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
      If uploading large documents, the executionTimeout value may need to be increased for proper processing.

      If uploads larger than 30MB are required, additional changes are required.
      Refer to the maxAllowedContentLength comments for information regarding the changes.
     -->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" />
    <httpCookies httpOnlyCookies=""true"" />
    <!-- IDENTITY
      By setting impersonate=""true"" the username and password set in the registry will be used
      when the application is started.

      For the Web Server, impersonation is (most likely) not needed. The default account of
      NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
      permissions to communicate with the Application Server.

      Use Impersonation on the Application Server for proper NTFS file security.
      When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
      the Application Server will require a user with additional permissions to complete user authentication.

      Use a user with rights to the domain to allow NTFS file security.
      Use a user with Account Operator rights to allow Domain Authentication.

      Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
        aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

      NOTE: Each time aspnet_setreg.exe is run, the security on the 
        HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
        the security to allow read permissions by the user running the ASP .Net worker process.
    -->
    <!--
    <identity impersonate=""false""
      userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
      password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
    />
    -->

    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug=""true"" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
    -->
    <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
    <!--  CUSTOM ERROR MESSAGES
        Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
        Add <error> tags for each of the errors you want to handle.

        ""On"" Always display custom (friendly) messages.
        ""Off"" Always display detailed ASP.NET error information.
        ""RemoteOnly"" Display custom (friendly) messages only to users not running 
        on the local Web server. This setting is recommended for security purposes, so 
        that you do not display application detail information to remote clients.
    -->
    <customErrors mode=""RemoteOnly"" />
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are ""Windows"", 
      ""Forms"", ""Passport"" and ""None""

      ""None"" No authentication is performed. 
      ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      ""Passport"" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode=""Windows"" />
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
      (unauthenticated) users.
    -->
    <authorization>
      <allow users=""*"" />
      <!-- Allow all users -->
      <!--  <allow     users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
          <deny      users=""[comma separated list of users]""
                roles=""[comma separated list of roles]""/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the ""trace.axd"" page from your web application
      root.
    -->
    <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless=""true"".
    -->
    <sessionState mode=""Off"" timeout=""20"" />
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
    <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
  </system.web>
  <system.net>
    <connectionManagement>
      <add address=""*"" maxconnection=""24"" />
    </connectionManagement>
  </system.net>
  <system.webServer>
    <validation validateIntegratedModeConfiguration=""false"" />
    <modules>
      <!-- Http Trace -->
    </modules>
    <handlers>
      <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
      <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Welcome Integration (Kiosk) -->
      <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
      <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- Http Trace -->
      <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
      <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
      <!-- OIA requires GET,POST,PUT,DELETE -->
      <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
    </handlers>
    <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
    <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
    <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
    <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
    <!--Uncomment the section below and enter the value as needed.-->
    <!--This setting should be changed in both the web and application server's web.config.-->
    <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength=""30000000"" />
      </requestFiltering>
    </security>
    <defaultDocument>
      <files>
        <clear />
        <add value=""service.asmx"" />
      </files>
    </defaultDocument>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <applicationInitialization skipManagedModules=""true"">
        <add initializationPage=""/Service.svc"" />
    </applicationInitialization>
    -->
    <!-- ""Powered By"" header removal -->
    <httpProtocol>
      <customHeaders>
        <remove name=""X-Powered-By"" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.diagnostics>
    <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
        Trace Level	    | Nature of the Tracked Events
        ================================================================
        Off	            - N/A
        Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
        Verbose	        - ""Positive"" events: events that mark successful milestones.
        Information	    - ""Positive"" events: events that mark successful milestones.
        ActivityTracing	- Flow events between processing activities and components.
        All	            - Application may function properly. All events are emitted.
      -->
    <sources>
      <!-- Logs all stages of WCF pipeline -->
      <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs messages flowing through pipeline -->
      <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
      <!-- Logs when objects are read or written -->
      <source name=""System.Runtime.Serialization"" switchValue=""Off"">
        <listeners>
          <add name=""wcf_log"" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
    </sharedListeners>
    <trace autoflush=""true"" />
    <switches>
      <!-- 
            This switch controls tracing globally through Hyland.Logging.
            It configures the level of information from Trace that is logged.
            For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
            minimal, normal, detailed, or verbose messages, respectively.
            -->
      <add name=""hylandTracing"" value=""0"" />
    </switches>
  </system.diagnostics>
  <configProtectedData>
    <providers>
      <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
    </providers>
  </configProtectedData>
  <!--
  The system.identityModel section is used to enable Windows Identity Foundation options.

  The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
  The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
  -->
  <!--
  <system.identityModel>
    <identityConfiguration saveBootstrapContext=""true"">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration>
          <audienceUris>
            <add value=""https://Audience/URI/"" />
          </audienceUris>
          <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
            <trustedIssuers>
              <add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" />
            </trustedIssuers>
          </issuerNameRegistry>
        </securityTokenHandlerConfiguration>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>
  -->
  <!--
  system.identityModel.services is used to configure authentication using the WS-Federation protocol.

  wsFederation node
    The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
    The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

  The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
  -->
  <!--
  <system.identityModel.services>
    <federationConfiguration>
      <cookieHandler requireSsl=""false"" />
      <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
      <serviceCertificate>
        <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>
  -->
  <system.serviceModel>
    <!-- WCF Logging -->
    <diagnostics>
      <!-- Enable Message Logging here. -->
      <!-- log all messages received or sent at the transport or service model levels -->
      <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
    <services>
      <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
        <!-- ""Azure Service Bus Endpoint"" section 
            This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
            it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
            NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
        <!--
      <endpoint binding=""netTcpRelayBinding"" 
                bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                contract=""Hyland.Services.Web.IAppServerService"" 
                behaviorConfiguration=""sbTokenProvider"" 
                address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
      -->
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
      </service>
      <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
        <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
        <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
      </service>
      <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
        <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
        <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
      </service>
    </services>
    <client>
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
      <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
      <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
      <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
      To use the endpoint in a non secure channel(http)
      1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
      2. change the address url to use http scheme -->
      <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
          <security mode=""Transport"" />
        </binding>
        <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
        <binding name=""APIServiceSoap"">
          <security mode=""TransportWithMessageCredential"" />
        </binding>
        <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
        </binding>
        <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
          <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
          <security mode=""TransportWithMessageCredential"">
            <transport clientCredentialType=""None"" />
            <message clientCredentialType=""Certificate"" />
          </security>
        </binding>
        <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""None"" />
        </binding>
        <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
          <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
          <security mode=""Transport"">
            <transport clientCredentialType=""None"" />
          </security>
        </binding>
        <binding name=""SPSearchBinding"">
          <security mode=""TransportCredentialOnly"">
            <transport clientCredentialType=""Windows"" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name=""clientCert"">
          <clientCredentials>
            <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
          </clientCredentials>
        </behavior>
        <behavior name=""LOBBrokerClientCertificateAuthentication"">
          <clientCredentials>
            <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name=""AppServerBehavior"">
          <serviceMetadata httpGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <behavior name=""SPSearchBehavior"">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
          <useRequestHeadersForMetadataAddress />
        </behavior>
        <!-- Default Behavior -->
        <behavior name="""">
          <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
          <serviceDebug includeExceptionDetailInFaults=""false"" />
        </behavior>
      </serviceBehaviors>
      <!-- ""Azure Service Bus Endpoint"" section -->
      <!--
        <endpointBehaviors>
            <behavior name=""sbTokenProvider"">
                <transportClientEndpointBehavior>
                    <tokenProvider>
                        <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                    </tokenProvider>
                </transportClientEndpointBehavior>
        </behavior>
        </endpointBehaviors>
        -->
    </behaviors>
    <!-- ""Azure Service Bus Endpoint"" section -->
    <!--
    <extensions>
      <behaviorExtensions>
         <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
      </bindingExtensions>
    </extensions>
    -->
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
        <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Microsoft.Win32.Registry"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.1.1.0"" newVersion=""4.1.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.2.5.0"" newVersion=""1.2.5.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Memory"" culture=""neutral"" publicKeyToken=""cc7b13ffcd2ddd51"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.1.1"" newVersion=""4.0.1.1"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.TypeExtensions"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.1.2.0"" newVersion=""4.1.2.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
        <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
      <dependentAssembly>
        <assemblyIdentity name=""System.Security.Principal.Windows"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
        <bindingRedirect oldVersion=""0.0.0.0-4.1.3.0"" newVersion=""4.1.3.0"" />
      </dependentAssembly>
    </assemblyBinding>    
  </runtime>
</configuration>";
        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };
        XmlNode root = xmldoc.DocumentElement;
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        var translator = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");
        factory.CreateOptimizeWindowsAuthenticationForArray(config, new DefaultWebApplicationDataStructures(), xmldoc, webconfigconfig, "Application Server", translator, root.SelectSingleNode("appSettings"));

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test68()
    {
        var factory = new DefaultGenericHelperMethods();
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        factory.ParseSessionAdministration(webconfigconfig, @"C:\inetpub\wwwroot\AppServerx64-221\Admin\sessionAdminSecurity.config");
        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":{""users"":[],""roles"":[]},""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test69()
    {
        //Testing the Prebuilding of the 231 appSettings section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocLinkerSMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""Doc-Linker-SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseNewKeywordDataCacheImplementation"",""type"":""1"",""htmlIdName"":""Use-New-Keyword-Data-Cache-Implementation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ConfigurationImport_DatabaseTimeout"",""type"":""2"",""htmlIdName"":""Configuration-Import-Database-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:ExternalBaseUri"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:ExternalBaseUri"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:Port"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:Port"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ImageProcess"",""type"":""1"",""htmlIdName"":""PIM:ImageProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ChromiumProcess"",""type"":""1"",""htmlIdName"":""PIM:ChromiumProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""HyRCS:PageCountLimit"",""type"":""2"",""htmlIdName"":""HyRCS:PageCountLimit"",""Value"":""10000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"appSettings","add","ServerDesignation","2","Server-Designation","","","",""},
            {"appSettings","add","dmsdatasource","2","Data-Source","[Datasource]","","",""},
            {"appSettings","add","UseOSAuthentication","1","Use-OS-Authentication","false","","",""},
            {"appSettings","add","DocumentQueryWarningThreshold","2","Document-Query-Warning-Threshold","500","","",""},
            {"appSettings","add","DocumentQueryLimit","2","Document-Query-Limit","2000","","",""},
            {"appSettings","add","ItemCacheTimeout","2","Item-Cache-Timeout","60","","",""},
            {"appSettings","add","RawImagesAllowed","1","Raw-Images","true","","",""},
            {"appSettings","add","UseIsolatedImageProcess","1","Use-Isolated-Image-Process","true","","",""},
            {"appSettings","add","CompressionQuality","2","Compression-Quality","70","","",""},
            {"appSettings","add","EnableIsolatedChromiumProcess","1","Enable-Isolated-Chromium-Process","true","","",""},
            {"appSettings","add","FormSaveToTiffTimeout","2","Form-Save-To-TIFF-Timeout","60","","",""},
            {"appSettings","add","PrintImageFormViaPDF","1","Print-Image-Form-Via-PDF","false","","",""},
            {"appSettings","add","TPCFWorkerLocationOverride","2","TPCF-Worker-Location-Override","","","",""},
            {"appSettings","add","DefaultStoragePath","2","Default-Storage-Path","","","",""},
            {"appSettings","add","watchFolder","2","Watch-Folder","","","",""},
            {"appSettings","add","siteIDKeywordType","2","Site-ID-Keyword-Type","Site ID","","",""},
            {"appSettings","add","cleanupTimerInterval","2","Cleanup-Timer-Interval","15","","",""},
            {"appSettings","add","maxFileAgeInHours","2","Max-File-Age","4","","",""},
            {"appSettings","add","ValidateMessageSchema","1","Integrations-EIS-Validate-Message-Schema","true","","",""},
            {"appSettings","add","ContinueOnValidationError","1","Integrations-EIS-Continue-On-Validation-Error","false","","",""},
            {"appSettings","add","DataSetCacheCleanUpIntervalInMins","2","Integrations-EIS-Data-Set-Cache-Cleanup-Interval","60","","",""},
            {"appSettings","add","AppNetDirectory","2","Integrations-EIS-AppNet-Directory","[virtualRoot]","","",""},
            {"appSettings","add","MessageBrokerMonitorStartDelayInMinutes","2","Message-Broker-Monitor-Start-Delay","","","",""},
            {"appSettings","add","GCSUsername","2","GCS-Username","","","",""},
            {"appSettings","add","GCSPassword","2","GCS-Password","","","",""},
            {"appSettings","add","useLegacyKeyForUsageBasedBilling","2","Use-Legacy-Key-For-Usage-Based-Billing","false","","",""},
            {"appSettings","add","GCSPhoneHomeIntervalInMinutes","2","GCS-Phone-Home-Interval","60","","",""},
            {"appSettings","add","DataCaptureServerWCFEndpointAddress","2","Data-Capture-Server-WCF-Endpoint-Address","net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service","","",""},
            {"appSettings","add","AllowInsecureConnection","1","Allow-Insecure-Connections","false","","",""},
            {"appSettings","add","AppServerOrigin","2","OWIN-Application-Server-Origin","[virtualRoot]","","",""},
            {"appSettings","add","owin:AutomaticAppStartup","1","OWIN-Automatic-App-Startup","false","","",""},
            {"appSettings","add","owin:appStartup","2","OWIN-App-Startup","Hyland.Owin.Core.Startup, Hyland.Owin.Core","","",""},
            {"appSettings","add","IdentityModelServerURI","2","Identity-Model-Server-URI","","","",""},
            {"appSettings","add","mobileAppsPath","2","Mobile-Apps-Path","[unc path]","","",""},
            {"appSettings","add","corsPolicy","2","CORS-Policy","*","","",""},
            {"appSettings","add","endpoints:WorkViewMobile","1","WorkView-Mobile-Endpoint","false","","",""},
            {"appSettings","add","endpoints:ResponsiveApps","1","Responsive-Apps-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Wopi","1","WOPI-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Sesame","1","Sesame-Endpoint","false","","",""},
            {"appSettings","add","endpoints:GovernanceRulesAsAService","1","Governance-Rules-As-A-Service-Endpoint","false","","",""},
            {"appSettings","add","endpoints:FHIR","1","Web-BLOB-Passthrough-FHIR-Endpoint","false","","",""},
            {"appSettings","add","SMARTonFHIRApplicationId","2","SMART-On-FHIR-Application-ID","[GUID]","","",""},
            {"appSettings","add","endpoints:PPL","1","PPL-Endpoint-Enabled","false","","",""},
            {"appSettings","add","endpoints:Forms","1","Forms-Endpoint","false","","",""},
            {"appSettings","add","DocPopUrl","2","PPL-DocPop-URL","","","",""},
            {"appSettings","add","StatementCompCacheLimit","2","Statement-Composition-Cache-Limit","","","",""},
            {"appSettings","add","UnityFormsToggleMaxFormWidth","1","Unity-Forms-Toggle-Max-Form-Width","false","","",""},
            {"appSettings","add","owin:oia:msgItemTypeId","2","owin:oia:msgItemTypeId","[Message Item Type ID]","","",""},
            {"appSettings","add","owin:oia:lifeCycleId","2","owin:oia:lifeCycleId","[Lifecycle ID]","","",""},
            {"appSettings","add","owin:oia:tmpFilePath","2","owin:oia:tmpFilePath","[UNC Path]","","",""},
            {"appSettings","add","owin:oia:tmpFileAgeInMs","2","owin:oia:tmpFileAgeInMs","[Temp File Age ms]","","",""},
            {"appSettings","add","owin:oia:cleanupIntervalInMs","2","owin:oia:cleanupIntervalInMs","[Cleanup Interval ms]","","",""},
            {"appSettings","add","UseOnBaseFulltext","1","Use-OnBase-Full-Text","false","","",""},
            {"appSettings","add","ContentComposerIdpPath","2","Content-Composer-IdP-Path","","","",""},
            {"appSettings","add","KeywordDataCacheTimeout","2","Keyword-Data-Cache-Timeout","20","","",""},
            {"appSettings","add","AllowInsecureExternalXsl ","1","Allow-Insecure-External-XSL","false","","",""},
            {"appSettings","add","SB_MaxQueryExecutionParallelism","2","Max-Query-Execution-Parallelism","10","","",""},
            {"appSettings","add","SB_FolderFetchBatchSize","2","Folder-Fetch-Batch-Size","300","","",""},
            {"appSettings","add","SB_DatabaseCommandTimeOut","2","Database-Command-TimeOut","300","","",""},
            {"appSettings","add","DocLinkerSMARTonFHIRApplicationId","2","Doc-Linker-SMART-On-FHIR-Application-ID","[GUID]","","",""},
            {"appSettings","add","UseNewKeywordDataCacheImplementation","1","Use-New-Keyword-Data-Cache-Implementation","false","","",""},
            {"appSettings","add","ConfigurationImport_DatabaseTimeout","2","Configuration-Import-Database-Timeout","300","","",""},
            {"appSettings","add","PIM:HyRCS:ExternalBaseUri","2","PIM:HyRCS:ExternalBaseUri","","","",""},
            {"appSettings","add","PIM:HyRCS:Port","2","PIM:HyRCS:Port","","","",""},
            {"appSettings","add","PIM:ImageProcess","1","PIM:ImageProcess","false","","",""},
            {"appSettings","add","PIM:ChromiumProcess","1","PIM:ChromiumProcess","false","","",""},
            {"appSettings","add","HyRCS:PageCountLimit","2","HyRCS:PageCountLimit","10000","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test70()
    {
        //Testing the Prebuilding of the 231 Hyland.ResponsiveApps section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.ResponsiveApps","WorkViewApi","url","2","Responsive-Apps-WorkView-API-URL","https://[Server]/[AppServer]/private/workview/api/","","",""},
            {"Hyland.ResponsiveApps","WorkViewFiles","url","2","Responsive-Apps-WorkView-Files-URL","https://[Server]/[AppServer]/private/workview/files/","","",""},
            {"Hyland.ResponsiveApps","ResponsiveAppsApi","url","2","Responsive-Apps-API-URL","https://[Server]/[AppServer]/private/responsive-apps/api/","","",""},
            {"Hyland.ResponsiveApps","IdentityProvider","url","2","Identity-Provider-URL","https://[Server]/idp/[tenant]/[population]","","",""},
            {"Hyland.ResponsiveApps","CoreAccessTokenLifetime","value","2","Core-Access-Token-Lifetime","691200","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test71()
    {
        //Testing the Prebuilding of the 231 Hyland.PlatterManagement section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.PlatterManagement","Logging/FileIODetail","value","1","File-IO-Detail","false","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/EMCTHRESHOLD","value","2","Foreign-Storage-EMC-Threshold","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheLocation","value","2","Foreign-Storage-PM-Cache-Location","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheTimeout","value","2","Foreign-Storage-PM-Cache-Timeout","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheSize","value","2","Foreign-Storage-PM-Cache-Size","","","",""},
                {"Hyland.PlatterManagement","FileAccess/PMAccessLevel","value","2","PM-File-Access-Level","0","","",""},
                {"Hyland.PlatterManagement","TemporaryFiles/TempFileExpirationThreshold","value","2","Temp-File-Expiration-Threshold-Time","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test72()
    {
        //Testing the Prebuilding of the 231 Hyland.Services section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Services","poolSettings","minSessions","2","Hyland-Services-AppPool-Minimum-Sessions","0","","",""},
            {"Hyland.Services","poolSettings","maxSessions","2","Hyland-Services-AppPool-Maximum-Sessions","10","","",""},
            {"Hyland.Services","securitySettings","useQueryContext","1","Use-Query-Context","false","","",""},
            {"Hyland.Services","securitySettings","filterExceptions","1","Filter-Exceptions","true","","",""},
            {"Hyland.Services","Endpoint","useRemoting","1","Endpoint-Use-Remoting","true","","",""},
            {"Hyland.Services","session","enableTimeout","1","Session-Enable-Timeout","false","","",""},
            {"Hyland.Services","applicationServerCallback","url","2","Application-Server-Callback-URL","","","",""},
            {"Hyland.Services","webServerBaseUrl","url","2","Web-Server-Base-URL","","","",""},
            {"Hyland.Services","requestValidation","minVersion","2","Request-Validation-Minimum-Version","0","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test73()
    {
        //Testing the Prebuilding of the 231 Hyland.XMLServices.DocumentConnector section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.XMLServices.DocumentConnector","loginId","name","2","Login-ID","","","",""},
                {"Hyland.XMLServices.DocumentConnector","loginPassword","name","2","Login-Password","","","",""},
                {"Hyland.XMLServices.DocumentConnector","loginDatasource","name","2","Login-Datasource","","","",""},
                {"Hyland.XMLServices.DocumentConnector","pool","min","2","Pool-Min","0","","",""},
                {"Hyland.XMLServices.DocumentConnector","pool","max","2","Pool-Max","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test74()
    {
        //Testing the Prebuilding of the 231 Hyland.Core.FullText section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.FullText","SearchTimeout","value","2","Search-Timeout","30","","",""},
                {"Hyland.Core.FullText","SearchLog","enableSearchlog","1","Enable-Search-Log","false","","",""},
                {"Hyland.Core.FullText","SearchLog","path","2","Search-Log-Path","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test75()
    {
        //Testing the Prebuilding of the 231 Hyland.WorkView.Core section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.WorkView.Core","UnityEditableFilterMaxRows","value","2","Unity-Editable-Filter-Max-Rows","20","","",""},
                {"Hyland.WorkView.Core","ERPDateFormat","value","2","ERP-Date-Format-LOB-Broker","yyyyMMdd","","",""},
                {"Hyland.WorkView.Core","FormattedTextIframeSupportedDomains","value","2","Formatted-Text-Iframe-Supported-Domains","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test76()
    {
        //Testing the Prebuilding of the 231 Hyland.Core.IDOL section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.IDOL","RemoteOCREngine","remoteServer","2","Remote-OCR-Engine-Remote-Server","localhost","","",""},
                {"Hyland.Core.IDOL","RemoteOCREngine","port","2","Remote-OCR-Engine-Port","9050","","",""},
                {"Hyland.Core.IDOL","RemoteOCREngine","timeOut","2","Remote-OCR-Engine-Timeout","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test77()
    {
        //Testing the Prebuilding of the 231 Hyland.Core.Wopi section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.Wopi","useOfficeWebAppServer","value","2","Use-Office-Online-Server","false","","",""},
                {"Hyland.Core.Wopi","owaServerUri","value","2","Office-Online-Server-URI","https://[servername]/","","",""},
                {"Hyland.Core.Wopi","owaProxyBase","value","2","Office-Online-Server-Proxy-Base","https://[servername]/[appserver]/private","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test78()
    {
        //Testing the Prebuilding of the 231 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheSearchMinChars","2","Vendor-Cache-Search-Minimum-Characters","1","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterKeyedLookupOp","2","Vendor-Master-Keyed-Lookup-Op","GetVenMasterRecordbyVenIDNCompID","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupSequence","2","Vendor-Master-Lookup-Sequence","GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupReturnMultiple","1","Vendor-Master-Lookup-Return-Multiple","false","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheAutoCompleteResultsMax","2","Vendor-Cache-AutoComplete-Result-Max","30","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","IsEnabled","","1","Enable-LOB-Broker-Accounts-Payable","false","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test79()
    {
        //Testing the Prebuilding of the 231 system.web section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"system.web","httpRuntime","maxRequestLength","2","Http-Runtime-Maximum-Request-Length","30000","","",""},
                {"system.web","httpRuntime","executionTimeout","2","Http-Runtime-Execution-Timeout","300","","",""},
                {"system.web","sessionState","timeout","2","Session-Timeout-Length","20","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test80()
    {
        //Testing the Prebuilding of the 231 system.webServer section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"system.webServer","security/requestFiltering/requestLimits","maxAllowedContentLength","2","Max-Allowed-Content-Length","30000000","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test81()
    {
        //Testing the Prebuilding of the 231 root section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"root","Hyland.Core.IDOL","ImageCompression","2","Image-Compression","70","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test82()
    {
        //Testing the parsing of the 231 appSettings section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocLinkerSMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""Doc-Linker-SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseNewKeywordDataCacheImplementation"",""type"":""1"",""htmlIdName"":""Use-New-Keyword-Data-Cache-Implementation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ConfigurationImport_DatabaseTimeout"",""type"":""2"",""htmlIdName"":""Configuration-Import-Database-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:ExternalBaseUri"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:ExternalBaseUri"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:Port"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:Port"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ImageProcess"",""type"":""1"",""htmlIdName"":""PIM:ImageProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ChromiumProcess"",""type"":""1"",""htmlIdName"":""PIM:ChromiumProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""HyRCS:PageCountLimit"",""type"":""2"",""htmlIdName"":""HyRCS:PageCountLimit"",""Value"":""10000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocLinkerSMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""Doc-Linker-SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseNewKeywordDataCacheImplementation"",""type"":""1"",""htmlIdName"":""Use-New-Keyword-Data-Cache-Implementation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ConfigurationImport_DatabaseTimeout"",""type"":""2"",""htmlIdName"":""Configuration-Import-Database-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:ExternalBaseUri"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:ExternalBaseUri"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:Port"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:Port"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ImageProcess"",""type"":""1"",""htmlIdName"":""PIM:ImageProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ChromiumProcess"",""type"":""1"",""htmlIdName"":""PIM:ChromiumProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""HyRCS:PageCountLimit"",""type"":""2"",""htmlIdName"":""HyRCS:PageCountLimit"",""Value"":""10000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value="""" />
    <add key=""dmsdatasource"" value=""[Datasource]"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""true""/>
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <!-- Generic SMART on FHIR Application ID -->
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- DocLinkerSMARTonFHIRApplicationId is only used with the Epic LaunchLinkDocumentsActivities API. -->
    <add key=""DocLinkerSMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
    <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <!-- Feature Flag setting for selecting the implementation of the Keyword Data Cache -->
    <add key=""UseNewKeywordDataCacheImplementation"" value=""false""/>

    <!-- Sharebase folder descriptors fetch related configuration-->
    <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
    <add key =""SB_FolderFetchBatchSize"" value =""300""/>
    <!-- Sharebase folder Database Command Time Out in Seconds-->
    <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
    <!--Set the default timeout in seconds for Import actions. Values below 120 will be ignored-->
    <add key=""ConfigurationImport_DatabaseTimeout"" value=""300""/>
    <!-- Set an external URI for HyRCS instead of using the out of process localhost instance -->
    <add key=""PIM:HyRCS:ExternalBaseUri"" value=""""/>
    <!-- Set a custom port for HyRCS. This will ONLY be applied if using the out of process localhost instance.  For an external instance,
         specify the port in the PIM:HyRCS:ExternalBaseUri value. -->
    <add key=""PIM:HyRCS:Port"" value=""""/>
    <!--SET TO REPLACE 'UseIsolatedImageProcess' - Setting for initializing the out of process image rendering service-->
    <add key=""PIM:ImageProcess"" value=""false"" />
    <!--SET TO REPLACE 'EnableIsolatedChromiumProcess' - Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""PIM:ChromiumProcess"" value=""false"" />
	<!--Set the page count limit for HyRCS-->
	<add key=""HyRCS:PageCountLimit"" value=""10000""/>  
  </appSettings>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "appSettings", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test83()
    {
        //Testing the parsing of the 231 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":{""responsiveApps"":[]},""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.ResponsiveApps>
            <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
            <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
            <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
            <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
            <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
            <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
            <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
            <CoreAccessTokenLifetime value=""691200"" />
            <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
            <Apps>
            </Apps>
          </Hyland.ResponsiveApps>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.ResponsiveApps", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test84()
    {
        //Testing the parsing of the 231 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":{""diskGroupAliases"":[{""oldname"":""OldName"",""newname"":""NewName"",""type"":""unc"",""id"":null}]},""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.PlatterManagement>
            <Logging>
              <!-- This controls whether file I/O details (reading and writing) are logged. -->
              <FileIODetail value=""false"" />
            </Logging>
            <DiskgroupAlias>
              <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
            </DiskgroupAlias>
            <ForeignStorageDevices>
              <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
              <EMCTHRESHOLD value="""" />
              <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
              <PmCacheLocation value="""" />
              <!-- Path to cache location -->
              <PmCacheTimeout value="""" />
              <!-- Timeout in minutes.  Default is 60 minutes. -->
              <PmCacheSize value="""" />
              <!-- Cache size in MB.  Default is 500. -->
            </ForeignStorageDevices>
            <FileAccess>
              <PMAccessLevel value=""0"" />
              <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
            </FileAccess>
            <TemporaryFiles>
              <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
              <TempFileExpirationThreshold value="""" />
            </TemporaryFiles>
          </Hyland.PlatterManagement>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.PlatterManagement", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test85()
    {
        //Testing the parsing of the 231 Hyland.Services section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
      </Hyland.Services>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Services", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test86()
    {
        //Testing the parsing of the 231 Hyland.XMLServices.DocumentConnector section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.XMLServices.DocumentConnector>
            <loginId name=""5"" />
            <loginPassword name=""5"" />
            <loginDatasource name=""5"" />
            <pool min=""5"" max=""5"" />
          </Hyland.XMLServices.DocumentConnector>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.XMLServices.DocumentConnector", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test87()
    {
        //Testing the parsing of the 231 Hyland.Core.FullText section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.FullText>
            <!-- The length of time (in seconds) before the search will timeout. -->
            <SearchTimeout value=""30"" />
            <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
            <SearchLog enableSearchlog=""false"" path="""" />
          </Hyland.Core.FullText>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.FullText", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test88()
    {
        //Testing the parsing of the 231 Hyland.WorkView.Core section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""250"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.WorkView.Core>
            <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
            <UnityEditableFilterMaxRows value=""250"" />
            <!--Sets the ERP date format for processing results for LOB Broker classes.-->
            <ERPDateFormat value=""yyyyMMdd"" />
            <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
        		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
        		Example:

        			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

        			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
        			only allow sandbox overrides for that specific domain and sub-domain. 
        		-->
            <FormattedTextIframeSupportedDomains value="""" />
          </Hyland.WorkView.Core>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.WorkView.Core", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test89()
    {
        //Testing the parsing of the 231 Hyland.Core.IDOL section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.IDOL ImageCompression=""70"">
            <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
            <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
          </Hyland.Core.IDOL>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.IDOL", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test90()
    {
        //Testing the parsing of the 231 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
          <configSections>
            <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
            <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
            <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
            <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
            <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
            <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
            <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
            <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
            <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
            <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
            <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
            <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
            <!-- ADFS sections -->
            <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
            <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <!-- End ADFS sections -->
            <!--LOB Broker Section-->
            <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
            <!--End LOB Broker Section-->
            <!-- External Access Client section -->
            <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
            <!-- End External Access Client section-->
            <!-- Responsive Apps section-->
            <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
            <!-- End Responsive Apps section-->
            <!-- SharePoint Integration section -->
            <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
            <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
            <!-- End SharePoint Integration section -->
            <!-- Content Composer section -->
            <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
            <!-- End Content Composer section -->
          </configSections>
          <connectionStrings>
            <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security Additional Options""
              connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
          </connectionStrings>
          <appSettings>
            <!-- Server Designation for this application server.
            Useful to see what server a user is connected to in a load-balanced environment. -->
            <add key=""ServerDesignation"" value=""Test"" />
            <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
            <!-- This is used to determine if the connection to the database should be made with OS Authentication
                 or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
                 the database and is configured as the user for this Application Server.  This user requires the 
                 same database permissions that the ""hsi"" user would have.
            -->
            <add key=""UseOSAuthentication"" value=""false"" />
            <!-- Message pop up warning when number of documents returned from query exceed the value
                Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
            -->
            <add key=""DocumentQueryWarningThreshold"" value=""500"" />
            <!-- Document queries are limited when number of returned documents exceed the value.
                Max supported value is 10000.
            -->
            <add key=""DocumentQueryLimit"" value=""2000"" />
            <!--The number of seconds an item will exist within the item cache before it will be expired-->
            <add key=""ItemCacheTimeout"" value=""60"" />
            <!--Settings for image rendering and image quality-->
            <add key=""RawImagesAllowed"" value=""true"" />
            <!--Setting for initializing the out of process image rendering service-->
            <add key=""UseIsolatedImageProcess"" value=""true"" />
            <add key=""CompressionQuality"" value=""70"" />
            <!--Setting for initializing the Chromium Image service used by Unity Forms-->
            <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
            <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
            <add key=""FormSaveToTiffTimeout"" value=""60"" />
            <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
            <add key=""PrintImageFormViaPDF"" value=""false"" />
            <!-- Specify a custom path for TPCF Worker directory-->
            <add key=""TPCFWorkerLocationOverride"" value="""" />
            <!--Settings for FileMonitoring Engine-->
            <add key=""DefaultStoragePath"" value="""" />
            <!--Settings for FOS Admittance Monitoring-->
            <add key=""watchFolder"" value="""" />
            <add key=""siteIDKeywordType"" value=""Site ID"" />
            <add key=""cleanupTimerInterval"" value=""15"" />
            <add key=""maxFileAgeInHours"" value=""4"" />
            <!--Settings for EIS -->
            <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
            <add key=""ValidateMessageSchema"" value=""true"" />
            <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
            <add key=""ContinueOnValidationError"" value=""false"" />
            <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
            <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
            <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
            <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
            <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
            <add key=""UseHTMLClientType"" value=""false"" />
            <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
            completed messages needing archiving. -->
            <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
            <!-- Username to connect to GCS.
                 Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
            <add key=""GCSUsername"" value="""" />
            <!-- Password to connect to GCS.
                 Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
            <add key=""GCSPassword"" value="""" />
            <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
            <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
            <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
            <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
            <!-- The Data Capture Server location for creating a WCF connection. -->
            <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
            <!-- This setting controls if the server will accept only https connections or not. 
              If you set this to false all incoming requests have to be made over https. 
              If you set this to true then both http and https connections are accepted. 
              The recommended setting is false.-->
            <add key=""AllowInsecureConnection"" value=""false"" />
            <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
              In a load-balanced environment, hostname would be the load-balancer.
              example: ""https://hostname/AppServer""	-->
            <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
            <!--Settings to enable OWIN startup-->
            <add key=""owin:AutomaticAppStartup"" value=""false"" />
            <!--Location of the OWIN startup class-->
            <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
            <!-- Location of the Identity Model Server  -->
            <add key=""IdentityModelServerURI"" value="""" />
            <!-- WorkView Mobile Settings-->
            <add key=""mobileAppsPath"" value=""[unc path]"" />
            <add key=""corsPolicy"" value=""*"" />
            <add key=""endpoints:WorkViewMobile"" value=""false"" />
            <!-- Responsive Apps Settings-->
            <add key=""endpoints:ResponsiveApps"" value=""false"" />
            <!-- WOPI Endpoint for Office Online Server-->
            <add key=""endpoints:Wopi"" value=""false"" />
            <!--Sesame Endpoint for Office Integrations-->
            <add key=""endpoints:Sesame"" value=""false"" />
            <!-- Iron Mountain Policy Center integration -->
            <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
            <!-- FHIR Settings-->
            <add key=""endpoints:FHIR"" value=""false"" />
            <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
            <!-- PPL Apps Settings-->
            <add key=""endpoints:PPL"" value=""false"" />
            <!-- Forms Settings-->
            <add key=""endpoints:Forms"" value=""false"" />
            <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
            <add key=""DocPopUrl"" value="""" />
            <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
            <add key=""StatementCompCacheLimit"" value="""" />
            <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
              Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
            <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
            <!-- OnBase Integration API Settings-->
            <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
            <add key=""owin:oia:lifeCycleId"" value="""" />
            <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
            <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
            <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
            <add key=""UseOnBaseFulltext"" value=""false"" />
            <!-- IDP Url for Content Composer authentication -->
            <add key=""ContentComposerIdpPath"" value="""" />
            <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
                 value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
                 this value can result in undesirable behavior. -->
            <add key=""KeywordDataCacheTimeout"" value=""20"" />
            <add key=""AllowInsecureExternalXsl "" value=""false"" />
          </appSettings>
          <!--HYLAND DIAGNOSTICS
            Used for debugging on machines with Hyland.Logging installed
            -->
          <Hyland.Logging TruncateLogValues=""1024"">
            <WindowsEventLogging sourcename=""Hyland Application Server"" />
            <Routes>
              <Route name=""Splunk"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Splunk"" value=""http://localhost:8989"" />
                <add key=""SplunkToken"" value=""token"" />
                <add key=""SplunkIndex"" value=""Index"" />
                <add key=""SplunkSource"" value=""Source"" />
                <add key=""SplunkSourceType"" value=""Source Type"" />
                <add key=""SplunkHost"" value=""Host"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""DiagnosticsConsole"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Http"" value=""http://localhost:8989"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value=""anothererror"" />
              </Route>
              <Route name=""ErrorEventLog"">
                <add key=""minimum-level"" value=""Error"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""NamedPipeCoreEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""PIMManagerEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
            </Routes>
            <AuditRoutes />
          </Hyland.Logging>
          <Hyland.Web.AppServerPop>
            <EnableChecksum value=""false"" />
            <ChecksumKey value="""" />
            <EnableLegacyChecksumCreation value=""false"" />
          </Hyland.Web.AppServerPop>
          <Hyland.Applications.Portals.ExternalAccess>
            <username value="""" />
            <password value="""" />
            <minPoolSize value=""0"" />
            <maxPoolSize value=""0"" />
          </Hyland.Applications.Portals.ExternalAccess>
          <Hyland.ResponsiveApps>
            <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
            <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
            <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
            <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
            <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
            <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
            <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
            <CoreAccessTokenLifetime value=""691200"" />
            <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
            <Apps>
            </Apps>
          </Hyland.ResponsiveApps>
          <!-- Content Composer settings -->
          <Hyland.ContentComposer.Core>
            <ClientId value=""id"" />
            <ClientSecret value=""secret"" />
            <Username value=""UN"" />
            <Password value=""PW"" />
          </Hyland.ContentComposer.Core>
          <!-- SharePoint Integrations settings -->
          <Hyland.Applications.Sharepoint.Services>
            <PoolSize max=""5"" min=""1"" />
            <ExpandKeysets value=""true"" />
          </Hyland.Applications.Sharepoint.Services>
          <Hyland.Applications.Sharepoint.SearchAdapter>
            <PoolSize max=""4"" min=""1"" />
            <DataSource name=""[DATASOURCE]"" />
            <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
            <StripDomainOnSecurityCheck value=""true"" />
            <isDocPop value=""true"" />
          </Hyland.Applications.Sharepoint.SearchAdapter>
          <!-- End SharePoint Integrations settings-->
          <Hyland.PlatterManagement>
            <Logging>
              <!-- This controls whether file I/O details (reading and writing) are logged. -->
              <FileIODetail value=""false"" />
            </Logging>
            <DiskgroupAlias>
              <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
            </DiskgroupAlias>
            <ForeignStorageDevices>
              <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
              <EMCTHRESHOLD value="""" />
              <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
              <PmCacheLocation value="""" />
              <!-- Path to cache location -->
              <PmCacheTimeout value="""" />
              <!-- Timeout in minutes.  Default is 60 minutes. -->
              <PmCacheSize value="""" />
              <!-- Cache size in MB.  Default is 500. -->
            </ForeignStorageDevices>
            <FileAccess>
              <PMAccessLevel value=""0"" />
              <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
            </FileAccess>
            <TemporaryFiles>
              <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
              <TempFileExpirationThreshold value="""" />
            </TemporaryFiles>
          </Hyland.PlatterManagement>
          <Hyland.Services>
            <!-- POOL SETTINGS
              Controls the size of the session pools when using disconnected web services.

              minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
              available in the session pool.

              maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
              available in the session pool.  Requests from the pool that exceed this value will block
              until another session is placed back into the pool.
            -->
            <poolSettings minSessions=""0"" maxSessions=""10"">
              <!-- Parameters that should be used in the session pool.
                 parameter
                  (attributes: 
                  name = ""[licenseType]""
                  value = ""[queryMeter]"" use query metering)
              -->
              <!--
              <parameters>
                <parameter name=""licenseType"" value=""queryMeter""/>
              </parameters
              -->
              <!-- Allows specification of a Service Login for use in Session Pools.  -->
              <!--
                <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
              -->
            </poolSettings>
            <!-- SECURITY SETTINGS
              Controls the security behavior of the Hyland APIs.

              useQueryContext (default false) - This parameter indicates if query context security will be
              used during the course of retrieval.  Query context means that a document must be retrieved
              through a document query before the document itself is accessible via another call.  If this
              parameter is omitted, the default is true.  Note: this value should be set to false when being
              used for disconnected web services.

              filterExceptions (default true) - This parameter indicates if the application server should not 
              send detailed information about exception. For example, the exact stack trace of the exception will 
              be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
              is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
              an authorized user.
            -->
            <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
            <Endpoint useRemoting=""true"" />
            <!-- SESSION SETTINGS
             Controls the session behavior.

             enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
             If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
             The timeout period is based on the ASP.NET session timeout found in the system.web\session 
             section with a minimum of 10 minutes-->
            <session enableTimeout=""false"" />
            <applicationServerCallback url="""" />
            <webServerBaseUrl url="""" />
            <!--requestValidation increases the security of your application server installation. It controls the level at 
            which the application server will validate client requests.

            Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
            server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
            coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
            only supported validation level.

            Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
            valid source. Note that if older clients are communicating to the application server that do not support request
            validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
            the application server. If there are clients older than the release version of the application server that will not
            be upgraded you should leave this value at zero (0).-->
            <requestValidation minVersion=""0"" />
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          </Hyland.Services>
          <!--
            The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
            -->
          <Hyland.XMLServices.DocumentConnector>
            <loginId name=""5"" />
            <loginPassword name=""5"" />
            <loginDatasource name=""5"" />
            <pool min=""5"" max=""5"" />
          </Hyland.XMLServices.DocumentConnector>
          <!--
            The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
          -->
          <Hyland.Core.FullText>
            <!-- The length of time (in seconds) before the search will timeout. -->
            <SearchTimeout value=""30"" />
            <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
            <SearchLog enableSearchlog=""false"" path="""" />
          </Hyland.Core.FullText>
          <!--
            The Hyland.Core.WorkView block defines options used by WorkView.
          -->
          <Hyland.WorkView.Core>
            <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
            <UnityEditableFilterMaxRows value=""250"" />
            <!--Sets the ERP date format for processing results for LOB Broker classes.-->
            <ERPDateFormat value=""yyyyMMdd"" />
            <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
        		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
        		Example:

        			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

        			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
        			only allow sandbox overrides for that specific domain and sub-domain. 
        		-->
            <FormattedTextIframeSupportedDomains value="""" />
          </Hyland.WorkView.Core>
          <Hyland.Core.Media />
          <Hyland.Core.Media.HostedApplicationServer>
            <url value="""" />
            <datasource value="""" />
            <username value="""" />
            <password value="""" />
          </Hyland.Core.Media.HostedApplicationServer>
          <Hyland.Authentication>
            <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
            <trustedClients trustMode=""Off"">
              <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
            </trustedClients>
            <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
          </Hyland.Authentication>
          <!--
            Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
          -->
          <Hyland.Core.IDOL ImageCompression=""70"">
            <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
            <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
          </Hyland.Core.IDOL>
          <!--
            Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
            The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
            The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
            The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
          -->
          <!--<Hyland.Core.Wopi>
         <useOfficeWebAppServer value=""false""/>
            <owaServerUri value=""https://[servername]/""/>
            <owaProxyBase value=""https://[servername]/[appserver]/private"" />
          </Hyland.Core.Wopi>-->
          <!-- Uncomment this section to enable LOB Broker Integration -->
          <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
            <AccountsPayableAPI
               VendorCacheSearchMinChars=""1""
                VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
                VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
                VendorMasterLookupReturnMultiple=""false""
                 VendorCacheAutoCompleteResultsMax=""30""  />

            <DataSources>
              -->
          <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
          <!--
              <DataSource Name=""APAcceleratorRelay""
                     API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                     API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                     LOB_RelayEndpoint =""LOBBrokerEndpoint""
                     Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                  <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
          <system.web>
            <webServices>
              <protocols>
                <add name=""HttpGet"" />
                <add name=""HttpPost"" />
                <add name=""HttpPostLocalhost"" />
                <add name=""Documentation"" />
              </protocols>
            </webServices>
            <!--  HTTPRUNTIME
              By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
              need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
              By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
              If uploading large documents, the executionTimeout value may need to be increased for proper processing.

              If uploads larger than 30MB are required, additional changes are required.
              Refer to the maxAllowedContentLength comments for information regarding the changes.
             -->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
            <!-- IDENTITY
              By setting impersonate=""true"" the username and password set in the registry will be used
              when the application is started.

              For the Web Server, impersonation is (most likely) not needed. The default account of
              NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
              permissions to communicate with the Application Server.

              Use Impersonation on the Application Server for proper NTFS file security.
              When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
              the Application Server will require a user with additional permissions to complete user authentication.

              Use a user with rights to the domain to allow NTFS file security.
              Use a user with Account Operator rights to allow Domain Authentication.

              Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
                aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

              NOTE: Each time aspnet_setreg.exe is run, the security on the 
                HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
                the security to allow read permissions by the user running the ASP .Net worker process.
            -->
            <!--
            <identity impersonate=""false""
              userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
              password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
            />
            -->
            <!--  DYNAMIC DEBUG COMPILATION
              Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
              false will improve runtime performance of this application. 
              Set compilation debug=""true"" to insert debugging symbols (.pdb information)
              into the compiled page. Because this creates a larger file that executes
              more slowly, you should set this value to true only when debugging and to
              false at all other times. For more information, refer to the documentation about
              debugging ASP.NET files.
            -->
            <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
            <!--  CUSTOM ERROR MESSAGES
                Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
                Add <error> tags for each of the errors you want to handle.

                ""On"" Always display custom (friendly) messages.
                ""Off"" Always display detailed ASP.NET error information.
                ""RemoteOnly"" Display custom (friendly) messages only to users not running 
                on the local Web server. This setting is recommended for security purposes, so 
                that you do not display application detail information to remote clients.
            -->
            <customErrors mode=""RemoteOnly"" />
            <!--  AUTHENTICATION 
              This section sets the authentication policies of the application. Possible modes are ""Windows"", 
              ""Forms"", ""Passport"" and ""None""

              ""None"" No authentication is performed. 
              ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
              its settings for the application. Anonymous access must be disabled in IIS. 
              ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
              you authenticate them in your application. A user credential token is stored in a cookie.
              ""Passport"" Authentication is performed via a centralized authentication service provided
              by Microsoft that offers a single logon and core profile services for member sites.
            -->
            <authentication mode=""Windows"" />
            <!--  AUTHORIZATION 
              This section sets the authorization policies of the application. You can allow or deny access
              to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
              (unauthenticated) users.
            -->
            <authorization>
              <allow users=""*"" />
              <!-- Allow all users -->
              <!--  <allow     users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
                  <deny      users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
              -->
            </authorization>
            <!--  APPLICATION-LEVEL TRACE LOGGING
              Application-level tracing enables trace log output for every page within an application. 
              Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
              trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
              application trace log by browsing the ""trace.axd"" page from your web application
              root.
            -->
            <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
            <!--  SESSION STATE SETTINGS
              By default ASP.NET uses cookies to identify which requests belong to a particular session. 
              If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
              To disable cookies, set sessionState cookieless=""true"".
            -->
            <sessionState mode=""Off"" timeout=""20"" />
            <!--  GLOBALIZATION
              This section sets the globalization settings of the application. 
            -->
            <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
            <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
          </system.web>
          <system.net>
            <connectionManagement>
              <add address=""*"" maxconnection=""24"" />
            </connectionManagement>
          </system.net>
          <system.webServer>
            <validation validateIntegratedModeConfiguration=""false"" />
            <modules>
              <!-- Http Trace -->
            </modules>
            <handlers>
              <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
              <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Welcome Integration (Kiosk) -->
              <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
              <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Http Trace -->
              <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- OIA requires GET,POST,PUT,DELETE -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
            </handlers>
            <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
            <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
            <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
            <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
            <!--Uncomment the section below and enter the value as needed.-->
            <!--This setting should be changed in both the web and application server's web.config.-->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <security>
              <requestFiltering>
                <requestLimits maxAllowedContentLength=""30000000"" />
              </requestFiltering>
              <authentication>
                <anonymousAuthentication enabled=""true"" />
                <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
              </authentication>
            </security>
            <defaultDocument>
              <files>
                <clear />
                <add value=""service.asmx"" />
              </files>
            </defaultDocument>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <applicationInitialization skipManagedModules=""true"">
                <add initializationPage=""/Service.svc"" />
            </applicationInitialization>
            -->
            <!-- ""Powered By"" header removal -->
            <httpProtocol>
              <customHeaders>
                <remove name=""X-Powered-By"" />
              </customHeaders>
            </httpProtocol>
          </system.webServer>
          <system.diagnostics>
            <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
                Trace Level	    | Nature of the Tracked Events
                ================================================================
                Off	            - N/A
                Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Verbose	        - ""Positive"" events: events that mark successful milestones.
                Information	    - ""Positive"" events: events that mark successful milestones.
                ActivityTracing	- Flow events between processing activities and components.
                All	            - Application may function properly. All events are emitted.
              -->
            <sources>
              <!-- Logs all stages of WCF pipeline -->
              <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs messages flowing through pipeline -->
              <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs when objects are read or written -->
              <source name=""System.Runtime.Serialization"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
            </sources>
            <sharedListeners>
              <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
            </sharedListeners>
            <trace autoflush=""true"" />
            <switches>
              <!-- 
                    This switch controls tracing globally through Hyland.Logging.
                    It configures the level of information from Trace that is logged.
                    For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                    minimal, normal, detailed, or verbose messages, respectively.
                    -->
              <add name=""hylandTracing"" value=""0"" />
            </switches>
          </system.diagnostics>
          <configProtectedData>
            <providers>
              <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
            </providers>
          </configProtectedData>
          <!--
          The system.identityModel section is used to enable Windows Identity Foundation options.

          The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
          The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
          -->
          <!--<system.identityModel>
            <identityConfiguration saveBootstrapContext=""true"">
              <securityTokenHandlers>
                <securityTokenHandlerConfiguration>
                  <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
                  <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                    <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
                  </issuerNameRegistry>
                </securityTokenHandlerConfiguration>
              </securityTokenHandlers>
            </identityConfiguration>
          </system.identityModel>-->
          <!--
          system.identityModel.services is used to configure authentication using the WS-Federation protocol.

          wsFederation node
            The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
            The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

          The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
          -->
          <!--<system.identityModel.services>
            <federationConfiguration requireSsl=""false"">
              <cookieHandler requireSsl=""false"" />
              <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
              <serviceCertificate>
                <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
              </serviceCertificate>
            </federationConfiguration>
          </system.identityModel.services>-->
          <system.serviceModel>
            <!-- WCF Logging -->
            <diagnostics>
              <!-- Enable Message Logging here. -->
              <!-- log all messages received or sent at the transport or service model levels -->
              <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
            </diagnostics>
            <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
            <services>
              <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
                <!-- ""Azure Service Bus Endpoint"" section 
                    This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                    it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                    NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
                <!--
              <endpoint binding=""netTcpRelayBinding"" 
                        bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                        contract=""Hyland.Services.Web.IAppServerService"" 
                        behaviorConfiguration=""sbTokenProvider"" 
                        address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
              -->
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
              </service>
              <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
                <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
                <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
              </service>
            </services>
            <client>
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
              <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
              <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
              To use the endpoint in a non secure channel(http)
              1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
              2. change the address url to use http scheme -->
              <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
            </client>
            <bindings>
              <basicHttpBinding>
                <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
                <binding name=""APIServiceSoap"">
                  <security mode=""TransportWithMessageCredential"" />
                </binding>
                <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                </binding>
                <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <transport clientCredentialType=""None"" />
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""None"" />
                </binding>
                <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""Transport"">
                    <transport clientCredentialType=""None"" />
                  </security>
                </binding>
                <binding name=""SPSearchBinding"">
                  <security mode=""TransportCredentialOnly"">
                    <transport clientCredentialType=""Windows"" />
                  </security>
                </binding>
              </basicHttpBinding>
            </bindings>
            <behaviors>
              <endpointBehaviors>
                <behavior name=""clientCert"">
                  <clientCredentials>
                    <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
                  </clientCredentials>
                </behavior>
                <behavior name=""LOBBrokerClientCertificateAuthentication"">
                  <clientCredentials>
                    <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
                  </clientCredentials>
                </behavior>
              </endpointBehaviors>
              <serviceBehaviors>
                <behavior name=""AppServerBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <behavior name=""SPSearchBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <!-- Default Behavior -->
                <behavior name="""">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                </behavior>
              </serviceBehaviors>
              <!-- ""Azure Service Bus Endpoint"" section -->
              <!--
                <endpointBehaviors>
                    <behavior name=""sbTokenProvider"">
                        <transportClientEndpointBehavior>
                            <tokenProvider>
                                <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                            </tokenProvider>
                        </transportClientEndpointBehavior>
                </behavior>
                </endpointBehaviors>
                -->
            </behaviors>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <extensions>
              <behaviorExtensions>
                 <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </behaviorExtensions>
              <bindingExtensions>
                <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </bindingExtensions>
            </extensions>
            -->
          </system.serviceModel>
          <runtime>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
          </runtime>
          <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
            <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
            <DataSources>
              <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
          <location path=""AuthService.asmx"">
          </location>
          <location path=""AuthOptServicePipeline.ashx"">
          </location>
        </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Integrations.LOBBroker.LOBBrokerConfigSection", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test91()
    {
        //Testing the parsing of the 231 system.web section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.web>
            <webServices>
              <protocols>
                <add name=""HttpGet"" />
                <add name=""HttpPost"" />
                <add name=""HttpPostLocalhost"" />
                <add name=""Documentation"" />
              </protocols>
            </webServices>
            <!--  HTTPRUNTIME
              By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
              need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
              By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
              If uploading large documents, the executionTimeout value may need to be increased for proper processing.

              If uploads larger than 30MB are required, additional changes are required.
              Refer to the maxAllowedContentLength comments for information regarding the changes.
             -->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
            <!-- IDENTITY
              By setting impersonate=""true"" the username and password set in the registry will be used
              when the application is started.

              For the Web Server, impersonation is (most likely) not needed. The default account of
              NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
              permissions to communicate with the Application Server.

              Use Impersonation on the Application Server for proper NTFS file security.
              When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
              the Application Server will require a user with additional permissions to complete user authentication.

              Use a user with rights to the domain to allow NTFS file security.
              Use a user with Account Operator rights to allow Domain Authentication.

              Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
                aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

              NOTE: Each time aspnet_setreg.exe is run, the security on the 
                HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
                the security to allow read permissions by the user running the ASP .Net worker process.
            -->
            <!--
            <identity impersonate=""false""
              userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
              password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
            />
            -->
            <!--  DYNAMIC DEBUG COMPILATION
              Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
              false will improve runtime performance of this application. 
              Set compilation debug=""true"" to insert debugging symbols (.pdb information)
              into the compiled page. Because this creates a larger file that executes
              more slowly, you should set this value to true only when debugging and to
              false at all other times. For more information, refer to the documentation about
              debugging ASP.NET files.
            -->
            <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
            <!--  CUSTOM ERROR MESSAGES
                Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
                Add <error> tags for each of the errors you want to handle.

                ""On"" Always display custom (friendly) messages.
                ""Off"" Always display detailed ASP.NET error information.
                ""RemoteOnly"" Display custom (friendly) messages only to users not running 
                on the local Web server. This setting is recommended for security purposes, so 
                that you do not display application detail information to remote clients.
            -->
            <customErrors mode=""RemoteOnly"" />
            <!--  AUTHENTICATION 
              This section sets the authentication policies of the application. Possible modes are ""Windows"", 
              ""Forms"", ""Passport"" and ""None""

              ""None"" No authentication is performed. 
              ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
              its settings for the application. Anonymous access must be disabled in IIS. 
              ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
              you authenticate them in your application. A user credential token is stored in a cookie.
              ""Passport"" Authentication is performed via a centralized authentication service provided
              by Microsoft that offers a single logon and core profile services for member sites.
            -->
            <authentication mode=""Windows"" />
            <!--  AUTHORIZATION 
              This section sets the authorization policies of the application. You can allow or deny access
              to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
              (unauthenticated) users.
            -->
            <authorization>
              <allow users=""*"" />
              <!-- Allow all users -->
              <!--  <allow     users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
                  <deny      users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
              -->
            </authorization>
            <!--  APPLICATION-LEVEL TRACE LOGGING
              Application-level tracing enables trace log output for every page within an application. 
              Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
              trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
              application trace log by browsing the ""trace.axd"" page from your web application
              root.
            -->
            <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
            <!--  SESSION STATE SETTINGS
              By default ASP.NET uses cookies to identify which requests belong to a particular session. 
              If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
              To disable cookies, set sessionState cookieless=""true"".
            -->
            <sessionState mode=""Off"" timeout=""20"" />
            <!--  GLOBALIZATION
              This section sets the globalization settings of the application. 
            -->
            <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
            <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
          </system.web>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.web", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test92()
    {
        //Testing the parsing of the 231 system.webServer section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.webServer>
            <validation validateIntegratedModeConfiguration=""false"" />
            <modules>
              <!-- Http Trace -->
            </modules>
            <handlers>
              <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
              <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Welcome Integration (Kiosk) -->
              <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
              <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Http Trace -->
              <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- OIA requires GET,POST,PUT,DELETE -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
            </handlers>
            <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
            <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
            <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
            <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
            <!--Uncomment the section below and enter the value as needed.-->
            <!--This setting should be changed in both the web and application server's web.config.-->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <security>
              <requestFiltering>
                <requestLimits maxAllowedContentLength=""30000000"" />
              </requestFiltering>
              <authentication>
                <anonymousAuthentication enabled=""true"" />
                <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
              </authentication>
            </security>
            <defaultDocument>
              <files>
                <clear />
                <add value=""service.asmx"" />
              </files>
            </defaultDocument>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <applicationInitialization skipManagedModules=""true"">
                <add initializationPage=""/Service.svc"" />
            </applicationInitialization>
            -->
            <!-- ""Powered By"" header removal -->
            <httpProtocol>
              <customHeaders>
                <remove name=""X-Powered-By"" />
              </customHeaders>
            </httpProtocol>
          </system.webServer>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.webServer", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test93()
    {
        //Testing the parsing of the 231 root section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
          <configSections>
            <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
            <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
            <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
            <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
            <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
            <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
            <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
            <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
            <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
            <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
            <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
            <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
            <!-- ADFS sections -->
            <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
            <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <!-- End ADFS sections -->
            <!--LOB Broker Section-->
            <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
            <!--End LOB Broker Section-->
            <!-- External Access Client section -->
            <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
            <!-- End External Access Client section-->
            <!-- Responsive Apps section-->
            <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
            <!-- End Responsive Apps section-->
            <!-- SharePoint Integration section -->
            <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
            <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
            <!-- End SharePoint Integration section -->
            <!-- Content Composer section -->
            <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
            <!-- End Content Composer section -->
          </configSections>
          <connectionStrings>
            <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security Additional Options""
              connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
          </connectionStrings>
          <appSettings>
            <!-- Server Designation for this application server.
            Useful to see what server a user is connected to in a load-balanced environment. -->
            <add key=""ServerDesignation"" value=""Test"" />
            <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
            <!-- This is used to determine if the connection to the database should be made with OS Authentication
                 or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
                 the database and is configured as the user for this Application Server.  This user requires the 
                 same database permissions that the ""hsi"" user would have.
            -->
            <add key=""UseOSAuthentication"" value=""false"" />
            <!-- Message pop up warning when number of documents returned from query exceed the value
                Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
            -->
            <add key=""DocumentQueryWarningThreshold"" value=""500"" />
            <!-- Document queries are limited when number of returned documents exceed the value.
                Max supported value is 10000.
            -->
            <add key=""DocumentQueryLimit"" value=""2000"" />
            <!--The number of seconds an item will exist within the item cache before it will be expired-->
            <add key=""ItemCacheTimeout"" value=""60"" />
            <!--Settings for image rendering and image quality-->
            <add key=""RawImagesAllowed"" value=""true"" />
            <!--Setting for initializing the out of process image rendering service-->
            <add key=""UseIsolatedImageProcess"" value=""true"" />
            <add key=""CompressionQuality"" value=""70"" />
            <!--Setting for initializing the Chromium Image service used by Unity Forms-->
            <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
            <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
            <add key=""FormSaveToTiffTimeout"" value=""60"" />
            <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
            <add key=""PrintImageFormViaPDF"" value=""false"" />
            <!-- Specify a custom path for TPCF Worker directory-->
            <add key=""TPCFWorkerLocationOverride"" value="""" />
            <!--Settings for FileMonitoring Engine-->
            <add key=""DefaultStoragePath"" value="""" />
            <!--Settings for FOS Admittance Monitoring-->
            <add key=""watchFolder"" value="""" />
            <add key=""siteIDKeywordType"" value=""Site ID"" />
            <add key=""cleanupTimerInterval"" value=""15"" />
            <add key=""maxFileAgeInHours"" value=""4"" />
            <!--Settings for EIS -->
            <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
            <add key=""ValidateMessageSchema"" value=""true"" />
            <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
            <add key=""ContinueOnValidationError"" value=""false"" />
            <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
            <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
            <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
            <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
            <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
            <add key=""UseHTMLClientType"" value=""false"" />
            <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
            completed messages needing archiving. -->
            <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
            <!-- Username to connect to GCS.
                 Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
            <add key=""GCSUsername"" value="""" />
            <!-- Password to connect to GCS.
                 Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
            <add key=""GCSPassword"" value="""" />
            <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
            <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
            <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
            <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
            <!-- The Data Capture Server location for creating a WCF connection. -->
            <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
            <!-- This setting controls if the server will accept only https connections or not. 
              If you set this to false all incoming requests have to be made over https. 
              If you set this to true then both http and https connections are accepted. 
              The recommended setting is false.-->
            <add key=""AllowInsecureConnection"" value=""false"" />
            <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
              In a load-balanced environment, hostname would be the load-balancer.
              example: ""https://hostname/AppServer""	-->
            <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
            <!--Settings to enable OWIN startup-->
            <add key=""owin:AutomaticAppStartup"" value=""false"" />
            <!--Location of the OWIN startup class-->
            <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
            <!-- Location of the Identity Model Server  -->
            <add key=""IdentityModelServerURI"" value="""" />
            <!-- WorkView Mobile Settings-->
            <add key=""mobileAppsPath"" value=""[unc path]"" />
            <add key=""corsPolicy"" value=""*"" />
            <add key=""endpoints:WorkViewMobile"" value=""false"" />
            <!-- Responsive Apps Settings-->
            <add key=""endpoints:ResponsiveApps"" value=""false"" />
            <!-- WOPI Endpoint for Office Online Server-->
            <add key=""endpoints:Wopi"" value=""false"" />
            <!--Sesame Endpoint for Office Integrations-->
            <add key=""endpoints:Sesame"" value=""false"" />
            <!-- Iron Mountain Policy Center integration -->
            <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
            <!-- FHIR Settings-->
            <add key=""endpoints:FHIR"" value=""false"" />
            <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
            <!-- PPL Apps Settings-->
            <add key=""endpoints:PPL"" value=""false"" />
            <!-- Forms Settings-->
            <add key=""endpoints:Forms"" value=""false"" />
            <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
            <add key=""DocPopUrl"" value="""" />
            <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
            <add key=""StatementCompCacheLimit"" value="""" />
            <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
              Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
            <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
            <!-- OnBase Integration API Settings-->
            <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
            <add key=""owin:oia:lifeCycleId"" value="""" />
            <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
            <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
            <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
            <add key=""UseOnBaseFulltext"" value=""false"" />
            <!-- IDP Url for Content Composer authentication -->
            <add key=""ContentComposerIdpPath"" value="""" />
            <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
                 value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
                 this value can result in undesirable behavior. -->
            <add key=""KeywordDataCacheTimeout"" value=""20"" />
            <add key=""AllowInsecureExternalXsl "" value=""false"" />
          </appSettings>
          <!--HYLAND DIAGNOSTICS
            Used for debugging on machines with Hyland.Logging installed
            -->
          <Hyland.Logging TruncateLogValues=""1024"">
            <WindowsEventLogging sourcename=""Hyland Application Server"" />
            <Routes>
              <Route name=""Splunk"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Splunk"" value=""http://localhost:8989"" />
                <add key=""SplunkToken"" value=""token"" />
                <add key=""SplunkIndex"" value=""Index"" />
                <add key=""SplunkSource"" value=""Source"" />
                <add key=""SplunkSourceType"" value=""Source Type"" />
                <add key=""SplunkHost"" value=""Host"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""DiagnosticsConsole"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Http"" value=""http://localhost:8989"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value=""anothererror"" />
              </Route>
              <Route name=""ErrorEventLog"">
                <add key=""minimum-level"" value=""Error"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""NamedPipeCoreEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""PIMManagerEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
            </Routes>
            <AuditRoutes />
          </Hyland.Logging>
          <Hyland.Web.AppServerPop>
            <EnableChecksum value=""false"" />
            <ChecksumKey value="""" />
            <EnableLegacyChecksumCreation value=""false"" />
          </Hyland.Web.AppServerPop>
          <Hyland.Applications.Portals.ExternalAccess>
            <username value="""" />
            <password value="""" />
            <minPoolSize value=""0"" />
            <maxPoolSize value=""0"" />
          </Hyland.Applications.Portals.ExternalAccess>
          <Hyland.ResponsiveApps>
            <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
            <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
            <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
            <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
            <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
            <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
            <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
            <CoreAccessTokenLifetime value=""691200"" />
            <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
            <Apps>
            </Apps>
          </Hyland.ResponsiveApps>
          <!-- Content Composer settings -->
          <Hyland.ContentComposer.Core>
            <ClientId value=""id"" />
            <ClientSecret value=""secret"" />
            <Username value=""UN"" />
            <Password value=""PW"" />
          </Hyland.ContentComposer.Core>
          <!-- SharePoint Integrations settings -->
          <Hyland.Applications.Sharepoint.Services>
            <PoolSize max=""5"" min=""1"" />
            <ExpandKeysets value=""true"" />
          </Hyland.Applications.Sharepoint.Services>
          <Hyland.Applications.Sharepoint.SearchAdapter>
            <PoolSize max=""4"" min=""1"" />
            <DataSource name=""[DATASOURCE]"" />
            <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
            <StripDomainOnSecurityCheck value=""true"" />
            <isDocPop value=""true"" />
          </Hyland.Applications.Sharepoint.SearchAdapter>
          <!-- End SharePoint Integrations settings-->
          <Hyland.PlatterManagement>
            <Logging>
              <!-- This controls whether file I/O details (reading and writing) are logged. -->
              <FileIODetail value=""false"" />
            </Logging>
            <DiskgroupAlias>
              <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
            </DiskgroupAlias>
            <ForeignStorageDevices>
              <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
              <EMCTHRESHOLD value="""" />
              <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
              <PmCacheLocation value="""" />
              <!-- Path to cache location -->
              <PmCacheTimeout value="""" />
              <!-- Timeout in minutes.  Default is 60 minutes. -->
              <PmCacheSize value="""" />
              <!-- Cache size in MB.  Default is 500. -->
            </ForeignStorageDevices>
            <FileAccess>
              <PMAccessLevel value=""0"" />
              <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
            </FileAccess>
            <TemporaryFiles>
              <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
              <TempFileExpirationThreshold value="""" />
            </TemporaryFiles>
          </Hyland.PlatterManagement>
          <Hyland.Services>
            <!-- POOL SETTINGS
              Controls the size of the session pools when using disconnected web services.

              minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
              available in the session pool.

              maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
              available in the session pool.  Requests from the pool that exceed this value will block
              until another session is placed back into the pool.
            -->
            <poolSettings minSessions=""0"" maxSessions=""10"">
              <!-- Parameters that should be used in the session pool.
                 parameter
                  (attributes: 
                  name = ""[licenseType]""
                  value = ""[queryMeter]"" use query metering)
              -->
              <!--
              <parameters>
                <parameter name=""licenseType"" value=""queryMeter""/>
              </parameters
              -->
              <!-- Allows specification of a Service Login for use in Session Pools.  -->
              <!--
                <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
              -->
            </poolSettings>
            <!-- SECURITY SETTINGS
              Controls the security behavior of the Hyland APIs.

              useQueryContext (default false) - This parameter indicates if query context security will be
              used during the course of retrieval.  Query context means that a document must be retrieved
              through a document query before the document itself is accessible via another call.  If this
              parameter is omitted, the default is true.  Note: this value should be set to false when being
              used for disconnected web services.

              filterExceptions (default true) - This parameter indicates if the application server should not 
              send detailed information about exception. For example, the exact stack trace of the exception will 
              be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
              is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
              an authorized user.
            -->
            <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
            <Endpoint useRemoting=""true"" />
            <!-- SESSION SETTINGS
             Controls the session behavior.

             enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
             If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
             The timeout period is based on the ASP.NET session timeout found in the system.web\session 
             section with a minimum of 10 minutes-->
            <session enableTimeout=""false"" />
            <applicationServerCallback url="""" />
            <webServerBaseUrl url="""" />
            <!--requestValidation increases the security of your application server installation. It controls the level at 
            which the application server will validate client requests.

            Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
            server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
            coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
            only supported validation level.

            Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
            valid source. Note that if older clients are communicating to the application server that do not support request
            validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
            the application server. If there are clients older than the release version of the application server that will not
            be upgraded you should leave this value at zero (0).-->
            <requestValidation minVersion=""0"" />
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          </Hyland.Services>
          <!--
            The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
            -->
          <Hyland.XMLServices.DocumentConnector>
            <loginId name=""5"" />
            <loginPassword name=""5"" />
            <loginDatasource name=""5"" />
            <pool min=""5"" max=""5"" />
          </Hyland.XMLServices.DocumentConnector>
          <!--
            The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
          -->
          <Hyland.Core.FullText>
            <!-- The length of time (in seconds) before the search will timeout. -->
            <SearchTimeout value=""30"" />
            <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
            <SearchLog enableSearchlog=""false"" path="""" />
          </Hyland.Core.FullText>
          <!--
            The Hyland.Core.WorkView block defines options used by WorkView.
          -->
          <Hyland.WorkView.Core>
            <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
            <UnityEditableFilterMaxRows value=""250"" />
            <!--Sets the ERP date format for processing results for LOB Broker classes.-->
            <ERPDateFormat value=""yyyyMMdd"" />
            <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
        		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
        		Example:

        			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

        			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
        			only allow sandbox overrides for that specific domain and sub-domain. 
        		-->
            <FormattedTextIframeSupportedDomains value="""" />
          </Hyland.WorkView.Core>
          <Hyland.Core.Media />
          <Hyland.Core.Media.HostedApplicationServer>
            <url value="""" />
            <datasource value="""" />
            <username value="""" />
            <password value="""" />
          </Hyland.Core.Media.HostedApplicationServer>
          <Hyland.Authentication>
            <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
            <trustedClients trustMode=""Off"">
              <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
            </trustedClients>
            <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
          </Hyland.Authentication>
          <!--
            Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
          -->
          <Hyland.Core.IDOL ImageCompression=""70"">
            <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
            <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
          </Hyland.Core.IDOL>
          <!--
            Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
            The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
            The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
            The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
          -->
          <!--<Hyland.Core.Wopi>
         <useOfficeWebAppServer value=""false""/>
            <owaServerUri value=""https://[servername]/""/>
            <owaProxyBase value=""https://[servername]/[appserver]/private"" />
          </Hyland.Core.Wopi>-->
          <!-- Uncomment this section to enable LOB Broker Integration -->
          <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
            <AccountsPayableAPI
               VendorCacheSearchMinChars=""1""
                VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
                VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
                VendorMasterLookupReturnMultiple=""false""
                 VendorCacheAutoCompleteResultsMax=""30""  />

            <DataSources>
              -->
          <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
          <!--
              <DataSource Name=""APAcceleratorRelay""
                     API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                     API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                     LOB_RelayEndpoint =""LOBBrokerEndpoint""
                     Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                  <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
          <system.web>
            <webServices>
              <protocols>
                <add name=""HttpGet"" />
                <add name=""HttpPost"" />
                <add name=""HttpPostLocalhost"" />
                <add name=""Documentation"" />
              </protocols>
            </webServices>
            <!--  HTTPRUNTIME
              By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
              need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
              By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
              If uploading large documents, the executionTimeout value may need to be increased for proper processing.

              If uploads larger than 30MB are required, additional changes are required.
              Refer to the maxAllowedContentLength comments for information regarding the changes.
             -->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
            <!-- IDENTITY
              By setting impersonate=""true"" the username and password set in the registry will be used
              when the application is started.

              For the Web Server, impersonation is (most likely) not needed. The default account of
              NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
              permissions to communicate with the Application Server.

              Use Impersonation on the Application Server for proper NTFS file security.
              When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
              the Application Server will require a user with additional permissions to complete user authentication.

              Use a user with rights to the domain to allow NTFS file security.
              Use a user with Account Operator rights to allow Domain Authentication.

              Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
                aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

              NOTE: Each time aspnet_setreg.exe is run, the security on the 
                HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
                the security to allow read permissions by the user running the ASP .Net worker process.
            -->
            <!--
            <identity impersonate=""false""
              userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
              password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
            />
            -->
            <!--  DYNAMIC DEBUG COMPILATION
              Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
              false will improve runtime performance of this application. 
              Set compilation debug=""true"" to insert debugging symbols (.pdb information)
              into the compiled page. Because this creates a larger file that executes
              more slowly, you should set this value to true only when debugging and to
              false at all other times. For more information, refer to the documentation about
              debugging ASP.NET files.
            -->
            <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
            <!--  CUSTOM ERROR MESSAGES
                Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
                Add <error> tags for each of the errors you want to handle.

                ""On"" Always display custom (friendly) messages.
                ""Off"" Always display detailed ASP.NET error information.
                ""RemoteOnly"" Display custom (friendly) messages only to users not running 
                on the local Web server. This setting is recommended for security purposes, so 
                that you do not display application detail information to remote clients.
            -->
            <customErrors mode=""RemoteOnly"" />
            <!--  AUTHENTICATION 
              This section sets the authentication policies of the application. Possible modes are ""Windows"", 
              ""Forms"", ""Passport"" and ""None""

              ""None"" No authentication is performed. 
              ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
              its settings for the application. Anonymous access must be disabled in IIS. 
              ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
              you authenticate them in your application. A user credential token is stored in a cookie.
              ""Passport"" Authentication is performed via a centralized authentication service provided
              by Microsoft that offers a single logon and core profile services for member sites.
            -->
            <authentication mode=""Windows"" />
            <!--  AUTHORIZATION 
              This section sets the authorization policies of the application. You can allow or deny access
              to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
              (unauthenticated) users.
            -->
            <authorization>
              <allow users=""*"" />
              <!-- Allow all users -->
              <!--  <allow     users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
                  <deny      users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
              -->
            </authorization>
            <!--  APPLICATION-LEVEL TRACE LOGGING
              Application-level tracing enables trace log output for every page within an application. 
              Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
              trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
              application trace log by browsing the ""trace.axd"" page from your web application
              root.
            -->
            <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
            <!--  SESSION STATE SETTINGS
              By default ASP.NET uses cookies to identify which requests belong to a particular session. 
              If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
              To disable cookies, set sessionState cookieless=""true"".
            -->
            <sessionState mode=""Off"" timeout=""20"" />
            <!--  GLOBALIZATION
              This section sets the globalization settings of the application. 
            -->
            <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
            <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
          </system.web>
          <system.net>
            <connectionManagement>
              <add address=""*"" maxconnection=""24"" />
            </connectionManagement>
          </system.net>
          <system.webServer>
            <validation validateIntegratedModeConfiguration=""false"" />
            <modules>
              <!-- Http Trace -->
            </modules>
            <handlers>
              <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
              <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Welcome Integration (Kiosk) -->
              <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
              <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Http Trace -->
              <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- OIA requires GET,POST,PUT,DELETE -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
            </handlers>
            <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
            <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
            <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
            <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
            <!--Uncomment the section below and enter the value as needed.-->
            <!--This setting should be changed in both the web and application server's web.config.-->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <security>
              <requestFiltering>
                <requestLimits maxAllowedContentLength=""30000000"" />
              </requestFiltering>
              <authentication>
                <anonymousAuthentication enabled=""true"" />
                <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
              </authentication>
            </security>
            <defaultDocument>
              <files>
                <clear />
                <add value=""service.asmx"" />
              </files>
            </defaultDocument>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <applicationInitialization skipManagedModules=""true"">
                <add initializationPage=""/Service.svc"" />
            </applicationInitialization>
            -->
            <!-- ""Powered By"" header removal -->
            <httpProtocol>
              <customHeaders>
                <remove name=""X-Powered-By"" />
              </customHeaders>
            </httpProtocol>
          </system.webServer>
          <system.diagnostics>
            <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
                Trace Level	    | Nature of the Tracked Events
                ================================================================
                Off	            - N/A
                Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Verbose	        - ""Positive"" events: events that mark successful milestones.
                Information	    - ""Positive"" events: events that mark successful milestones.
                ActivityTracing	- Flow events between processing activities and components.
                All	            - Application may function properly. All events are emitted.
              -->
            <sources>
              <!-- Logs all stages of WCF pipeline -->
              <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs messages flowing through pipeline -->
              <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs when objects are read or written -->
              <source name=""System.Runtime.Serialization"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
            </sources>
            <sharedListeners>
              <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
            </sharedListeners>
            <trace autoflush=""true"" />
            <switches>
              <!-- 
                    This switch controls tracing globally through Hyland.Logging.
                    It configures the level of information from Trace that is logged.
                    For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                    minimal, normal, detailed, or verbose messages, respectively.
                    -->
              <add name=""hylandTracing"" value=""0"" />
            </switches>
          </system.diagnostics>
          <configProtectedData>
            <providers>
              <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
            </providers>
          </configProtectedData>
          <!--
          The system.identityModel section is used to enable Windows Identity Foundation options.

          The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
          The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
          -->
          <!--<system.identityModel>
            <identityConfiguration saveBootstrapContext=""true"">
              <securityTokenHandlers>
                <securityTokenHandlerConfiguration>
                  <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
                  <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                    <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
                  </issuerNameRegistry>
                </securityTokenHandlerConfiguration>
              </securityTokenHandlers>
            </identityConfiguration>
          </system.identityModel>-->
          <!--
          system.identityModel.services is used to configure authentication using the WS-Federation protocol.

          wsFederation node
            The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
            The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

          The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
          -->
          <!--<system.identityModel.services>
            <federationConfiguration requireSsl=""false"">
              <cookieHandler requireSsl=""false"" />
              <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
              <serviceCertificate>
                <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
              </serviceCertificate>
            </federationConfiguration>
          </system.identityModel.services>-->
          <system.serviceModel>
            <!-- WCF Logging -->
            <diagnostics>
              <!-- Enable Message Logging here. -->
              <!-- log all messages received or sent at the transport or service model levels -->
              <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
            </diagnostics>
            <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
            <services>
              <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
                <!-- ""Azure Service Bus Endpoint"" section 
                    This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                    it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                    NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
                <!--
              <endpoint binding=""netTcpRelayBinding"" 
                        bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                        contract=""Hyland.Services.Web.IAppServerService"" 
                        behaviorConfiguration=""sbTokenProvider"" 
                        address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
              -->
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
              </service>
              <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
                <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
                <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
              </service>
            </services>
            <client>
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
              <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
              <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
              To use the endpoint in a non secure channel(http)
              1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
              2. change the address url to use http scheme -->
              <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
            </client>
            <bindings>
              <basicHttpBinding>
                <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
                <binding name=""APIServiceSoap"">
                  <security mode=""TransportWithMessageCredential"" />
                </binding>
                <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                </binding>
                <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <transport clientCredentialType=""None"" />
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""None"" />
                </binding>
                <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""Transport"">
                    <transport clientCredentialType=""None"" />
                  </security>
                </binding>
                <binding name=""SPSearchBinding"">
                  <security mode=""TransportCredentialOnly"">
                    <transport clientCredentialType=""Windows"" />
                  </security>
                </binding>
              </basicHttpBinding>
            </bindings>
            <behaviors>
              <endpointBehaviors>
                <behavior name=""clientCert"">
                  <clientCredentials>
                    <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
                  </clientCredentials>
                </behavior>
                <behavior name=""LOBBrokerClientCertificateAuthentication"">
                  <clientCredentials>
                    <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
                  </clientCredentials>
                </behavior>
              </endpointBehaviors>
              <serviceBehaviors>
                <behavior name=""AppServerBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <behavior name=""SPSearchBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <!-- Default Behavior -->
                <behavior name="""">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                </behavior>
              </serviceBehaviors>
              <!-- ""Azure Service Bus Endpoint"" section -->
              <!--
                <endpointBehaviors>
                    <behavior name=""sbTokenProvider"">
                        <transportClientEndpointBehavior>
                            <tokenProvider>
                                <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                            </tokenProvider>
                        </transportClientEndpointBehavior>
                </behavior>
                </endpointBehaviors>
                -->
            </behaviors>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <extensions>
              <behaviorExtensions>
                 <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </behaviorExtensions>
              <bindingExtensions>
                <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </bindingExtensions>
            </extensions>
            -->
          </system.serviceModel>
          <runtime>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
          </runtime>
          <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
            <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
            <DataSources>
              <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
          <location path=""AuthService.asmx"">
          </location>
          <location path=""AuthOptServicePipeline.ashx"">
          </location>
        </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "root", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test94()
    {
        //Testing the parsing of the 231 ADFS section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":{""systemIdentityModel"":{""audienceUris"":[{""URI"":""https://Audience/URI/"",""id"":null}],""trustedIssuers"":[{""Thumbprint"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Name"":""Optional_Friendly_Name_For_The_Certificate"",""id"":null}]},""systemIdentityModelServices"":{""wsFederation"":{""Issuer"":""https://issuer/adfs/ls/"",""Realm"":""https://realm/URI/""},""serviceCertificate"":{""X509FindType"":""FindByThumbprint"",""FindValue"":""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"",""StoreLocation"":""LocalMachine"",""StoreName"":""My""},""CookieHandlerRequireSSL"":""false""},""knownKeys"":[],""ADFSEnabled"":""false"",""RequestValidationMode"":""2.0"",""AuthenticationMode"":""Windows"",""SynchronizeUserAttributes"":""true"",""AuthenticationOnly"":""false""},""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>

      <connectionStrings>
        <!-- ADO.NET connection string
          Fill in the [parameters]. Provider name is the database type.-->
    	  <add name=""[DataSourceName]"" connectionString=""Data Source=[server\instance];database=[databaseName];User Id=[user name];Password=[password]"" providerName=""[providerName]"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value="""" />
    	<add key=""dmsdatasource"" value=""[Datasource]"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
    	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false""/>
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
        <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />

        <!-- Sharebase folder descriptors fetch related configuration-->
        <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
        <add key =""SB_FolderFetchBatchSize"" value =""300""/>
        <!-- Sharebase folder Database Command Time Out in Seconds-->
        <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
      </appSettings>

      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging>
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" />
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""ErrorEventLog"">
            <!-- Write errors to the Event Log using the source specified above -->
            <add key=""HylandLog"" />
            <add key=""minimum-level"" value=""Error"" />
          </Route>
          <!--<Route name=""ELK"">
                <add key=""Http"" value=""http://localhost:5586""/>
                <add key=""CompactHttpFormat""/>
            </Route>-->
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
            <add key=""include-profiles"" value=""named-pipe-core""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""EventLog"" value=""Hyland PIM Manager"" />
            <add key=""include-profiles"" value=""pim-manager""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
        </Routes>
        <AuditRoutes>
          <!--<Route name=""DiagnosticsConsole"">
                <add key=""Http"" value=""http://localhost:8989"" /> 
            </Route>-->
        </AuditRoutes>
      </Hyland.Logging>

      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>

      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>

      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <!-- <WorkViewApi url=""https://[Server]/[AppServer]/private/workview/api/"" /> -->
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <!-- <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" /> -->
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <!-- <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" /> -->
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <!-- <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" /> -->
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
          <!-- <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" /> -->
        </Apps>
      </Hyland.ResponsiveApps>

      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value="""" />
        <ClientSecret value="""" />
        <Username value="""" />
        <Password value="""" />
      </Hyland.ContentComposer.Core>

      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>

      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>

      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <!-- The alias must map to a mount location which is equal to the contents of physicalplatter.lastuseddrive. -->
          <!-- type attribute can be ""unc"" or ""unix"".  Default is ""unc"" -->
          <!--
          <Alias   oldname=""\\ftp:\anonymous:<pwd>\\ftp-server\:21\\Diskgroups\FTPTest1\copy1"" 
              newname=""\\file-server\DISKGROUPS\FTPTest1\copy1"" 
              type=""unc""/>
          -->
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value="""" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>

      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
      </Hyland.Services>

      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name="""" />
        <loginPassword name="""" />
        <loginDatasource name="""" />
        <pool min=""0"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>

      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>

      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <!--<UnityEditableFilterMaxRows value=""250"" />-->
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <!--<ERPDateFormat value=""yyyyMMdd""/>-->
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <!--<FormattedTextIframeSupportedDomains value=""""/>-->
      </Hyland.WorkView.Core>

      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>

      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
        <trustedClients trustMode=""On"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
      </Hyland.Authentication>

      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->

      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--To use UTC time based cache refresh, set UseUTCTimeCacheRefresh to ""true"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll""
                 UseUTCTimeCacheRefresh=""false"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->

      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" />
        <httpCookies httpOnlyCookies=""true"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->

        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--
      <system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris>
                <add value=""https://Audience/URI/"" />
              </audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers>
                  <add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" />
                </trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>
      -->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--
      <system.identityModel.services>
        <federationConfiguration>
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>
      -->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Win32.Registry"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.1.0"" newVersion=""4.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.5.0"" newVersion=""1.2.5.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Memory"" culture=""neutral"" publicKeyToken=""cc7b13ffcd2ddd51"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.1"" newVersion=""4.0.1.1"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.TypeExtensions"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.2.0"" newVersion=""4.1.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Security.Principal.Windows"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.3.0"" newVersion=""4.1.3.0"" />
          </dependentAssembly>
        </assemblyBinding>    
      </runtime>
    </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "ADFS", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test95()
    {
        //Testing the parsing of the 231 Hyland.Logging section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure231WithVersionNumber);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":""23.1.7.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":{""windowsEventLogging"":{""SourceName"":""Hyland Application Server""},""Routes"":[{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":null,""splunk"":null,""file"":null,""http"":{""URL"":""http://localhost:8989""},""durablehttp"":null,""console"":null,""RouteType"":""Http"",""Name"":""DiagnosticsConsole"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""5"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":{""SourceName"":""Hyland""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""ErrorEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""named-pipe-core""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland Named Pipe Core""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""NamedPipeCoreEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""pim-manager""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland PIM Manager""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""PIMManagerEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null}],""truncateloggingcharacters"":""1024"",""profilesForHTML"":[""asp.net"",""ChangeTracking"",""client"",""configuration"",""error"",""EpicSettings"",""fulltext"",""ihe"",""ldap"",""logging"",""mobile.service"",""None"",""Patient-Window"",""report.services"",""service"",""tcservices"",""timer"",""undefined"",""vbscript"",""wcf"",""workflow"",""cache"",""chromium-service-pim"",""configuration"",""db"",""file"",""hl7"",""image-rendering-pim"",""locking"",""mobile.raw"",""named-pipe-core"",""OnBase"",""pim-manager"",""scriptexecution"",""TC"",""tcverbose"",""trace"",""unity"",""warnings"",""web.service""]},""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Logging>
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" />
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""ErrorEventLog"">
            <!-- Write errors to the Event Log using the source specified above -->
            <add key=""HylandLog"" />
            <add key=""minimum-level"" value=""Error"" />
          </Route>
          <!--<Route name=""ELK"">
                <add key=""Http"" value=""http://localhost:5586""/>
                <add key=""CompactHttpFormat""/>
            </Route>-->
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
            <add key=""include-profiles"" value=""named-pipe-core""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""EventLog"" value=""Hyland PIM Manager"" />
            <add key=""include-profiles"" value=""pim-manager""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
        </Routes>
        <AuditRoutes>
          <!--<Route name=""DiagnosticsConsole"">
                <add key=""Http"" value=""http://localhost:8989"" /> 
            </Route>-->
        </AuditRoutes>
      </Hyland.Logging>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Logging", xmldoc, new DefaultWebApplicationDataStructures());

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test96()
    {
        //Testing the parsing of the 231 Hyland.Authentication section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":{""trustedClients"":[{""StoreLocation"":""LocalMachine"",""StoreName"":""My"",""FindType"":""FindByThumbprint"",""FindValue"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Description"":""OptionalDescription"",""id"":null}],""TrustMode"":""true""},""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
        <trustedClients trustMode=""On"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
      </Hyland.Authentication>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Authentication", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test97()
    {
        //Testing the parsing of the translator that came back from the COMACON Helper executable
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var translatorValue = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");

        factory.ParseTranslator(ds, translatorValue);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test98()
    {
        //Tests the parsing of a 21.1 web.config and the iis settings to verify that determine if any of the Optimize for Windows Authentication settings are applied.
        var factory = new DefaultGenericHelperMethods();
        ServerManager manager = new ServerManager();
        Configuration config = manager.GetWebConfiguration("Default Web Site/AppServerx64-231");
        string xmlNode = @"<?xml version=""1.0"" encoding=""utf-8""?>
    <configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>

      <connectionStrings>
        <!-- ADO.NET connection string
          Fill in the [parameters]. Provider name is the database type.-->
    	  <add name=""[DataSourceName]"" connectionString=""Data Source=[server\instance];database=[databaseName];User Id=[user name];Password=[password]"" providerName=""[providerName]"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value="""" />
    	<add key=""dmsdatasource"" value=""[Datasource]"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
    	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false""/>
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
        <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />

        <!-- Sharebase folder descriptors fetch related configuration-->
        <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
        <add key =""SB_FolderFetchBatchSize"" value =""300""/>
        <!-- Sharebase folder Database Command Time Out in Seconds-->
        <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
      </appSettings>

      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging>
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" />
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""ErrorEventLog"">
            <!-- Write errors to the Event Log using the source specified above -->
            <add key=""HylandLog"" />
            <add key=""minimum-level"" value=""Error"" />
          </Route>
          <!--<Route name=""ELK"">
                <add key=""Http"" value=""http://localhost:5586""/>
                <add key=""CompactHttpFormat""/>
            </Route>-->
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
            <add key=""include-profiles"" value=""named-pipe-core""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""EventLog"" value=""Hyland PIM Manager"" />
            <add key=""include-profiles"" value=""pim-manager""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
        </Routes>
        <AuditRoutes>
          <!--<Route name=""DiagnosticsConsole"">
                <add key=""Http"" value=""http://localhost:8989"" /> 
            </Route>-->
        </AuditRoutes>
      </Hyland.Logging>

      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>

      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>

      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <!-- <WorkViewApi url=""https://[Server]/[AppServer]/private/workview/api/"" /> -->
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <!-- <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" /> -->
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <!-- <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" /> -->
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <!-- <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" /> -->
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
          <!-- <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" /> -->
        </Apps>
      </Hyland.ResponsiveApps>

      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value="""" />
        <ClientSecret value="""" />
        <Username value="""" />
        <Password value="""" />
      </Hyland.ContentComposer.Core>

      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>

      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>

      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <!-- The alias must map to a mount location which is equal to the contents of physicalplatter.lastuseddrive. -->
          <!-- type attribute can be ""unc"" or ""unix"".  Default is ""unc"" -->
          <!--
          <Alias   oldname=""\\ftp:\anonymous:<pwd>\\ftp-server\:21\\Diskgroups\FTPTest1\copy1"" 
              newname=""\\file-server\DISKGROUPS\FTPTest1\copy1"" 
              type=""unc""/>
          -->
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value="""" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>

      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
      </Hyland.Services>

      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name="""" />
        <loginPassword name="""" />
        <loginDatasource name="""" />
        <pool min=""0"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>

      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>

      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <!--<UnityEditableFilterMaxRows value=""250"" />-->
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <!--<ERPDateFormat value=""yyyyMMdd""/>-->
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <!--<FormattedTextIframeSupportedDomains value=""""/>-->
      </Hyland.WorkView.Core>

      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>

      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
        <trustedClients trustMode=""On"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
      </Hyland.Authentication>

      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->

      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--To use UTC time based cache refresh, set UseUTCTimeCacheRefresh to ""true"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll""
                 UseUTCTimeCacheRefresh=""false"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->

      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" />
        <httpCookies httpOnlyCookies=""true"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->

        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--
      <system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris>
                <add value=""https://Audience/URI/"" />
              </audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers>
                  <add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" />
                </trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>
      -->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--
      <system.identityModel.services>
        <federationConfiguration>
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>
      -->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Win32.Registry"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.1.0"" newVersion=""4.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.5.0"" newVersion=""1.2.5.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Memory"" culture=""neutral"" publicKeyToken=""cc7b13ffcd2ddd51"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.1"" newVersion=""4.0.1.1"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.TypeExtensions"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.2.0"" newVersion=""4.1.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Security.Principal.Windows"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.3.0"" newVersion=""4.1.3.0"" />
          </dependentAssembly>
        </assemblyBinding>    
      </runtime>
    </configuration>";
        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };
        XmlNode root = xmldoc.DocumentElement;
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        var translator = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");
        factory.CreateOptimizeWindowsAuthenticationForArray(config, new DefaultWebApplicationDataStructures(), xmldoc, webconfigconfig, "Application Server", translator, root.SelectSingleNode("appSettings"));

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test99()
    {
        var factory = new DefaultGenericHelperMethods();
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        factory.ParseSessionAdministration(webconfigconfig, @"C:\inetpub\wwwroot\AppServerx64-231\Admin\sessionAdminSecurity.config");
        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":{""users"":[],""roles"":[]},""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test100()
    {
        //Testing the Prebuilding of the 241 appSettings section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocLinkerSMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""Doc-Linker-SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseNewKeywordDataCacheImplementation"",""type"":""1"",""htmlIdName"":""Use-New-Keyword-Data-Cache-Implementation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ConfigurationImport_DatabaseTimeout"",""type"":""2"",""htmlIdName"":""Configuration-Import-Database-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:ExternalBaseUri"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:ExternalBaseUri"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:Port"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:Port"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ImageProcess"",""type"":""1"",""htmlIdName"":""PIM:ImageProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ChromiumProcess"",""type"":""1"",""htmlIdName"":""PIM:ChromiumProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""HyRCS:PageCountLimit"",""type"":""2"",""htmlIdName"":""HyRCS:PageCountLimit"",""Value"":""10000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"appSettings","add","ServerDesignation","2","Server-Designation","","","",""},
            {"appSettings","add","dmsdatasource","2","Data-Source","[Datasource]","","",""},
            {"appSettings","add","UseOSAuthentication","1","Use-OS-Authentication","false","","",""},
            {"appSettings","add","DocumentQueryWarningThreshold","2","Document-Query-Warning-Threshold","500","","",""},
            {"appSettings","add","DocumentQueryLimit","2","Document-Query-Limit","2000","","",""},
            {"appSettings","add","ItemCacheTimeout","2","Item-Cache-Timeout","60","","",""},
            {"appSettings","add","RawImagesAllowed","1","Raw-Images","true","","",""},
            {"appSettings","add","UseIsolatedImageProcess","1","Use-Isolated-Image-Process","true","","",""},
            {"appSettings","add","CompressionQuality","2","Compression-Quality","70","","",""},
            {"appSettings","add","EnableIsolatedChromiumProcess","1","Enable-Isolated-Chromium-Process","true","","",""},
            {"appSettings","add","FormSaveToTiffTimeout","2","Form-Save-To-TIFF-Timeout","60","","",""},
            {"appSettings","add","PrintImageFormViaPDF","1","Print-Image-Form-Via-PDF","false","","",""},
            {"appSettings","add","TPCFWorkerLocationOverride","2","TPCF-Worker-Location-Override","","","",""},
            {"appSettings","add","DefaultStoragePath","2","Default-Storage-Path","","","",""},
            {"appSettings","add","watchFolder","2","Watch-Folder","","","",""},
            {"appSettings","add","siteIDKeywordType","2","Site-ID-Keyword-Type","Site ID","","",""},
            {"appSettings","add","cleanupTimerInterval","2","Cleanup-Timer-Interval","15","","",""},
            {"appSettings","add","maxFileAgeInHours","2","Max-File-Age","4","","",""},
            {"appSettings","add","ValidateMessageSchema","1","Integrations-EIS-Validate-Message-Schema","true","","",""},
            {"appSettings","add","ContinueOnValidationError","1","Integrations-EIS-Continue-On-Validation-Error","false","","",""},
            {"appSettings","add","DataSetCacheCleanUpIntervalInMins","2","Integrations-EIS-Data-Set-Cache-Cleanup-Interval","60","","",""},
            {"appSettings","add","AppNetDirectory","2","Integrations-EIS-AppNet-Directory","[virtualRoot]","","",""},
            {"appSettings","add","MessageBrokerMonitorStartDelayInMinutes","2","Message-Broker-Monitor-Start-Delay","","","",""},
            {"appSettings","add","GCSUsername","2","GCS-Username","","","",""},
            {"appSettings","add","GCSPassword","2","GCS-Password","","","",""},
            {"appSettings","add","useLegacyKeyForUsageBasedBilling","2","Use-Legacy-Key-For-Usage-Based-Billing","false","","",""},
            {"appSettings","add","GCSPhoneHomeIntervalInMinutes","2","GCS-Phone-Home-Interval","60","","",""},
            {"appSettings","add","DataCaptureServerWCFEndpointAddress","2","Data-Capture-Server-WCF-Endpoint-Address","net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service","","",""},
            {"appSettings","add","AllowInsecureConnection","1","Allow-Insecure-Connections","false","","",""},
            {"appSettings","add","AppServerOrigin","2","OWIN-Application-Server-Origin","[virtualRoot]","","",""},
            {"appSettings","add","owin:AutomaticAppStartup","1","OWIN-Automatic-App-Startup","false","","",""},
            {"appSettings","add","owin:appStartup","2","OWIN-App-Startup","Hyland.Owin.Core.Startup, Hyland.Owin.Core","","",""},
            {"appSettings","add","IdentityModelServerURI","2","Identity-Model-Server-URI","","","",""},
            {"appSettings","add","mobileAppsPath","2","Mobile-Apps-Path","[unc path]","","",""},
            {"appSettings","add","corsPolicy","2","CORS-Policy","*","","",""},
            {"appSettings","add","endpoints:WorkViewMobile","1","WorkView-Mobile-Endpoint","false","","",""},
            {"appSettings","add","endpoints:ResponsiveApps","1","Responsive-Apps-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Wopi","1","WOPI-Endpoint","false","","",""},
            {"appSettings","add","endpoints:Sesame","1","Sesame-Endpoint","false","","",""},
            {"appSettings","add","endpoints:GovernanceRulesAsAService","1","Governance-Rules-As-A-Service-Endpoint","false","","",""},
            {"appSettings","add","endpoints:FHIR","1","Web-BLOB-Passthrough-FHIR-Endpoint","false","","",""},
            {"appSettings","add","SMARTonFHIRApplicationId","2","SMART-On-FHIR-Application-ID","[GUID]","","",""},
            {"appSettings","add","endpoints:PPL","1","PPL-Endpoint-Enabled","false","","",""},
            {"appSettings","add","endpoints:Forms","1","Forms-Endpoint","false","","",""},
            {"appSettings","add","DocPopUrl","2","PPL-DocPop-URL","","","",""},
            {"appSettings","add","StatementCompCacheLimit","2","Statement-Composition-Cache-Limit","","","",""},
            {"appSettings","add","UnityFormsToggleMaxFormWidth","1","Unity-Forms-Toggle-Max-Form-Width","false","","",""},
            {"appSettings","add","owin:oia:msgItemTypeId","2","owin:oia:msgItemTypeId","[Message Item Type ID]","","",""},
            {"appSettings","add","owin:oia:lifeCycleId","2","owin:oia:lifeCycleId","[Lifecycle ID]","","",""},
            {"appSettings","add","owin:oia:tmpFilePath","2","owin:oia:tmpFilePath","[UNC Path]","","",""},
            {"appSettings","add","owin:oia:tmpFileAgeInMs","2","owin:oia:tmpFileAgeInMs","[Temp File Age ms]","","",""},
            {"appSettings","add","owin:oia:cleanupIntervalInMs","2","owin:oia:cleanupIntervalInMs","[Cleanup Interval ms]","","",""},
            {"appSettings","add","UseOnBaseFulltext","1","Use-OnBase-Full-Text","false","","",""},
            {"appSettings","add","ContentComposerIdpPath","2","Content-Composer-IdP-Path","","","",""},
            {"appSettings","add","KeywordDataCacheTimeout","2","Keyword-Data-Cache-Timeout","20","","",""},
            {"appSettings","add","AllowInsecureExternalXsl ","1","Allow-Insecure-External-XSL","false","","",""},
            {"appSettings","add","SB_MaxQueryExecutionParallelism","2","Max-Query-Execution-Parallelism","10","","",""},
            {"appSettings","add","SB_FolderFetchBatchSize","2","Folder-Fetch-Batch-Size","300","","",""},
            {"appSettings","add","SB_DatabaseCommandTimeOut","2","Database-Command-TimeOut","300","","",""},
            {"appSettings","add","DocLinkerSMARTonFHIRApplicationId","2","Doc-Linker-SMART-On-FHIR-Application-ID","[GUID]","","",""},
            {"appSettings","add","UseNewKeywordDataCacheImplementation","1","Use-New-Keyword-Data-Cache-Implementation","false","","",""},
            {"appSettings","add","ConfigurationImport_DatabaseTimeout","2","Configuration-Import-Database-Timeout","300","","",""},
            {"appSettings","add","PIM:HyRCS:ExternalBaseUri","2","PIM:HyRCS:ExternalBaseUri","","","",""},
            {"appSettings","add","PIM:HyRCS:Port","2","PIM:HyRCS:Port","","","",""},
            {"appSettings","add","PIM:ImageProcess","1","PIM:ImageProcess","false","","",""},
            {"appSettings","add","PIM:ChromiumProcess","1","PIM:ChromiumProcess","false","","",""},
            {"appSettings","add","HyRCS:PageCountLimit","2","HyRCS:PageCountLimit","10000","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test101()
    {
        //Testing the Prebuilding of the 241 Hyland.ResponsiveApps section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.ResponsiveApps","WorkViewApi","url","2","Responsive-Apps-WorkView-API-URL","https://[Server]/[AppServer]/private/workview/api/","","",""},
            {"Hyland.ResponsiveApps","WorkViewFiles","url","2","Responsive-Apps-WorkView-Files-URL","https://[Server]/[AppServer]/private/workview/files/","","",""},
            {"Hyland.ResponsiveApps","ResponsiveAppsApi","url","2","Responsive-Apps-API-URL","https://[Server]/[AppServer]/private/responsive-apps/api/","","",""},
            {"Hyland.ResponsiveApps","IdentityProvider","url","2","Identity-Provider-URL","https://[Server]/idp/[tenant]/[population]","","",""},
            {"Hyland.ResponsiveApps","CoreAccessTokenLifetime","value","2","Core-Access-Token-Lifetime","691200","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test102()
    {
        //Testing the Prebuilding of the 241 Hyland.PlatterManagement section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.PlatterManagement","Logging/FileIODetail","value","1","File-IO-Detail","false","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/EMCTHRESHOLD","value","2","Foreign-Storage-EMC-Threshold","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheLocation","value","2","Foreign-Storage-PM-Cache-Location","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheTimeout","value","2","Foreign-Storage-PM-Cache-Timeout","","","",""},
                {"Hyland.PlatterManagement","ForeignStorageDevices/PmCacheSize","value","2","Foreign-Storage-PM-Cache-Size","","","",""},
                {"Hyland.PlatterManagement","FileAccess/PMAccessLevel","value","2","PM-File-Access-Level","0","","",""},
                {"Hyland.PlatterManagement","TemporaryFiles/TempFileExpirationThreshold","value","2","Temp-File-Expiration-Threshold-Time","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test103()
    {
        //Testing the Prebuilding of the 241 Hyland.Services section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
            {"Hyland.Services","poolSettings","minSessions","2","Hyland-Services-AppPool-Minimum-Sessions","0","","",""},
            {"Hyland.Services","poolSettings","maxSessions","2","Hyland-Services-AppPool-Maximum-Sessions","10","","",""},
            {"Hyland.Services","securitySettings","useQueryContext","1","Use-Query-Context","false","","",""},
            {"Hyland.Services","securitySettings","filterExceptions","1","Filter-Exceptions","true","","",""},
            {"Hyland.Services","Endpoint","useRemoting","1","Endpoint-Use-Remoting","true","","",""},
            {"Hyland.Services","session","enableTimeout","1","Session-Enable-Timeout","false","","",""},
            {"Hyland.Services","applicationServerCallback","url","2","Application-Server-Callback-URL","","","",""},
            {"Hyland.Services","webServerBaseUrl","url","2","Web-Server-Base-URL","","","",""},
            {"Hyland.Services","requestValidation","minVersion","2","Request-Validation-Minimum-Version","0","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test104()
    {
        //Testing the Prebuilding of the 241 Hyland.XMLServices.DocumentConnector section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.XMLServices.DocumentConnector","loginId","name","2","Login-ID","","","",""},
                {"Hyland.XMLServices.DocumentConnector","loginPassword","name","2","Login-Password","","","",""},
                {"Hyland.XMLServices.DocumentConnector","loginDatasource","name","2","Login-Datasource","","","",""},
                {"Hyland.XMLServices.DocumentConnector","pool","min","2","Pool-Min","0","","",""},
                {"Hyland.XMLServices.DocumentConnector","pool","max","2","Pool-Max","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test105()
    {
        //Testing the Prebuilding of the 241 Hyland.Core.FullText section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.FullText","SearchTimeout","value","2","Search-Timeout","30","","",""},
                {"Hyland.Core.FullText","SearchLog","enableSearchlog","1","Enable-Search-Log","false","","",""},
                {"Hyland.Core.FullText","SearchLog","path","2","Search-Log-Path","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test106()
    {
        //Testing the Prebuilding of the 241 Hyland.WorkView.Core section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.WorkView.Core","UnityEditableFilterMaxRows","value","2","Unity-Editable-Filter-Max-Rows","20","","",""},
                {"Hyland.WorkView.Core","ERPDateFormat","value","2","ERP-Date-Format-LOB-Broker","yyyyMMdd","","",""},
                {"Hyland.WorkView.Core","FormattedTextIframeSupportedDomains","value","2","Formatted-Text-Iframe-Supported-Domains","","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test107()
    {
        //Testing the Prebuilding of the 241 Hyland.Core.IDOL section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.IDOL","RemoteOCREngine","remoteServer","2","Remote-OCR-Engine-Remote-Server","localhost","","",""},
                {"Hyland.Core.IDOL","RemoteOCREngine","port","2","Remote-OCR-Engine-Port","9050","","",""},
                {"Hyland.Core.IDOL","RemoteOCREngine","timeOut","2","Remote-OCR-Engine-Timeout","5","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test108()
    {
        //Testing the Prebuilding of the 241 Hyland.Core.Wopi section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.Wopi"",""PathName"":""useOfficeWebAppServer"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Use-Office-Online-Server"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaServerUri"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-URI"",""Value"":""https://[servername]/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Wopi"",""PathName"":""owaProxyBase"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Office-Online-Server-Proxy-Base"",""Value"":""https://[servername]/[appserver]/private"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Core.Wopi","useOfficeWebAppServer","value","2","Use-Office-Online-Server","false","","",""},
                {"Hyland.Core.Wopi","owaServerUri","value","2","Office-Online-Server-URI","https://[servername]/","","",""},
                {"Hyland.Core.Wopi","owaProxyBase","value","2","Office-Online-Server-Proxy-Base","https://[servername]/[appserver]/private","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test109()
    {
        //Testing the Prebuilding of the 241 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheSearchMinChars","2","Vendor-Cache-Search-Minimum-Characters","1","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterKeyedLookupOp","2","Vendor-Master-Keyed-Lookup-Op","GetVenMasterRecordbyVenIDNCompID","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupSequence","2","Vendor-Master-Lookup-Sequence","GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorMasterLookupReturnMultiple","1","Vendor-Master-Lookup-Return-Multiple","false","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","AccountsPayableAPI","VendorCacheAutoCompleteResultsMax","2","Vendor-Cache-AutoComplete-Result-Max","30","","",""},
                {"Hyland.Integrations.LOBBroker.LOBBrokerConfigSection","IsEnabled","","1","Enable-LOB-Broker-Accounts-Payable","false","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test110()
    {
        //Testing the Prebuilding of the 241 system.web section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"system.web","httpRuntime","maxRequestLength","2","Http-Runtime-Maximum-Request-Length","30000","","",""},
                {"system.web","httpRuntime","executionTimeout","2","Http-Runtime-Execution-Timeout","300","","",""},
                {"system.web","sessionState","timeout","2","Session-Timeout-Length","20","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test111()
    {
        //Testing the Prebuilding of the 241 system.webServer section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"system.webServer","security/requestFiltering/requestLimits","maxAllowedContentLength","2","Max-Allowed-Content-Length","30000000","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test112()
    {
        //Testing the Prebuilding of the 241 root section of the webApplicationWebConfigConfiguration object.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        string[,] translator = new string[,]
        {
                {"root","Hyland.Core.IDOL","ImageCompression","2","Image-Compression","70","","",""}
        };

        factory.PrebuildKnownKeys(translator, ds);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test113()
    {
        //Testing the parsing of the 241 appSettings section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocLinkerSMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""Doc-Linker-SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseNewKeywordDataCacheImplementation"",""type"":""1"",""htmlIdName"":""Use-New-Keyword-Data-Cache-Implementation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ConfigurationImport_DatabaseTimeout"",""type"":""2"",""htmlIdName"":""Configuration-Import-Database-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:ExternalBaseUri"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:ExternalBaseUri"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:Port"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:Port"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ImageProcess"",""type"":""1"",""htmlIdName"":""PIM:ImageProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ChromiumProcess"",""type"":""1"",""htmlIdName"":""PIM:ChromiumProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""HyRCS:PageCountLimit"",""type"":""2"",""htmlIdName"":""HyRCS:PageCountLimit"",""Value"":""10000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ServerDesignation"",""type"":""2"",""htmlIdName"":""Server-Designation"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""dmsdatasource"",""type"":""2"",""htmlIdName"":""Data-Source"",""Value"":""[Datasource]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOSAuthentication"",""type"":""1"",""htmlIdName"":""Use-OS-Authentication"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryWarningThreshold"",""type"":""2"",""htmlIdName"":""Document-Query-Warning-Threshold"",""Value"":""500"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocumentQueryLimit"",""type"":""2"",""htmlIdName"":""Document-Query-Limit"",""Value"":""2000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ItemCacheTimeout"",""type"":""2"",""htmlIdName"":""Item-Cache-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""RawImagesAllowed"",""type"":""1"",""htmlIdName"":""Raw-Images"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseIsolatedImageProcess"",""type"":""1"",""htmlIdName"":""Use-Isolated-Image-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""CompressionQuality"",""type"":""2"",""htmlIdName"":""Compression-Quality"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""EnableIsolatedChromiumProcess"",""type"":""1"",""htmlIdName"":""Enable-Isolated-Chromium-Process"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""FormSaveToTiffTimeout"",""type"":""2"",""htmlIdName"":""Form-Save-To-TIFF-Timeout"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PrintImageFormViaPDF"",""type"":""1"",""htmlIdName"":""Print-Image-Form-Via-PDF"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""TPCFWorkerLocationOverride"",""type"":""2"",""htmlIdName"":""TPCF-Worker-Location-Override"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DefaultStoragePath"",""type"":""2"",""htmlIdName"":""Default-Storage-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""watchFolder"",""type"":""2"",""htmlIdName"":""Watch-Folder"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""siteIDKeywordType"",""type"":""2"",""htmlIdName"":""Site-ID-Keyword-Type"",""Value"":""Site ID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""cleanupTimerInterval"",""type"":""2"",""htmlIdName"":""Cleanup-Timer-Interval"",""Value"":""15"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""maxFileAgeInHours"",""type"":""2"",""htmlIdName"":""Max-File-Age"",""Value"":""4"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ValidateMessageSchema"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Validate-Message-Schema"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContinueOnValidationError"",""type"":""1"",""htmlIdName"":""Integrations-EIS-Continue-On-Validation-Error"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataSetCacheCleanUpIntervalInMins"",""type"":""2"",""htmlIdName"":""Integrations-EIS-Data-Set-Cache-Cleanup-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppNetDirectory"",""type"":""2"",""htmlIdName"":""Integrations-EIS-AppNet-Directory"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""MessageBrokerMonitorStartDelayInMinutes"",""type"":""2"",""htmlIdName"":""Message-Broker-Monitor-Start-Delay"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSUsername"",""type"":""2"",""htmlIdName"":""GCS-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPassword"",""type"":""2"",""htmlIdName"":""GCS-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""useLegacyKeyForUsageBasedBilling"",""type"":""2"",""htmlIdName"":""Use-Legacy-Key-For-Usage-Based-Billing"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""GCSPhoneHomeIntervalInMinutes"",""type"":""2"",""htmlIdName"":""GCS-Phone-Home-Interval"",""Value"":""60"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DataCaptureServerWCFEndpointAddress"",""type"":""2"",""htmlIdName"":""Data-Capture-Server-WCF-Endpoint-Address"",""Value"":""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureConnection"",""type"":""1"",""htmlIdName"":""Allow-Insecure-Connections"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AppServerOrigin"",""type"":""2"",""htmlIdName"":""OWIN-Application-Server-Origin"",""Value"":""[virtualRoot]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:AutomaticAppStartup"",""type"":""1"",""htmlIdName"":""OWIN-Automatic-App-Startup"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:appStartup"",""type"":""2"",""htmlIdName"":""OWIN-App-Startup"",""Value"":""Hyland.Owin.Core.Startup, Hyland.Owin.Core"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""IdentityModelServerURI"",""type"":""2"",""htmlIdName"":""Identity-Model-Server-URI"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""mobileAppsPath"",""type"":""2"",""htmlIdName"":""Mobile-Apps-Path"",""Value"":""[unc path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""corsPolicy"",""type"":""2"",""htmlIdName"":""CORS-Policy"",""Value"":""*"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:WorkViewMobile"",""type"":""1"",""htmlIdName"":""WorkView-Mobile-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:ResponsiveApps"",""type"":""1"",""htmlIdName"":""Responsive-Apps-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Wopi"",""type"":""1"",""htmlIdName"":""WOPI-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Sesame"",""type"":""1"",""htmlIdName"":""Sesame-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:GovernanceRulesAsAService"",""type"":""1"",""htmlIdName"":""Governance-Rules-As-A-Service-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:FHIR"",""type"":""1"",""htmlIdName"":""Web-BLOB-Passthrough-FHIR-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:PPL"",""type"":""1"",""htmlIdName"":""PPL-Endpoint-Enabled"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""endpoints:Forms"",""type"":""1"",""htmlIdName"":""Forms-Endpoint"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocPopUrl"",""type"":""2"",""htmlIdName"":""PPL-DocPop-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""StatementCompCacheLimit"",""type"":""2"",""htmlIdName"":""Statement-Composition-Cache-Limit"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UnityFormsToggleMaxFormWidth"",""type"":""1"",""htmlIdName"":""Unity-Forms-Toggle-Max-Form-Width"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:msgItemTypeId"",""type"":""2"",""htmlIdName"":""owin:oia:msgItemTypeId"",""Value"":""[Message Item Type ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:lifeCycleId"",""type"":""2"",""htmlIdName"":""owin:oia:lifeCycleId"",""Value"":""[Lifecycle ID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFilePath"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFilePath"",""Value"":""[UNC Path]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:tmpFileAgeInMs"",""type"":""2"",""htmlIdName"":""owin:oia:tmpFileAgeInMs"",""Value"":""[Temp File Age ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""owin:oia:cleanupIntervalInMs"",""type"":""2"",""htmlIdName"":""owin:oia:cleanupIntervalInMs"",""Value"":""[Cleanup Interval ms]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseOnBaseFulltext"",""type"":""1"",""htmlIdName"":""Use-OnBase-Full-Text"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ContentComposerIdpPath"",""type"":""2"",""htmlIdName"":""Content-Composer-IdP-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""KeywordDataCacheTimeout"",""type"":""2"",""htmlIdName"":""Keyword-Data-Cache-Timeout"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""AllowInsecureExternalXsl "",""type"":""1"",""htmlIdName"":""Allow-Insecure-External-XSL"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_MaxQueryExecutionParallelism"",""type"":""2"",""htmlIdName"":""Max-Query-Execution-Parallelism"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_FolderFetchBatchSize"",""type"":""2"",""htmlIdName"":""Folder-Fetch-Batch-Size"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""SB_DatabaseCommandTimeOut"",""type"":""2"",""htmlIdName"":""Database-Command-TimeOut"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""DocLinkerSMARTonFHIRApplicationId"",""type"":""2"",""htmlIdName"":""Doc-Linker-SMART-On-FHIR-Application-ID"",""Value"":""[GUID]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""UseNewKeywordDataCacheImplementation"",""type"":""1"",""htmlIdName"":""Use-New-Keyword-Data-Cache-Implementation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""ConfigurationImport_DatabaseTimeout"",""type"":""2"",""htmlIdName"":""Configuration-Import-Database-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:ExternalBaseUri"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:ExternalBaseUri"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:HyRCS:Port"",""type"":""2"",""htmlIdName"":""PIM:HyRCS:Port"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ImageProcess"",""type"":""1"",""htmlIdName"":""PIM:ImageProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""PIM:ChromiumProcess"",""type"":""1"",""htmlIdName"":""PIM:ChromiumProcess"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""appSettings"",""PathName"":""add"",""AttributeName"":""HyRCS:PageCountLimit"",""type"":""2"",""htmlIdName"":""HyRCS:PageCountLimit"",""Value"":""10000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<appSettings>
    <!-- Server Designation for this application server.
    Useful to see what server a user is connected to in a load-balanced environment. -->
    <add key=""ServerDesignation"" value="""" />
    <add key=""dmsdatasource"" value=""[Datasource]"" />
    <!-- This is used to determine if the connection to the database should be made with OS Authentication
         or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
         the database and is configured as the user for this Application Server.  This user requires the 
         same database permissions that the ""hsi"" user would have.
    -->
    <add key=""UseOSAuthentication"" value=""false"" />
    <!-- Message pop up warning when number of documents returned from query exceed the value
        Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
    -->
    <add key=""DocumentQueryWarningThreshold"" value=""500"" />
    <!-- Document queries are limited when number of returned documents exceed the value.
        Max supported value is 10000.
    -->
    <add key=""DocumentQueryLimit"" value=""2000"" />
    <!--The number of seconds an item will exist within the item cache before it will be expired-->
    <add key=""ItemCacheTimeout"" value=""60"" />
    <!--Settings for image rendering and image quality-->
    <add key=""RawImagesAllowed"" value=""true"" />
    <!--Setting for initializing the out of process image rendering service-->
    <add key=""UseIsolatedImageProcess"" value=""true"" />
    <add key=""CompressionQuality"" value=""70"" />
    <!--Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
    <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
    <add key=""FormSaveToTiffTimeout"" value=""60"" />
    <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
    <add key=""PrintImageFormViaPDF"" value=""true""/>
    <!-- Specify a custom path for TPCF Worker directory-->
    <add key=""TPCFWorkerLocationOverride"" value="""" />
    <!--Settings for FileMonitoring Engine-->
    <add key=""DefaultStoragePath"" value="""" />
    <!--Settings for FOS Admittance Monitoring-->
    <add key=""watchFolder"" value="""" />
    <add key=""siteIDKeywordType"" value=""Site ID"" />
    <add key=""cleanupTimerInterval"" value=""15"" />
    <add key=""maxFileAgeInHours"" value=""4"" />
    <!--Settings for EIS -->
    <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
    <add key=""ValidateMessageSchema"" value=""true"" />
    <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
    <add key=""ContinueOnValidationError"" value=""false"" />
    <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
    <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
    <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
    <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
    <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
    completed messages needing archiving. -->
    <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
    <!-- Username to connect to GCS.
         Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
    <add key=""GCSUsername"" value="""" />
    <!-- Password to connect to GCS.
         Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
         example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
    <add key=""GCSPassword"" value="""" />
    <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
    <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
    <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
    <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
    <!-- The Data Capture Server location for creating a WCF connection. -->
    <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
    <!-- This setting controls if the server will accept only https connections or not. 
      If you set this to false all incoming requests have to be made over https. 
      If you set this to true then both http and https connections are accepted. 
      The recommended setting is false.-->
    <add key=""AllowInsecureConnection"" value=""false"" />
    <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
      In a load-balanced environment, hostname would be the load-balancer.
      example: ""https://hostname/AppServer""	-->
    <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
    <!--Settings to enable OWIN startup-->
    <add key=""owin:AutomaticAppStartup"" value=""false"" />
    <!--Location of the OWIN startup class-->
    <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
    <!-- Location of the Identity Model Server  -->
    <add key=""IdentityModelServerURI"" value="""" />
    <!-- WorkView Mobile Settings-->
    <add key=""mobileAppsPath"" value=""[unc path]"" />
    <add key=""corsPolicy"" value=""*"" />
    <add key=""endpoints:WorkViewMobile"" value=""false"" />
    <!-- Responsive Apps Settings-->
    <add key=""endpoints:ResponsiveApps"" value=""false"" />
    <!-- WOPI Endpoint for Office Online Server-->
    <add key=""endpoints:Wopi"" value=""false"" />
    <!--Sesame Endpoint for Office Integrations-->
    <add key=""endpoints:Sesame"" value=""false"" />
    <!-- Iron Mountain Policy Center integration -->
    <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
    <!-- FHIR Settings-->
    <add key=""endpoints:FHIR"" value=""false"" />
    <!-- Generic SMART on FHIR Application ID -->
    <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- DocLinkerSMARTonFHIRApplicationId is only used with the Epic LaunchLinkDocumentsActivities API. -->
    <add key=""DocLinkerSMARTonFHIRApplicationId"" value=""[GUID]"" />
    <!-- PPL Apps Settings-->
    <add key=""endpoints:PPL"" value=""false"" />
    <!-- Forms Settings-->
    <add key=""endpoints:Forms"" value=""false"" />
    <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
    <add key=""DocPopUrl"" value="""" />
    <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
    <add key=""StatementCompCacheLimit"" value="""" />
    <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
      Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
    <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
    <!-- OnBase Integration API Settings-->
    <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
    <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
    <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
    <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
    <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
    <add key=""UseOnBaseFulltext"" value=""false"" />
    <!-- IDP Url for Content Composer authentication -->
    <add key=""ContentComposerIdpPath"" value="""" />
    <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
         value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
         this value can result in undesirable behavior. -->
    <add key=""KeywordDataCacheTimeout"" value=""20"" />
    <!-- Feature Flag setting for selecting the implementation of the Keyword Data Cache -->
    <add key=""UseNewKeywordDataCacheImplementation"" value=""false""/>

    <!-- Sharebase folder descriptors fetch related configuration-->
    <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
    <add key =""SB_FolderFetchBatchSize"" value =""300""/>
    <!-- Sharebase folder Database Command Time Out in Seconds-->
    <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
    <!--Set the default timeout in seconds for Import actions. Values below 120 will be ignored-->
    <add key=""ConfigurationImport_DatabaseTimeout"" value=""300""/>
    <!-- Set an external URI for HyRCS instead of using the out of process localhost instance -->
    <add key=""PIM:HyRCS:ExternalBaseUri"" value=""""/>
    <!-- Set a custom port for HyRCS. This will ONLY be applied if using the out of process localhost instance.  For an external instance,
         specify the port in the PIM:HyRCS:ExternalBaseUri value. -->
    <add key=""PIM:HyRCS:Port"" value=""""/>
    <!--SET TO REPLACE 'UseIsolatedImageProcess' - Setting for initializing the out of process image rendering service-->
    <add key=""PIM:ImageProcess"" value=""false"" />
    <!--SET TO REPLACE 'EnableIsolatedChromiumProcess' - Setting for initializing the Chromium Image service used by Unity Forms-->
    <add key=""PIM:ChromiumProcess"" value=""false"" />
	<!--Set the page count limit for HyRCS-->
	<add key=""HyRCS:PageCountLimit"" value=""10000""/>  
  </appSettings>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "appSettings", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test114()
    {
        //Testing the parsing of the 241 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""WorkViewFiles"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-WorkView-Files-URL"",""Value"":""https://[Server]/[AppServer]/private/workview/files/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""ResponsiveAppsApi"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Responsive-Apps-API-URL"",""Value"":""https://[Server]/[AppServer]/private/responsive-apps/api/"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""IdentityProvider"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Identity-Provider-URL"",""Value"":""https://[Server]/idp/[tenant]/[population]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ResponsiveApps"",""PathName"":""CoreAccessTokenLifetime"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Core-Access-Token-Lifetime"",""Value"":""691200"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":{""responsiveApps"":[]},""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.ResponsiveApps>
            <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
            <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
            <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
            <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
            <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
            <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
            <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
            <CoreAccessTokenLifetime value=""691200"" />
            <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
            <Apps>
            </Apps>
          </Hyland.ResponsiveApps>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.ResponsiveApps", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test115()
    {
        //Testing the parsing of the 241 Hyland.ResponsiveApps section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.PlatterManagement"",""PathName"":""Logging/FileIODetail"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""File-IO-Detail"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/EMCTHRESHOLD"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-EMC-Threshold"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheLocation"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Location"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Timeout"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""ForeignStorageDevices/PmCacheSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Foreign-Storage-PM-Cache-Size"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""FileAccess/PMAccessLevel"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""PM-File-Access-Level"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.PlatterManagement"",""PathName"":""TemporaryFiles/TempFileExpirationThreshold"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Temp-File-Expiration-Threshold-Time"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":{""diskGroupAliases"":[{""oldname"":""OldName"",""newname"":""NewName"",""type"":""unc"",""id"":null}]},""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.PlatterManagement>
            <Logging>
              <!-- This controls whether file I/O details (reading and writing) are logged. -->
              <FileIODetail value=""false"" />
            </Logging>
            <DiskgroupAlias>
              <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
            </DiskgroupAlias>
            <ForeignStorageDevices>
              <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
              <EMCTHRESHOLD value="""" />
              <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
              <PmCacheLocation value="""" />
              <!-- Path to cache location -->
              <PmCacheTimeout value="""" />
              <!-- Timeout in minutes.  Default is 60 minutes. -->
              <PmCacheSize value="""" />
              <!-- Cache size in MB.  Default is 500. -->
            </ForeignStorageDevices>
            <FileAccess>
              <PMAccessLevel value=""0"" />
              <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
            </FileAccess>
            <TemporaryFiles>
              <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
              <TempFileExpirationThreshold value="""" />
            </TemporaryFiles>
          </Hyland.PlatterManagement>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.PlatterManagement", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test116()
    {
        //Testing the parsing of the 241 Hyland.Services section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""minSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Minimum-Sessions"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""poolSettings"",""AttributeName"":""maxSessions"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Maximum-Sessions"",""Value"":""10"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""username"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Username"",""Value"":""[serviceUserName]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""serviceLogin"",""AttributeName"":""password"",""type"":""2"",""htmlIdName"":""Hyland-Services-AppPool-Password"",""Value"":""[servicePassword]"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""useQueryContext"",""type"":""1"",""htmlIdName"":""Use-Query-Context"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""securitySettings"",""AttributeName"":""filterExceptions"",""type"":""1"",""htmlIdName"":""Filter-Exceptions"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""Endpoint"",""AttributeName"":""useRemoting"",""type"":""1"",""htmlIdName"":""Endpoint-Use-Remoting"",""Value"":""true"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""session"",""AttributeName"":""enableTimeout"",""type"":""1"",""htmlIdName"":""Session-Enable-Timeout"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""applicationServerCallback"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Application-Server-Callback-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""webServerBaseUrl"",""AttributeName"":""url"",""type"":""2"",""htmlIdName"":""Web-Server-Base-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Services"",""PathName"":""requestValidation"",""AttributeName"":""minVersion"",""type"":""2"",""htmlIdName"":""Request-Validation-Minimum-Version"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
      </Hyland.Services>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Services", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test117()
    {
        //Testing the parsing of the 241 Hyland.XMLServices.DocumentConnector section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginId"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-ID"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginPassword"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Password"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""loginDatasource"",""AttributeName"":""name"",""type"":""2"",""htmlIdName"":""Login-Datasource"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""min"",""type"":""2"",""htmlIdName"":""Pool-Min"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.XMLServices.DocumentConnector"",""PathName"":""pool"",""AttributeName"":""max"",""type"":""2"",""htmlIdName"":""Pool-Max"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.XMLServices.DocumentConnector>
            <loginId name=""5"" />
            <loginPassword name=""5"" />
            <loginDatasource name=""5"" />
            <pool min=""5"" max=""5"" />
          </Hyland.XMLServices.DocumentConnector>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.XMLServices.DocumentConnector", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test118()
    {
        //Testing the parsing of the 241 Hyland.Core.FullText section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchTimeout"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Search-Timeout"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""enableSearchlog"",""type"":""1"",""htmlIdName"":""Enable-Search-Log"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.FullText"",""PathName"":""SearchLog"",""AttributeName"":""path"",""type"":""2"",""htmlIdName"":""Search-Log-Path"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.FullText>
            <!-- The length of time (in seconds) before the search will timeout. -->
            <SearchTimeout value=""30"" />
            <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
            <SearchLog enableSearchlog=""false"" path="""" />
          </Hyland.Core.FullText>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.FullText", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test119()
    {
        //Testing the parsing of the 241 Hyland.WorkView.Core section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.WorkView.Core"",""PathName"":""UnityEditableFilterMaxRows"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Unity-Editable-Filter-Max-Rows"",""Value"":""250"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""ERPDateFormat"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""ERP-Date-Format-LOB-Broker"",""Value"":""yyyyMMdd"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.WorkView.Core"",""PathName"":""FormattedTextIframeSupportedDomains"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Formatted-Text-Iframe-Supported-Domains"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.WorkView.Core>
            <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
            <UnityEditableFilterMaxRows value=""250"" />
            <!--Sets the ERP date format for processing results for LOB Broker classes.-->
            <ERPDateFormat value=""yyyyMMdd"" />
            <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
        		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
        		Example:

        			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

        			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
        			only allow sandbox overrides for that specific domain and sub-domain. 
        		-->
            <FormattedTextIframeSupportedDomains value="""" />
          </Hyland.WorkView.Core>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.WorkView.Core", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test120()
    {
        //Testing the parsing of the 241 Hyland.Core.IDOL section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""remoteServer"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Remote-Server"",""Value"":""localhost"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""port"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Port"",""Value"":""9050"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.IDOL"",""PathName"":""RemoteOCREngine"",""AttributeName"":""timeOut"",""type"":""2"",""htmlIdName"":""Remote-OCR-Engine-Timeout"",""Value"":""5"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Core.IDOL ImageCompression=""70"">
            <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
            <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
          </Hyland.Core.IDOL>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Core.IDOL", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test121()
    {
        //Testing the parsing of the 241 Hyland.Integrations.LOBBroker.LOBBrokerConfigSection section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheSearchMinChars"",""type"":""2"",""htmlIdName"":""Vendor-Cache-Search-Minimum-Characters"",""Value"":""1"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterKeyedLookupOp"",""type"":""2"",""htmlIdName"":""Vendor-Master-Keyed-Lookup-Op"",""Value"":""GetVenMasterRecordbyVenIDNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupSequence"",""type"":""2"",""htmlIdName"":""Vendor-Master-Lookup-Sequence"",""Value"":""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorMasterLookupReturnMultiple"",""type"":""1"",""htmlIdName"":""Vendor-Master-Lookup-Return-Multiple"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""AccountsPayableAPI"",""AttributeName"":""VendorCacheAutoCompleteResultsMax"",""type"":""2"",""htmlIdName"":""Vendor-Cache-AutoComplete-Result-Max"",""Value"":""30"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"",""PathName"":""IsEnabled"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Enable-LOB-Broker-Accounts-Payable"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
          <configSections>
            <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
            <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
            <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
            <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
            <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
            <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
            <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
            <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
            <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
            <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
            <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
            <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
            <!-- ADFS sections -->
            <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
            <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <!-- End ADFS sections -->
            <!--LOB Broker Section-->
            <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
            <!--End LOB Broker Section-->
            <!-- External Access Client section -->
            <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
            <!-- End External Access Client section-->
            <!-- Responsive Apps section-->
            <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
            <!-- End Responsive Apps section-->
            <!-- SharePoint Integration section -->
            <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
            <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
            <!-- End SharePoint Integration section -->
            <!-- Content Composer section -->
            <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
            <!-- End Content Composer section -->
          </configSections>
          <connectionStrings>
            <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security Additional Options""
              connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
          </connectionStrings>
          <appSettings>
            <!-- Server Designation for this application server.
            Useful to see what server a user is connected to in a load-balanced environment. -->
            <add key=""ServerDesignation"" value=""Test"" />
            <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
            <!-- This is used to determine if the connection to the database should be made with OS Authentication
                 or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
                 the database and is configured as the user for this Application Server.  This user requires the 
                 same database permissions that the ""hsi"" user would have.
            -->
            <add key=""UseOSAuthentication"" value=""false"" />
            <!-- Message pop up warning when number of documents returned from query exceed the value
                Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
            -->
            <add key=""DocumentQueryWarningThreshold"" value=""500"" />
            <!-- Document queries are limited when number of returned documents exceed the value.
                Max supported value is 10000.
            -->
            <add key=""DocumentQueryLimit"" value=""2000"" />
            <!--The number of seconds an item will exist within the item cache before it will be expired-->
            <add key=""ItemCacheTimeout"" value=""60"" />
            <!--Settings for image rendering and image quality-->
            <add key=""RawImagesAllowed"" value=""true"" />
            <!--Setting for initializing the out of process image rendering service-->
            <add key=""UseIsolatedImageProcess"" value=""true"" />
            <add key=""CompressionQuality"" value=""70"" />
            <!--Setting for initializing the Chromium Image service used by Unity Forms-->
            <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
            <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
            <add key=""FormSaveToTiffTimeout"" value=""60"" />
            <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
            <add key=""PrintImageFormViaPDF"" value=""false"" />
            <!-- Specify a custom path for TPCF Worker directory-->
            <add key=""TPCFWorkerLocationOverride"" value="""" />
            <!--Settings for FileMonitoring Engine-->
            <add key=""DefaultStoragePath"" value="""" />
            <!--Settings for FOS Admittance Monitoring-->
            <add key=""watchFolder"" value="""" />
            <add key=""siteIDKeywordType"" value=""Site ID"" />
            <add key=""cleanupTimerInterval"" value=""15"" />
            <add key=""maxFileAgeInHours"" value=""4"" />
            <!--Settings for EIS -->
            <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
            <add key=""ValidateMessageSchema"" value=""true"" />
            <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
            <add key=""ContinueOnValidationError"" value=""false"" />
            <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
            <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
            <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
            <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
            <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
            <add key=""UseHTMLClientType"" value=""false"" />
            <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
            completed messages needing archiving. -->
            <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
            <!-- Username to connect to GCS.
                 Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
            <add key=""GCSUsername"" value="""" />
            <!-- Password to connect to GCS.
                 Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
            <add key=""GCSPassword"" value="""" />
            <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
            <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
            <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
            <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
            <!-- The Data Capture Server location for creating a WCF connection. -->
            <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
            <!-- This setting controls if the server will accept only https connections or not. 
              If you set this to false all incoming requests have to be made over https. 
              If you set this to true then both http and https connections are accepted. 
              The recommended setting is false.-->
            <add key=""AllowInsecureConnection"" value=""false"" />
            <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
              In a load-balanced environment, hostname would be the load-balancer.
              example: ""https://hostname/AppServer""	-->
            <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
            <!--Settings to enable OWIN startup-->
            <add key=""owin:AutomaticAppStartup"" value=""false"" />
            <!--Location of the OWIN startup class-->
            <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
            <!-- Location of the Identity Model Server  -->
            <add key=""IdentityModelServerURI"" value="""" />
            <!-- WorkView Mobile Settings-->
            <add key=""mobileAppsPath"" value=""[unc path]"" />
            <add key=""corsPolicy"" value=""*"" />
            <add key=""endpoints:WorkViewMobile"" value=""false"" />
            <!-- Responsive Apps Settings-->
            <add key=""endpoints:ResponsiveApps"" value=""false"" />
            <!-- WOPI Endpoint for Office Online Server-->
            <add key=""endpoints:Wopi"" value=""false"" />
            <!--Sesame Endpoint for Office Integrations-->
            <add key=""endpoints:Sesame"" value=""false"" />
            <!-- Iron Mountain Policy Center integration -->
            <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
            <!-- FHIR Settings-->
            <add key=""endpoints:FHIR"" value=""false"" />
            <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
            <!-- PPL Apps Settings-->
            <add key=""endpoints:PPL"" value=""false"" />
            <!-- Forms Settings-->
            <add key=""endpoints:Forms"" value=""false"" />
            <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
            <add key=""DocPopUrl"" value="""" />
            <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
            <add key=""StatementCompCacheLimit"" value="""" />
            <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
              Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
            <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
            <!-- OnBase Integration API Settings-->
            <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
            <add key=""owin:oia:lifeCycleId"" value="""" />
            <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
            <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
            <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
            <add key=""UseOnBaseFulltext"" value=""false"" />
            <!-- IDP Url for Content Composer authentication -->
            <add key=""ContentComposerIdpPath"" value="""" />
            <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
                 value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
                 this value can result in undesirable behavior. -->
            <add key=""KeywordDataCacheTimeout"" value=""20"" />
            <add key=""AllowInsecureExternalXsl "" value=""false"" />
          </appSettings>
          <!--HYLAND DIAGNOSTICS
            Used for debugging on machines with Hyland.Logging installed
            -->
          <Hyland.Logging TruncateLogValues=""1024"">
            <WindowsEventLogging sourcename=""Hyland Application Server"" />
            <Routes>
              <Route name=""Splunk"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Splunk"" value=""http://localhost:8989"" />
                <add key=""SplunkToken"" value=""token"" />
                <add key=""SplunkIndex"" value=""Index"" />
                <add key=""SplunkSource"" value=""Source"" />
                <add key=""SplunkSourceType"" value=""Source Type"" />
                <add key=""SplunkHost"" value=""Host"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""DiagnosticsConsole"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Http"" value=""http://localhost:8989"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value=""anothererror"" />
              </Route>
              <Route name=""ErrorEventLog"">
                <add key=""minimum-level"" value=""Error"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""NamedPipeCoreEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""PIMManagerEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
            </Routes>
            <AuditRoutes />
          </Hyland.Logging>
          <Hyland.Web.AppServerPop>
            <EnableChecksum value=""false"" />
            <ChecksumKey value="""" />
            <EnableLegacyChecksumCreation value=""false"" />
          </Hyland.Web.AppServerPop>
          <Hyland.Applications.Portals.ExternalAccess>
            <username value="""" />
            <password value="""" />
            <minPoolSize value=""0"" />
            <maxPoolSize value=""0"" />
          </Hyland.Applications.Portals.ExternalAccess>
          <Hyland.ResponsiveApps>
            <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
            <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
            <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
            <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
            <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
            <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
            <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
            <CoreAccessTokenLifetime value=""691200"" />
            <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
            <Apps>
            </Apps>
          </Hyland.ResponsiveApps>
          <!-- Content Composer settings -->
          <Hyland.ContentComposer.Core>
            <ClientId value=""id"" />
            <ClientSecret value=""secret"" />
            <Username value=""UN"" />
            <Password value=""PW"" />
          </Hyland.ContentComposer.Core>
          <!-- SharePoint Integrations settings -->
          <Hyland.Applications.Sharepoint.Services>
            <PoolSize max=""5"" min=""1"" />
            <ExpandKeysets value=""true"" />
          </Hyland.Applications.Sharepoint.Services>
          <Hyland.Applications.Sharepoint.SearchAdapter>
            <PoolSize max=""4"" min=""1"" />
            <DataSource name=""[DATASOURCE]"" />
            <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
            <StripDomainOnSecurityCheck value=""true"" />
            <isDocPop value=""true"" />
          </Hyland.Applications.Sharepoint.SearchAdapter>
          <!-- End SharePoint Integrations settings-->
          <Hyland.PlatterManagement>
            <Logging>
              <!-- This controls whether file I/O details (reading and writing) are logged. -->
              <FileIODetail value=""false"" />
            </Logging>
            <DiskgroupAlias>
              <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
            </DiskgroupAlias>
            <ForeignStorageDevices>
              <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
              <EMCTHRESHOLD value="""" />
              <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
              <PmCacheLocation value="""" />
              <!-- Path to cache location -->
              <PmCacheTimeout value="""" />
              <!-- Timeout in minutes.  Default is 60 minutes. -->
              <PmCacheSize value="""" />
              <!-- Cache size in MB.  Default is 500. -->
            </ForeignStorageDevices>
            <FileAccess>
              <PMAccessLevel value=""0"" />
              <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
            </FileAccess>
            <TemporaryFiles>
              <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
              <TempFileExpirationThreshold value="""" />
            </TemporaryFiles>
          </Hyland.PlatterManagement>
          <Hyland.Services>
            <!-- POOL SETTINGS
              Controls the size of the session pools when using disconnected web services.

              minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
              available in the session pool.

              maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
              available in the session pool.  Requests from the pool that exceed this value will block
              until another session is placed back into the pool.
            -->
            <poolSettings minSessions=""0"" maxSessions=""10"">
              <!-- Parameters that should be used in the session pool.
                 parameter
                  (attributes: 
                  name = ""[licenseType]""
                  value = ""[queryMeter]"" use query metering)
              -->
              <!--
              <parameters>
                <parameter name=""licenseType"" value=""queryMeter""/>
              </parameters
              -->
              <!-- Allows specification of a Service Login for use in Session Pools.  -->
              <!--
                <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
              -->
            </poolSettings>
            <!-- SECURITY SETTINGS
              Controls the security behavior of the Hyland APIs.

              useQueryContext (default false) - This parameter indicates if query context security will be
              used during the course of retrieval.  Query context means that a document must be retrieved
              through a document query before the document itself is accessible via another call.  If this
              parameter is omitted, the default is true.  Note: this value should be set to false when being
              used for disconnected web services.

              filterExceptions (default true) - This parameter indicates if the application server should not 
              send detailed information about exception. For example, the exact stack trace of the exception will 
              be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
              is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
              an authorized user.
            -->
            <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
            <Endpoint useRemoting=""true"" />
            <!-- SESSION SETTINGS
             Controls the session behavior.

             enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
             If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
             The timeout period is based on the ASP.NET session timeout found in the system.web\session 
             section with a minimum of 10 minutes-->
            <session enableTimeout=""false"" />
            <applicationServerCallback url="""" />
            <webServerBaseUrl url="""" />
            <!--requestValidation increases the security of your application server installation. It controls the level at 
            which the application server will validate client requests.

            Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
            server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
            coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
            only supported validation level.

            Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
            valid source. Note that if older clients are communicating to the application server that do not support request
            validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
            the application server. If there are clients older than the release version of the application server that will not
            be upgraded you should leave this value at zero (0).-->
            <requestValidation minVersion=""0"" />
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          </Hyland.Services>
          <!--
            The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
            -->
          <Hyland.XMLServices.DocumentConnector>
            <loginId name=""5"" />
            <loginPassword name=""5"" />
            <loginDatasource name=""5"" />
            <pool min=""5"" max=""5"" />
          </Hyland.XMLServices.DocumentConnector>
          <!--
            The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
          -->
          <Hyland.Core.FullText>
            <!-- The length of time (in seconds) before the search will timeout. -->
            <SearchTimeout value=""30"" />
            <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
            <SearchLog enableSearchlog=""false"" path="""" />
          </Hyland.Core.FullText>
          <!--
            The Hyland.Core.WorkView block defines options used by WorkView.
          -->
          <Hyland.WorkView.Core>
            <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
            <UnityEditableFilterMaxRows value=""250"" />
            <!--Sets the ERP date format for processing results for LOB Broker classes.-->
            <ERPDateFormat value=""yyyyMMdd"" />
            <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
        		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
        		Example:

        			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

        			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
        			only allow sandbox overrides for that specific domain and sub-domain. 
        		-->
            <FormattedTextIframeSupportedDomains value="""" />
          </Hyland.WorkView.Core>
          <Hyland.Core.Media />
          <Hyland.Core.Media.HostedApplicationServer>
            <url value="""" />
            <datasource value="""" />
            <username value="""" />
            <password value="""" />
          </Hyland.Core.Media.HostedApplicationServer>
          <Hyland.Authentication>
            <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
            <trustedClients trustMode=""Off"">
              <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
            </trustedClients>
            <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
          </Hyland.Authentication>
          <!--
            Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
          -->
          <Hyland.Core.IDOL ImageCompression=""70"">
            <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
            <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
          </Hyland.Core.IDOL>
          <!--
            Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
            The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
            The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
            The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
          -->
          <!--<Hyland.Core.Wopi>
         <useOfficeWebAppServer value=""false""/>
            <owaServerUri value=""https://[servername]/""/>
            <owaProxyBase value=""https://[servername]/[appserver]/private"" />
          </Hyland.Core.Wopi>-->
          <!-- Uncomment this section to enable LOB Broker Integration -->
          <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
            <AccountsPayableAPI
               VendorCacheSearchMinChars=""1""
                VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
                VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
                VendorMasterLookupReturnMultiple=""false""
                 VendorCacheAutoCompleteResultsMax=""30""  />

            <DataSources>
              -->
          <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
          <!--
              <DataSource Name=""APAcceleratorRelay""
                     API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                     API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                     LOB_RelayEndpoint =""LOBBrokerEndpoint""
                     Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                  <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
          <system.web>
            <webServices>
              <protocols>
                <add name=""HttpGet"" />
                <add name=""HttpPost"" />
                <add name=""HttpPostLocalhost"" />
                <add name=""Documentation"" />
              </protocols>
            </webServices>
            <!--  HTTPRUNTIME
              By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
              need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
              By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
              If uploading large documents, the executionTimeout value may need to be increased for proper processing.

              If uploads larger than 30MB are required, additional changes are required.
              Refer to the maxAllowedContentLength comments for information regarding the changes.
             -->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
            <!-- IDENTITY
              By setting impersonate=""true"" the username and password set in the registry will be used
              when the application is started.

              For the Web Server, impersonation is (most likely) not needed. The default account of
              NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
              permissions to communicate with the Application Server.

              Use Impersonation on the Application Server for proper NTFS file security.
              When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
              the Application Server will require a user with additional permissions to complete user authentication.

              Use a user with rights to the domain to allow NTFS file security.
              Use a user with Account Operator rights to allow Domain Authentication.

              Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
                aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

              NOTE: Each time aspnet_setreg.exe is run, the security on the 
                HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
                the security to allow read permissions by the user running the ASP .Net worker process.
            -->
            <!--
            <identity impersonate=""false""
              userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
              password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
            />
            -->
            <!--  DYNAMIC DEBUG COMPILATION
              Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
              false will improve runtime performance of this application. 
              Set compilation debug=""true"" to insert debugging symbols (.pdb information)
              into the compiled page. Because this creates a larger file that executes
              more slowly, you should set this value to true only when debugging and to
              false at all other times. For more information, refer to the documentation about
              debugging ASP.NET files.
            -->
            <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
            <!--  CUSTOM ERROR MESSAGES
                Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
                Add <error> tags for each of the errors you want to handle.

                ""On"" Always display custom (friendly) messages.
                ""Off"" Always display detailed ASP.NET error information.
                ""RemoteOnly"" Display custom (friendly) messages only to users not running 
                on the local Web server. This setting is recommended for security purposes, so 
                that you do not display application detail information to remote clients.
            -->
            <customErrors mode=""RemoteOnly"" />
            <!--  AUTHENTICATION 
              This section sets the authentication policies of the application. Possible modes are ""Windows"", 
              ""Forms"", ""Passport"" and ""None""

              ""None"" No authentication is performed. 
              ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
              its settings for the application. Anonymous access must be disabled in IIS. 
              ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
              you authenticate them in your application. A user credential token is stored in a cookie.
              ""Passport"" Authentication is performed via a centralized authentication service provided
              by Microsoft that offers a single logon and core profile services for member sites.
            -->
            <authentication mode=""Windows"" />
            <!--  AUTHORIZATION 
              This section sets the authorization policies of the application. You can allow or deny access
              to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
              (unauthenticated) users.
            -->
            <authorization>
              <allow users=""*"" />
              <!-- Allow all users -->
              <!--  <allow     users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
                  <deny      users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
              -->
            </authorization>
            <!--  APPLICATION-LEVEL TRACE LOGGING
              Application-level tracing enables trace log output for every page within an application. 
              Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
              trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
              application trace log by browsing the ""trace.axd"" page from your web application
              root.
            -->
            <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
            <!--  SESSION STATE SETTINGS
              By default ASP.NET uses cookies to identify which requests belong to a particular session. 
              If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
              To disable cookies, set sessionState cookieless=""true"".
            -->
            <sessionState mode=""Off"" timeout=""20"" />
            <!--  GLOBALIZATION
              This section sets the globalization settings of the application. 
            -->
            <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
            <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
          </system.web>
          <system.net>
            <connectionManagement>
              <add address=""*"" maxconnection=""24"" />
            </connectionManagement>
          </system.net>
          <system.webServer>
            <validation validateIntegratedModeConfiguration=""false"" />
            <modules>
              <!-- Http Trace -->
            </modules>
            <handlers>
              <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
              <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Welcome Integration (Kiosk) -->
              <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
              <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Http Trace -->
              <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- OIA requires GET,POST,PUT,DELETE -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
            </handlers>
            <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
            <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
            <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
            <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
            <!--Uncomment the section below and enter the value as needed.-->
            <!--This setting should be changed in both the web and application server's web.config.-->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <security>
              <requestFiltering>
                <requestLimits maxAllowedContentLength=""30000000"" />
              </requestFiltering>
              <authentication>
                <anonymousAuthentication enabled=""true"" />
                <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
              </authentication>
            </security>
            <defaultDocument>
              <files>
                <clear />
                <add value=""service.asmx"" />
              </files>
            </defaultDocument>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <applicationInitialization skipManagedModules=""true"">
                <add initializationPage=""/Service.svc"" />
            </applicationInitialization>
            -->
            <!-- ""Powered By"" header removal -->
            <httpProtocol>
              <customHeaders>
                <remove name=""X-Powered-By"" />
              </customHeaders>
            </httpProtocol>
          </system.webServer>
          <system.diagnostics>
            <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
                Trace Level	    | Nature of the Tracked Events
                ================================================================
                Off	            - N/A
                Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Verbose	        - ""Positive"" events: events that mark successful milestones.
                Information	    - ""Positive"" events: events that mark successful milestones.
                ActivityTracing	- Flow events between processing activities and components.
                All	            - Application may function properly. All events are emitted.
              -->
            <sources>
              <!-- Logs all stages of WCF pipeline -->
              <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs messages flowing through pipeline -->
              <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs when objects are read or written -->
              <source name=""System.Runtime.Serialization"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
            </sources>
            <sharedListeners>
              <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
            </sharedListeners>
            <trace autoflush=""true"" />
            <switches>
              <!-- 
                    This switch controls tracing globally through Hyland.Logging.
                    It configures the level of information from Trace that is logged.
                    For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                    minimal, normal, detailed, or verbose messages, respectively.
                    -->
              <add name=""hylandTracing"" value=""0"" />
            </switches>
          </system.diagnostics>
          <configProtectedData>
            <providers>
              <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
            </providers>
          </configProtectedData>
          <!--
          The system.identityModel section is used to enable Windows Identity Foundation options.

          The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
          The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
          -->
          <!--<system.identityModel>
            <identityConfiguration saveBootstrapContext=""true"">
              <securityTokenHandlers>
                <securityTokenHandlerConfiguration>
                  <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
                  <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                    <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
                  </issuerNameRegistry>
                </securityTokenHandlerConfiguration>
              </securityTokenHandlers>
            </identityConfiguration>
          </system.identityModel>-->
          <!--
          system.identityModel.services is used to configure authentication using the WS-Federation protocol.

          wsFederation node
            The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
            The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

          The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
          -->
          <!--<system.identityModel.services>
            <federationConfiguration requireSsl=""false"">
              <cookieHandler requireSsl=""false"" />
              <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
              <serviceCertificate>
                <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
              </serviceCertificate>
            </federationConfiguration>
          </system.identityModel.services>-->
          <system.serviceModel>
            <!-- WCF Logging -->
            <diagnostics>
              <!-- Enable Message Logging here. -->
              <!-- log all messages received or sent at the transport or service model levels -->
              <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
            </diagnostics>
            <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
            <services>
              <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
                <!-- ""Azure Service Bus Endpoint"" section 
                    This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                    it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                    NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
                <!--
              <endpoint binding=""netTcpRelayBinding"" 
                        bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                        contract=""Hyland.Services.Web.IAppServerService"" 
                        behaviorConfiguration=""sbTokenProvider"" 
                        address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
              -->
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
              </service>
              <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
                <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
                <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
              </service>
            </services>
            <client>
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
              <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
              <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
              To use the endpoint in a non secure channel(http)
              1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
              2. change the address url to use http scheme -->
              <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
            </client>
            <bindings>
              <basicHttpBinding>
                <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
                <binding name=""APIServiceSoap"">
                  <security mode=""TransportWithMessageCredential"" />
                </binding>
                <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                </binding>
                <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <transport clientCredentialType=""None"" />
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""None"" />
                </binding>
                <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""Transport"">
                    <transport clientCredentialType=""None"" />
                  </security>
                </binding>
                <binding name=""SPSearchBinding"">
                  <security mode=""TransportCredentialOnly"">
                    <transport clientCredentialType=""Windows"" />
                  </security>
                </binding>
              </basicHttpBinding>
            </bindings>
            <behaviors>
              <endpointBehaviors>
                <behavior name=""clientCert"">
                  <clientCredentials>
                    <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
                  </clientCredentials>
                </behavior>
                <behavior name=""LOBBrokerClientCertificateAuthentication"">
                  <clientCredentials>
                    <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
                  </clientCredentials>
                </behavior>
              </endpointBehaviors>
              <serviceBehaviors>
                <behavior name=""AppServerBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <behavior name=""SPSearchBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <!-- Default Behavior -->
                <behavior name="""">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                </behavior>
              </serviceBehaviors>
              <!-- ""Azure Service Bus Endpoint"" section -->
              <!--
                <endpointBehaviors>
                    <behavior name=""sbTokenProvider"">
                        <transportClientEndpointBehavior>
                            <tokenProvider>
                                <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                            </tokenProvider>
                        </transportClientEndpointBehavior>
                </behavior>
                </endpointBehaviors>
                -->
            </behaviors>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <extensions>
              <behaviorExtensions>
                 <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </behaviorExtensions>
              <bindingExtensions>
                <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </bindingExtensions>
            </extensions>
            -->
          </system.serviceModel>
          <runtime>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
          </runtime>
          <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
            <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
            <DataSources>
              <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
          <location path=""AuthService.asmx"">
          </location>
          <location path=""AuthOptServicePipeline.ashx"">
          </location>
        </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Integrations.LOBBroker.LOBBrokerConfigSection", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test122()
    {
        //Testing the parsing of the 241 system.web section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""maxRequestLength"",""type"":""2"",""htmlIdName"":""Http-Runtime-Maximum-Request-Length"",""Value"":""30000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""httpRuntime"",""AttributeName"":""executionTimeout"",""type"":""2"",""htmlIdName"":""Http-Runtime-Execution-Timeout"",""Value"":""300"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""system.web"",""PathName"":""sessionState"",""AttributeName"":""timeout"",""type"":""2"",""htmlIdName"":""Session-Timeout-Length"",""Value"":""20"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.web>
            <webServices>
              <protocols>
                <add name=""HttpGet"" />
                <add name=""HttpPost"" />
                <add name=""HttpPostLocalhost"" />
                <add name=""Documentation"" />
              </protocols>
            </webServices>
            <!--  HTTPRUNTIME
              By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
              need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
              By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
              If uploading large documents, the executionTimeout value may need to be increased for proper processing.

              If uploads larger than 30MB are required, additional changes are required.
              Refer to the maxAllowedContentLength comments for information regarding the changes.
             -->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
            <!-- IDENTITY
              By setting impersonate=""true"" the username and password set in the registry will be used
              when the application is started.

              For the Web Server, impersonation is (most likely) not needed. The default account of
              NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
              permissions to communicate with the Application Server.

              Use Impersonation on the Application Server for proper NTFS file security.
              When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
              the Application Server will require a user with additional permissions to complete user authentication.

              Use a user with rights to the domain to allow NTFS file security.
              Use a user with Account Operator rights to allow Domain Authentication.

              Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
                aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

              NOTE: Each time aspnet_setreg.exe is run, the security on the 
                HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
                the security to allow read permissions by the user running the ASP .Net worker process.
            -->
            <!--
            <identity impersonate=""false""
              userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
              password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
            />
            -->
            <!--  DYNAMIC DEBUG COMPILATION
              Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
              false will improve runtime performance of this application. 
              Set compilation debug=""true"" to insert debugging symbols (.pdb information)
              into the compiled page. Because this creates a larger file that executes
              more slowly, you should set this value to true only when debugging and to
              false at all other times. For more information, refer to the documentation about
              debugging ASP.NET files.
            -->
            <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
            <!--  CUSTOM ERROR MESSAGES
                Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
                Add <error> tags for each of the errors you want to handle.

                ""On"" Always display custom (friendly) messages.
                ""Off"" Always display detailed ASP.NET error information.
                ""RemoteOnly"" Display custom (friendly) messages only to users not running 
                on the local Web server. This setting is recommended for security purposes, so 
                that you do not display application detail information to remote clients.
            -->
            <customErrors mode=""RemoteOnly"" />
            <!--  AUTHENTICATION 
              This section sets the authentication policies of the application. Possible modes are ""Windows"", 
              ""Forms"", ""Passport"" and ""None""

              ""None"" No authentication is performed. 
              ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
              its settings for the application. Anonymous access must be disabled in IIS. 
              ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
              you authenticate them in your application. A user credential token is stored in a cookie.
              ""Passport"" Authentication is performed via a centralized authentication service provided
              by Microsoft that offers a single logon and core profile services for member sites.
            -->
            <authentication mode=""Windows"" />
            <!--  AUTHORIZATION 
              This section sets the authorization policies of the application. You can allow or deny access
              to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
              (unauthenticated) users.
            -->
            <authorization>
              <allow users=""*"" />
              <!-- Allow all users -->
              <!--  <allow     users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
                  <deny      users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
              -->
            </authorization>
            <!--  APPLICATION-LEVEL TRACE LOGGING
              Application-level tracing enables trace log output for every page within an application. 
              Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
              trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
              application trace log by browsing the ""trace.axd"" page from your web application
              root.
            -->
            <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
            <!--  SESSION STATE SETTINGS
              By default ASP.NET uses cookies to identify which requests belong to a particular session. 
              If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
              To disable cookies, set sessionState cookieless=""true"".
            -->
            <sessionState mode=""Off"" timeout=""20"" />
            <!--  GLOBALIZATION
              This section sets the globalization settings of the application. 
            -->
            <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
            <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
          </system.web>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.web", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test123()
    {
        //Testing the parsing of the 241 system.webServer section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""system.webServer"",""PathName"":""security/requestFiltering/requestLimits"",""AttributeName"":""maxAllowedContentLength"",""type"":""2"",""htmlIdName"":""Max-Allowed-Content-Length"",""Value"":""30000000"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<system.webServer>
            <validation validateIntegratedModeConfiguration=""false"" />
            <modules>
              <!-- Http Trace -->
            </modules>
            <handlers>
              <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
              <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Welcome Integration (Kiosk) -->
              <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
              <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Http Trace -->
              <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- OIA requires GET,POST,PUT,DELETE -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
            </handlers>
            <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
            <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
            <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
            <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
            <!--Uncomment the section below and enter the value as needed.-->
            <!--This setting should be changed in both the web and application server's web.config.-->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <security>
              <requestFiltering>
                <requestLimits maxAllowedContentLength=""30000000"" />
              </requestFiltering>
              <authentication>
                <anonymousAuthentication enabled=""true"" />
                <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
              </authentication>
            </security>
            <defaultDocument>
              <files>
                <clear />
                <add value=""service.asmx"" />
              </files>
            </defaultDocument>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <applicationInitialization skipManagedModules=""true"">
                <add initializationPage=""/Service.svc"" />
            </applicationInitialization>
            -->
            <!-- ""Powered By"" header removal -->
            <httpProtocol>
              <customHeaders>
                <remove name=""X-Powered-By"" />
              </customHeaders>
            </httpProtocol>
          </system.webServer>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "system.webServer", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test124()
    {
        //Testing the parsing of the 241 root section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(@"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}");

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[{""Section"":""root"",""PathName"":""Hyland.Core.IDOL"",""AttributeName"":""ImageCompression"",""type"":""2"",""htmlIdName"":""Image-Compression"",""Value"":""70"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
          <configSections>
            <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
            <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
            <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
            <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
            <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
            <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
            <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
            <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
            <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
            <section name=""Hyland.Core.IDOL"" type=""Hyland.Common.Core.IDOL.Configuration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
            <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
            <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
            <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
            <!-- ADFS sections -->
            <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
            <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
            <!-- End ADFS sections -->
            <!--LOB Broker Section-->
            <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
            <!--End LOB Broker Section-->
            <!-- External Access Client section -->
            <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
            <!-- End External Access Client section-->
            <!-- Responsive Apps section-->
            <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
            <!-- End Responsive Apps section-->
            <!-- SharePoint Integration section -->
            <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
            <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
            <!-- End SharePoint Integration section -->
            <!-- Content Composer section -->
            <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
            <!-- End Content Composer section -->
          </configSections>
          <connectionStrings>
            <add name=""SQL Integrated Security"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""SQL No Integrated Security"" connectionString=""Data Source=DataSource;database=Database;User Id=UserID;Password=Password""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle TNS No Integrated Security"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle No TNS No Integrated Security"" connectionString=""Data Source=DataSource/Host;User Id=UserID;Password=Password;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""SQL Integrated Security Additional Options"" connectionString=""Data Source=DataSource;database=Database;Integrated Security=True""
              providerName=""System.Data.SqlClient"" />
            <add name=""Oracle TNS Integrated Security Additional Options""
              connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=Host)(PORT=1234))(CONNECT_DATA=(SERVICE_NAME=Database)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=Hosting)(PORT=123456))(CONNECT_DATA=(SERVICE_NAME=TestDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
            <add name=""Oracle Other2"" connectionString=""Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCPS)(HOST=HostingServer)(PORT=12))(CONNECT_DATA=(SERVICE_NAME=AnotherDatabase)));User Id= /;""
              providerName=""Oracle.ManagedDataAccess.Client"" />
          </connectionStrings>
          <appSettings>
            <!-- Server Designation for this application server.
            Useful to see what server a user is connected to in a load-balanced environment. -->
            <add key=""ServerDesignation"" value=""Test"" />
            <add key=""dmsdatasource"" value=""SQL Integrated Security"" />
            <!-- This is used to determine if the connection to the database should be made with OS Authentication
                 or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
                 the database and is configured as the user for this Application Server.  This user requires the 
                 same database permissions that the ""hsi"" user would have.
            -->
            <add key=""UseOSAuthentication"" value=""false"" />
            <!-- Message pop up warning when number of documents returned from query exceed the value
                Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
            -->
            <add key=""DocumentQueryWarningThreshold"" value=""500"" />
            <!-- Document queries are limited when number of returned documents exceed the value.
                Max supported value is 10000.
            -->
            <add key=""DocumentQueryLimit"" value=""2000"" />
            <!--The number of seconds an item will exist within the item cache before it will be expired-->
            <add key=""ItemCacheTimeout"" value=""60"" />
            <!--Settings for image rendering and image quality-->
            <add key=""RawImagesAllowed"" value=""true"" />
            <!--Setting for initializing the out of process image rendering service-->
            <add key=""UseIsolatedImageProcess"" value=""true"" />
            <add key=""CompressionQuality"" value=""70"" />
            <!--Setting for initializing the Chromium Image service used by Unity Forms-->
            <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
            <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
            <add key=""FormSaveToTiffTimeout"" value=""60"" />
            <!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
            <add key=""PrintImageFormViaPDF"" value=""false"" />
            <!-- Specify a custom path for TPCF Worker directory-->
            <add key=""TPCFWorkerLocationOverride"" value="""" />
            <!--Settings for FileMonitoring Engine-->
            <add key=""DefaultStoragePath"" value="""" />
            <!--Settings for FOS Admittance Monitoring-->
            <add key=""watchFolder"" value="""" />
            <add key=""siteIDKeywordType"" value=""Site ID"" />
            <add key=""cleanupTimerInterval"" value=""15"" />
            <add key=""maxFileAgeInHours"" value=""4"" />
            <!--Settings for EIS -->
            <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
            <add key=""ValidateMessageSchema"" value=""true"" />
            <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
            <add key=""ContinueOnValidationError"" value=""false"" />
            <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
            <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
            <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
            <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
            <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
            <add key=""UseHTMLClientType"" value=""false"" />
            <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
            completed messages needing archiving. -->
            <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
            <!-- Username to connect to GCS.
                 Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
            <add key=""GCSUsername"" value="""" />
            <!-- Password to connect to GCS.
                 Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
                 example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
            <add key=""GCSPassword"" value="""" />
            <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
            <add key=""useLegacyKeyForUsageBasedBilling"" value="""" />
            <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
            <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
            <!-- The Data Capture Server location for creating a WCF connection. -->
            <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
            <!-- This setting controls if the server will accept only https connections or not. 
              If you set this to false all incoming requests have to be made over https. 
              If you set this to true then both http and https connections are accepted. 
              The recommended setting is false.-->
            <add key=""AllowInsecureConnection"" value=""false"" />
            <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
              In a load-balanced environment, hostname would be the load-balancer.
              example: ""https://hostname/AppServer""	-->
            <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
            <!--Settings to enable OWIN startup-->
            <add key=""owin:AutomaticAppStartup"" value=""false"" />
            <!--Location of the OWIN startup class-->
            <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
            <!-- Location of the Identity Model Server  -->
            <add key=""IdentityModelServerURI"" value="""" />
            <!-- WorkView Mobile Settings-->
            <add key=""mobileAppsPath"" value=""[unc path]"" />
            <add key=""corsPolicy"" value=""*"" />
            <add key=""endpoints:WorkViewMobile"" value=""false"" />
            <!-- Responsive Apps Settings-->
            <add key=""endpoints:ResponsiveApps"" value=""false"" />
            <!-- WOPI Endpoint for Office Online Server-->
            <add key=""endpoints:Wopi"" value=""false"" />
            <!--Sesame Endpoint for Office Integrations-->
            <add key=""endpoints:Sesame"" value=""false"" />
            <!-- Iron Mountain Policy Center integration -->
            <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
            <!-- FHIR Settings-->
            <add key=""endpoints:FHIR"" value=""false"" />
            <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
            <!-- PPL Apps Settings-->
            <add key=""endpoints:PPL"" value=""false"" />
            <!-- Forms Settings-->
            <add key=""endpoints:Forms"" value=""false"" />
            <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
            <add key=""DocPopUrl"" value="""" />
            <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
            <add key=""StatementCompCacheLimit"" value="""" />
            <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
              Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
            <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
            <!-- OnBase Integration API Settings-->
            <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
            <add key=""owin:oia:lifeCycleId"" value="""" />
            <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
            <add key=""owin:oia:tmpFileAgeInMs"" value="""" />
            <add key=""owin:oia:cleanupIntervalInMs"" value="""" />
            <add key=""UseOnBaseFulltext"" value=""false"" />
            <!-- IDP Url for Content Composer authentication -->
            <add key=""ContentComposerIdpPath"" value="""" />
            <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
                 value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
                 this value can result in undesirable behavior. -->
            <add key=""KeywordDataCacheTimeout"" value=""20"" />
            <add key=""AllowInsecureExternalXsl "" value=""false"" />
          </appSettings>
          <!--HYLAND DIAGNOSTICS
            Used for debugging on machines with Hyland.Logging installed
            -->
          <Hyland.Logging TruncateLogValues=""1024"">
            <WindowsEventLogging sourcename=""Hyland Application Server"" />
            <Routes>
              <Route name=""Splunk"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Splunk"" value=""http://localhost:8989"" />
                <add key=""SplunkToken"" value=""token"" />
                <add key=""SplunkIndex"" value=""Index"" />
                <add key=""SplunkSource"" value=""Source"" />
                <add key=""SplunkSourceType"" value=""Source Type"" />
                <add key=""SplunkHost"" value=""Host"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""DiagnosticsConsole"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""Http"" value=""http://localhost:8989"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value=""anothererror"" />
              </Route>
              <Route name=""ErrorEventLog"">
                <add key=""minimum-level"" value=""Error"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""NamedPipeCoreEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value=""asp.net,client,test,dummy"" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
              <Route name=""PIMManagerEventLog"">
                <add key=""minimum-level"" value=""Information"" />
                <add key=""maximum-level"" value=""Critical"" />
                <add key=""EventLog"" value=""Hyland"" />
                <add key=""DisableIPAddressMasking"" value=""False"" />
                <add key=""include-profiles"" value="""" />
                <add key=""exclude-profiles"" value="""" />
              </Route>
            </Routes>
            <AuditRoutes />
          </Hyland.Logging>
          <Hyland.Web.AppServerPop>
            <EnableChecksum value=""false"" />
            <ChecksumKey value="""" />
            <EnableLegacyChecksumCreation value=""false"" />
          </Hyland.Web.AppServerPop>
          <Hyland.Applications.Portals.ExternalAccess>
            <username value="""" />
            <password value="""" />
            <minPoolSize value=""0"" />
            <maxPoolSize value=""0"" />
          </Hyland.Applications.Portals.ExternalAccess>
          <Hyland.ResponsiveApps>
            <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
            <WorkViewApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
            <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" />
            <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
            <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" />
            <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
            <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" />
            <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
            <CoreAccessTokenLifetime value=""691200"" />
            <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
            <Apps>
            </Apps>
          </Hyland.ResponsiveApps>
          <!-- Content Composer settings -->
          <Hyland.ContentComposer.Core>
            <ClientId value=""id"" />
            <ClientSecret value=""secret"" />
            <Username value=""UN"" />
            <Password value=""PW"" />
          </Hyland.ContentComposer.Core>
          <!-- SharePoint Integrations settings -->
          <Hyland.Applications.Sharepoint.Services>
            <PoolSize max=""5"" min=""1"" />
            <ExpandKeysets value=""true"" />
          </Hyland.Applications.Sharepoint.Services>
          <Hyland.Applications.Sharepoint.SearchAdapter>
            <PoolSize max=""4"" min=""1"" />
            <DataSource name=""[DATASOURCE]"" />
            <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
            <StripDomainOnSecurityCheck value=""true"" />
            <isDocPop value=""true"" />
          </Hyland.Applications.Sharepoint.SearchAdapter>
          <!-- End SharePoint Integrations settings-->
          <Hyland.PlatterManagement>
            <Logging>
              <!-- This controls whether file I/O details (reading and writing) are logged. -->
              <FileIODetail value=""false"" />
            </Logging>
            <DiskgroupAlias>
              <Alias oldname=""OldName"" newname=""NewName"" type=""unc"" />
            </DiskgroupAlias>
            <ForeignStorageDevices>
              <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
              <EMCTHRESHOLD value="""" />
              <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
              <PmCacheLocation value="""" />
              <!-- Path to cache location -->
              <PmCacheTimeout value="""" />
              <!-- Timeout in minutes.  Default is 60 minutes. -->
              <PmCacheSize value="""" />
              <!-- Cache size in MB.  Default is 500. -->
            </ForeignStorageDevices>
            <FileAccess>
              <PMAccessLevel value=""0"" />
              <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
            </FileAccess>
            <TemporaryFiles>
              <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
              <TempFileExpirationThreshold value="""" />
            </TemporaryFiles>
          </Hyland.PlatterManagement>
          <Hyland.Services>
            <!-- POOL SETTINGS
              Controls the size of the session pools when using disconnected web services.

              minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
              available in the session pool.

              maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
              available in the session pool.  Requests from the pool that exceed this value will block
              until another session is placed back into the pool.
            -->
            <poolSettings minSessions=""0"" maxSessions=""10"">
              <!-- Parameters that should be used in the session pool.
                 parameter
                  (attributes: 
                  name = ""[licenseType]""
                  value = ""[queryMeter]"" use query metering)
              -->
              <!--
              <parameters>
                <parameter name=""licenseType"" value=""queryMeter""/>
              </parameters
              -->
              <!-- Allows specification of a Service Login for use in Session Pools.  -->
              <!--
                <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
              -->
            </poolSettings>
            <!-- SECURITY SETTINGS
              Controls the security behavior of the Hyland APIs.

              useQueryContext (default false) - This parameter indicates if query context security will be
              used during the course of retrieval.  Query context means that a document must be retrieved
              through a document query before the document itself is accessible via another call.  If this
              parameter is omitted, the default is true.  Note: this value should be set to false when being
              used for disconnected web services.

              filterExceptions (default true) - This parameter indicates if the application server should not 
              send detailed information about exception. For example, the exact stack trace of the exception will 
              be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
              is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
              an authorized user.
            -->
            <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
            <Endpoint useRemoting=""true"" />
            <!-- SESSION SETTINGS
             Controls the session behavior.

             enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
             If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
             The timeout period is based on the ASP.NET session timeout found in the system.web\session 
             section with a minimum of 10 minutes-->
            <session enableTimeout=""false"" />
            <applicationServerCallback url="""" />
            <webServerBaseUrl url="""" />
            <!--requestValidation increases the security of your application server installation. It controls the level at 
            which the application server will validate client requests.

            Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
            server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
            coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
            only supported validation level.

            Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
            valid source. Note that if older clients are communicating to the application server that do not support request
            validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
            the application server. If there are clients older than the release version of the application server that will not
            be upgraded you should leave this value at zero (0).-->
            <requestValidation minVersion=""0"" />
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          </Hyland.Services>
          <!--
            The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
            -->
          <Hyland.XMLServices.DocumentConnector>
            <loginId name=""5"" />
            <loginPassword name=""5"" />
            <loginDatasource name=""5"" />
            <pool min=""5"" max=""5"" />
          </Hyland.XMLServices.DocumentConnector>
          <!--
            The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
          -->
          <Hyland.Core.FullText>
            <!-- The length of time (in seconds) before the search will timeout. -->
            <SearchTimeout value=""30"" />
            <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
            <SearchLog enableSearchlog=""false"" path="""" />
          </Hyland.Core.FullText>
          <!--
            The Hyland.Core.WorkView block defines options used by WorkView.
          -->
          <Hyland.WorkView.Core>
            <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
            <UnityEditableFilterMaxRows value=""250"" />
            <!--Sets the ERP date format for processing results for LOB Broker classes.-->
            <ERPDateFormat value=""yyyyMMdd"" />
            <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
        		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
        		Example:

        			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

        			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
        			only allow sandbox overrides for that specific domain and sub-domain. 
        		-->
            <FormattedTextIframeSupportedDomains value="""" />
          </Hyland.WorkView.Core>
          <Hyland.Core.Media />
          <Hyland.Core.Media.HostedApplicationServer>
            <url value="""" />
            <datasource value="""" />
            <username value="""" />
            <password value="""" />
          </Hyland.Core.Media.HostedApplicationServer>
          <Hyland.Authentication>
            <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""2.0"" />
            <trustedClients trustMode=""Off"">
              <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPublisher"" findType=""FindBySubjectDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""CertificateAuthority"" findType=""FindByIssuerName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AuthRoot"" findType=""FindByIssuerDistinguishedName"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""Root"" findType=""FindBySerialNumber"" findValue="""" description=""OptionalDescription"" />
              <add storeLocation=""CurrentUser"" storeName=""AddressBook"" findType=""FindByTimeValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""My"" findType=""FindByTimeNotYetValid"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""Disallowed"" findType=""FindByTimeExpired"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByTemplateName"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByApplicationPolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByCertificatePolicy"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByExtension"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByKeyUsage"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindBySubjectKeyIdentifier"" findValue="""" />
              <add storeLocation=""CurrentUser"" storeName=""TrustedPeople"" findType=""FindByThumbprint"" findValue="""" />
            </trustedClients>
            <!--<accessTokenValidation idp="""" audience="""" nameClaimType="""" apiName="""" apiSecret="""" />-->
          </Hyland.Authentication>
          <!--
            Hyland.Core.IDOL - Settings specific to the IDOL full text solution.
          -->
          <Hyland.Core.IDOL ImageCompression=""70"">
            <!-- Uncomment this section if you want to setup the OCR service on a different machine -->
            <RemoteOCREngine remoteServer=""localhost"" port=""9050"" timeOut=""5"" />
          </Hyland.Core.IDOL>
          <!--
            Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
            The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
            The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
            The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
          -->
          <!--<Hyland.Core.Wopi>
         <useOfficeWebAppServer value=""false""/>
            <owaServerUri value=""https://[servername]/""/>
            <owaProxyBase value=""https://[servername]/[appserver]/private"" />
          </Hyland.Core.Wopi>-->
          <!-- Uncomment this section to enable LOB Broker Integration -->
          <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
            <AccountsPayableAPI
               VendorCacheSearchMinChars=""1""
                VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
                VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
                VendorMasterLookupReturnMultiple=""false""
                 VendorCacheAutoCompleteResultsMax=""30""  />

            <DataSources>
              -->
          <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
          <!--
              <DataSource Name=""APAcceleratorRelay""
                     API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                     API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                     LOB_RelayEndpoint =""LOBBrokerEndpoint""
                     Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">

                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                  <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720""/>
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->
          <system.web>
            <webServices>
              <protocols>
                <add name=""HttpGet"" />
                <add name=""HttpPost"" />
                <add name=""HttpPostLocalhost"" />
                <add name=""Documentation"" />
              </protocols>
            </webServices>
            <!--  HTTPRUNTIME
              By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
              need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
              By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
              If uploading large documents, the executionTimeout value may need to be increased for proper processing.

              If uploads larger than 30MB are required, additional changes are required.
              Refer to the maxAllowedContentLength comments for information regarding the changes.
             -->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" requestValidationMode=""2.0"" />
            <!-- IDENTITY
              By setting impersonate=""true"" the username and password set in the registry will be used
              when the application is started.

              For the Web Server, impersonation is (most likely) not needed. The default account of
              NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
              permissions to communicate with the Application Server.

              Use Impersonation on the Application Server for proper NTFS file security.
              When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
              the Application Server will require a user with additional permissions to complete user authentication.

              Use a user with rights to the domain to allow NTFS file security.
              Use a user with Account Operator rights to allow Domain Authentication.

              Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
                aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

              NOTE: Each time aspnet_setreg.exe is run, the security on the 
                HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
                the security to allow read permissions by the user running the ASP .Net worker process.
            -->
            <!--
            <identity impersonate=""false""
              userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
              password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
            />
            -->
            <!--  DYNAMIC DEBUG COMPILATION
              Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
              false will improve runtime performance of this application. 
              Set compilation debug=""true"" to insert debugging symbols (.pdb information)
              into the compiled page. Because this creates a larger file that executes
              more slowly, you should set this value to true only when debugging and to
              false at all other times. For more information, refer to the documentation about
              debugging ASP.NET files.
            -->
            <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
            <!--  CUSTOM ERROR MESSAGES
                Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
                Add <error> tags for each of the errors you want to handle.

                ""On"" Always display custom (friendly) messages.
                ""Off"" Always display detailed ASP.NET error information.
                ""RemoteOnly"" Display custom (friendly) messages only to users not running 
                on the local Web server. This setting is recommended for security purposes, so 
                that you do not display application detail information to remote clients.
            -->
            <customErrors mode=""RemoteOnly"" />
            <!--  AUTHENTICATION 
              This section sets the authentication policies of the application. Possible modes are ""Windows"", 
              ""Forms"", ""Passport"" and ""None""

              ""None"" No authentication is performed. 
              ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
              its settings for the application. Anonymous access must be disabled in IIS. 
              ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
              you authenticate them in your application. A user credential token is stored in a cookie.
              ""Passport"" Authentication is performed via a centralized authentication service provided
              by Microsoft that offers a single logon and core profile services for member sites.
            -->
            <authentication mode=""Windows"" />
            <!--  AUTHORIZATION 
              This section sets the authorization policies of the application. You can allow or deny access
              to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
              (unauthenticated) users.
            -->
            <authorization>
              <allow users=""*"" />
              <!-- Allow all users -->
              <!--  <allow     users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
                  <deny      users=""[comma separated list of users]""
                        roles=""[comma separated list of roles]""/>
              -->
            </authorization>
            <!--  APPLICATION-LEVEL TRACE LOGGING
              Application-level tracing enables trace log output for every page within an application. 
              Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
              trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
              application trace log by browsing the ""trace.axd"" page from your web application
              root.
            -->
            <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
            <!--  SESSION STATE SETTINGS
              By default ASP.NET uses cookies to identify which requests belong to a particular session. 
              If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
              To disable cookies, set sessionState cookieless=""true"".
            -->
            <sessionState mode=""Off"" timeout=""20"" />
            <!--  GLOBALIZATION
              This section sets the globalization settings of the application. 
            -->
            <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
            <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
          </system.web>
          <system.net>
            <connectionManagement>
              <add address=""*"" maxconnection=""24"" />
            </connectionManagement>
          </system.net>
          <system.webServer>
            <validation validateIntegratedModeConfiguration=""false"" />
            <modules>
              <!-- Http Trace -->
            </modules>
            <handlers>
              <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
              <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Welcome Integration (Kiosk) -->
              <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
              <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- Http Trace -->
              <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
              <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
              <!-- OIA requires GET,POST,PUT,DELETE -->
              <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
            </handlers>
            <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
            <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
            <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
            <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
            <!--Uncomment the section below and enter the value as needed.-->
            <!--This setting should be changed in both the web and application server's web.config.-->
            <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
            <security>
              <requestFiltering>
                <requestLimits maxAllowedContentLength=""30000000"" />
              </requestFiltering>
              <authentication>
                <anonymousAuthentication enabled=""true"" />
                <windowsAuthentication enabled=""true"" useAppPoolCredentials=""true"" />
              </authentication>
            </security>
            <defaultDocument>
              <files>
                <clear />
                <add value=""service.asmx"" />
              </files>
            </defaultDocument>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <applicationInitialization skipManagedModules=""true"">
                <add initializationPage=""/Service.svc"" />
            </applicationInitialization>
            -->
            <!-- ""Powered By"" header removal -->
            <httpProtocol>
              <customHeaders>
                <remove name=""X-Powered-By"" />
              </customHeaders>
            </httpProtocol>
          </system.webServer>
          <system.diagnostics>
            <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
                Trace Level	    | Nature of the Tracked Events
                ================================================================
                Off	            - N/A
                Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
                Verbose	        - ""Positive"" events: events that mark successful milestones.
                Information	    - ""Positive"" events: events that mark successful milestones.
                ActivityTracing	- Flow events between processing activities and components.
                All	            - Application may function properly. All events are emitted.
              -->
            <sources>
              <!-- Logs all stages of WCF pipeline -->
              <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs messages flowing through pipeline -->
              <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
              <!-- Logs when objects are read or written -->
              <source name=""System.Runtime.Serialization"" switchValue=""Off"">
                <listeners>
                  <add name=""wcf_log"" />
                </listeners>
              </source>
            </sources>
            <sharedListeners>
              <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
            </sharedListeners>
            <trace autoflush=""true"" />
            <switches>
              <!-- 
                    This switch controls tracing globally through Hyland.Logging.
                    It configures the level of information from Trace that is logged.
                    For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                    minimal, normal, detailed, or verbose messages, respectively.
                    -->
              <add name=""hylandTracing"" value=""0"" />
            </switches>
          </system.diagnostics>
          <configProtectedData>
            <providers>
              <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
            </providers>
          </configProtectedData>
          <!--
          The system.identityModel section is used to enable Windows Identity Foundation options.

          The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
          The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
          -->
          <!--<system.identityModel>
            <identityConfiguration saveBootstrapContext=""true"">
              <securityTokenHandlers>
                <securityTokenHandlerConfiguration>
                  <audienceUris><add value=""https://Audience/URI/"" /></audienceUris>
                  <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                    <trustedIssuers><add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" /></trustedIssuers>
                  </issuerNameRegistry>
                </securityTokenHandlerConfiguration>
              </securityTokenHandlers>
            </identityConfiguration>
          </system.identityModel>-->
          <!--
          system.identityModel.services is used to configure authentication using the WS-Federation protocol.

          wsFederation node
            The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
            The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

          The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
          -->
          <!--<system.identityModel.services>
            <federationConfiguration requireSsl=""false"">
              <cookieHandler requireSsl=""false"" />
              <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
              <serviceCertificate>
                <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
              </serviceCertificate>
            </federationConfiguration>
          </system.identityModel.services>-->
          <system.serviceModel>
            <!-- WCF Logging -->
            <diagnostics>
              <!-- Enable Message Logging here. -->
              <!-- log all messages received or sent at the transport or service model levels -->
              <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
            </diagnostics>
            <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
            <services>
              <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
                <!-- ""Azure Service Bus Endpoint"" section 
                    This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                    it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                    NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
                <!--
              <endpoint binding=""netTcpRelayBinding"" 
                        bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                        contract=""Hyland.Services.Web.IAppServerService"" 
                        behaviorConfiguration=""sbTokenProvider"" 
                        address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
              -->
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
              </service>
              <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
                <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
                <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
              </service>
              <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
                <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
                <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
              </service>
            </services>
            <client>
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
              <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
              <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
              <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
              To use the endpoint in a non secure channel(http)
              1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
              2. change the address url to use http scheme -->
              <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
            </client>
            <bindings>
              <basicHttpBinding>
                <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
                  <security mode=""Transport"" />
                </binding>
                <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
                <binding name=""APIServiceSoap"">
                  <security mode=""TransportWithMessageCredential"" />
                </binding>
                <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                </binding>
                <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
                  <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
                  <security mode=""TransportWithMessageCredential"">
                    <transport clientCredentialType=""None"" />
                    <message clientCredentialType=""Certificate"" />
                  </security>
                </binding>
                <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""None"" />
                </binding>
                <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
                  <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
                  <security mode=""Transport"">
                    <transport clientCredentialType=""None"" />
                  </security>
                </binding>
                <binding name=""SPSearchBinding"">
                  <security mode=""TransportCredentialOnly"">
                    <transport clientCredentialType=""Windows"" />
                  </security>
                </binding>
              </basicHttpBinding>
            </bindings>
            <behaviors>
              <endpointBehaviors>
                <behavior name=""clientCert"">
                  <clientCredentials>
                    <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
                  </clientCredentials>
                </behavior>
                <behavior name=""LOBBrokerClientCertificateAuthentication"">
                  <clientCredentials>
                    <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
                  </clientCredentials>
                </behavior>
              </endpointBehaviors>
              <serviceBehaviors>
                <behavior name=""AppServerBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <behavior name=""SPSearchBehavior"">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                  <useRequestHeadersForMetadataAddress />
                </behavior>
                <!-- Default Behavior -->
                <behavior name="""">
                  <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
                  <serviceDebug includeExceptionDetailInFaults=""false"" />
                </behavior>
              </serviceBehaviors>
              <!-- ""Azure Service Bus Endpoint"" section -->
              <!--
                <endpointBehaviors>
                    <behavior name=""sbTokenProvider"">
                        <transportClientEndpointBehavior>
                            <tokenProvider>
                                <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                            </tokenProvider>
                        </transportClientEndpointBehavior>
                </behavior>
                </endpointBehaviors>
                -->
            </behaviors>
            <!-- ""Azure Service Bus Endpoint"" section -->
            <!--
            <extensions>
              <behaviorExtensions>
                 <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </behaviorExtensions>
              <bindingExtensions>
                <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
              </bindingExtensions>
            </extensions>
            -->
          </system.serviceModel>
          <runtime>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
                <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.2.3.0"" newVersion=""1.2.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
              </dependentAssembly>
            </assemblyBinding>
            <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
              <dependentAssembly>
                <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
                <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
              </dependentAssembly>
            </assemblyBinding>
          </runtime>
          <Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"">
            <AccountsPayableAPI VendorCacheSearchMinChars=""1"" VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID"" VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID"" VendorMasterLookupReturnMultiple=""false"" VendorCacheAutoCompleteResultsMax=""30"" />
            <DataSources>
              <DataSource Name=""APAcceleratorRelay"" API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet"" API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll"" LOB_RelayEndpoint=""LOBBrokerEndpoint"" Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll"">
                <Operations>
                  <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" />
                  <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" />
                  <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetFinancialWorktags"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                  <Operation Name=""GetActivityList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" />
                </Operations>
              </DataSource>
            </DataSources>
          </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection>
          <location path=""AuthService.asmx"">
          </location>
          <location path=""AuthOptServicePipeline.ashx"">
          </location>
        </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "root", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test125()
    {
        //Testing the parsing of the 241 ADFS section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = new webApplicationWebConfigConfiguration();

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":{""systemIdentityModel"":{""audienceUris"":[{""URI"":""https://Audience/URI/"",""id"":null}],""trustedIssuers"":[{""Thumbprint"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Name"":""Optional_Friendly_Name_For_The_Certificate"",""id"":null}]},""systemIdentityModelServices"":{""wsFederation"":{""Issuer"":""https://issuer/adfs/ls/"",""Realm"":""https://realm/URI/""},""serviceCertificate"":{""X509FindType"":""FindByThumbprint"",""FindValue"":""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"",""StoreLocation"":""LocalMachine"",""StoreName"":""My""},""CookieHandlerRequireSSL"":""false""},""knownKeys"":[],""ADFSEnabled"":""false"",""RequestValidationMode"":""2.0"",""AuthenticationMode"":""Windows"",""SynchronizeUserAttributes"":""true"",""AuthenticationOnly"":""false""},""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>

      <connectionStrings>
        <!-- ADO.NET connection string
          Fill in the [parameters]. Provider name is the database type.-->
    	  <add name=""[DataSourceName]"" connectionString=""Data Source=[server\instance];database=[databaseName];User Id=[user name];Password=[password]"" providerName=""[providerName]"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value="""" />
    	<add key=""dmsdatasource"" value=""[Datasource]"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
    	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false""/>
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
        <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />

        <!-- Sharebase folder descriptors fetch related configuration-->
        <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
        <add key =""SB_FolderFetchBatchSize"" value =""300""/>
        <!-- Sharebase folder Database Command Time Out in Seconds-->
        <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
      </appSettings>

      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging>
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" />
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""ErrorEventLog"">
            <!-- Write errors to the Event Log using the source specified above -->
            <add key=""HylandLog"" />
            <add key=""minimum-level"" value=""Error"" />
          </Route>
          <!--<Route name=""ELK"">
                <add key=""Http"" value=""http://localhost:5586""/>
                <add key=""CompactHttpFormat""/>
            </Route>-->
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
            <add key=""include-profiles"" value=""named-pipe-core""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""EventLog"" value=""Hyland PIM Manager"" />
            <add key=""include-profiles"" value=""pim-manager""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
        </Routes>
        <AuditRoutes>
          <!--<Route name=""DiagnosticsConsole"">
                <add key=""Http"" value=""http://localhost:8989"" /> 
            </Route>-->
        </AuditRoutes>
      </Hyland.Logging>

      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>

      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>

      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <!-- <WorkViewApi url=""https://[Server]/[AppServer]/private/workview/api/"" /> -->
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <!-- <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" /> -->
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <!-- <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" /> -->
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <!-- <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" /> -->
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
          <!-- <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" /> -->
        </Apps>
      </Hyland.ResponsiveApps>

      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value="""" />
        <ClientSecret value="""" />
        <Username value="""" />
        <Password value="""" />
      </Hyland.ContentComposer.Core>

      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>

      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>

      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <!-- The alias must map to a mount location which is equal to the contents of physicalplatter.lastuseddrive. -->
          <!-- type attribute can be ""unc"" or ""unix"".  Default is ""unc"" -->
          <!--
          <Alias   oldname=""\\ftp:\anonymous:<pwd>\\ftp-server\:21\\Diskgroups\FTPTest1\copy1"" 
              newname=""\\file-server\DISKGROUPS\FTPTest1\copy1"" 
              type=""unc""/>
          -->
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value="""" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>

      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
      </Hyland.Services>

      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name="""" />
        <loginPassword name="""" />
        <loginDatasource name="""" />
        <pool min=""0"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>

      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>

      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <!--<UnityEditableFilterMaxRows value=""250"" />-->
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <!--<ERPDateFormat value=""yyyyMMdd""/>-->
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <!--<FormattedTextIframeSupportedDomains value=""""/>-->
      </Hyland.WorkView.Core>

      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>

      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
        <trustedClients trustMode=""On"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
      </Hyland.Authentication>

      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->

      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--To use UTC time based cache refresh, set UseUTCTimeCacheRefresh to ""true"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll""
                 UseUTCTimeCacheRefresh=""false"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->

      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" />
        <httpCookies httpOnlyCookies=""true"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->

        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--
      <system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris>
                <add value=""https://Audience/URI/"" />
              </audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers>
                  <add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" />
                </trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>
      -->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--
      <system.identityModel.services>
        <federationConfiguration>
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>
      -->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Win32.Registry"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.1.0"" newVersion=""4.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.5.0"" newVersion=""1.2.5.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Memory"" culture=""neutral"" publicKeyToken=""cc7b13ffcd2ddd51"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.1"" newVersion=""4.0.1.1"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.TypeExtensions"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.2.0"" newVersion=""4.1.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Security.Principal.Windows"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.3.0"" newVersion=""4.1.3.0"" />
          </dependentAssembly>
        </assemblyBinding>    
      </runtime>
    </configuration>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "ADFS", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test126()
    {
        //Testing the parsing of the 241 Hyland.Logging section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure241WithVersionNumber);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":""24.1.7.1000"",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":{""windowsEventLogging"":{""SourceName"":""Hyland Application Server""},""Routes"":[{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":null,""splunk"":null,""file"":null,""http"":{""URL"":""http://localhost:8989""},""durablehttp"":null,""console"":null,""RouteType"":""Http"",""Name"":""DiagnosticsConsole"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[],""MinimumErrorLevel"":""5"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Neither""},""eventlog"":{""SourceName"":""Hyland""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""ErrorEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""named-pipe-core""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland Named Pipe Core""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""NamedPipeCoreEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null},{""filter"":{""Profiles"":[""pim-manager""],""MinimumErrorLevel"":""3"",""MaximumErrorLevel"":""6"",""FilterProfilesIncludeExcludeNeither"":""Include""},""eventlog"":{""SourceName"":""Hyland PIM Manager""},""splunk"":null,""file"":null,""http"":null,""durablehttp"":null,""console"":null,""RouteType"":""EventLog"",""Name"":""PIMManagerEventLog"",""SourceEvents"":""Diagnostics Events"",""EnableIpAddressMasking"":""True"",""id"":null}],""truncateloggingcharacters"":""1024"",""profilesForHTML"":[""asp.net"",""ChangeTracking"",""client"",""configuration"",""error"",""EpicSettings"",""fulltext"",""ihe"",""ldap"",""logging"",""mobile.service"",""None"",""Patient-Window"",""report.services"",""service"",""tcservices"",""timer"",""undefined"",""vbscript"",""wcf"",""workflow"",""cache"",""chromium-service-pim"",""configuration"",""db"",""file"",""hl7"",""image-rendering-pim"",""locking"",""mobile.raw"",""named-pipe-core"",""OnBase"",""pim-manager"",""scriptexecution"",""TC"",""tcverbose"",""trace"",""unity"",""warnings"",""web.service""]},""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Logging>
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" />
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""ErrorEventLog"">
            <!-- Write errors to the Event Log using the source specified above -->
            <add key=""HylandLog"" />
            <add key=""minimum-level"" value=""Error"" />
          </Route>
          <!--<Route name=""ELK"">
                <add key=""Http"" value=""http://localhost:5586""/>
                <add key=""CompactHttpFormat""/>
            </Route>-->
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
            <add key=""include-profiles"" value=""named-pipe-core""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""EventLog"" value=""Hyland PIM Manager"" />
            <add key=""include-profiles"" value=""pim-manager""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
        </Routes>
        <AuditRoutes>
          <!--<Route name=""DiagnosticsConsole"">
                <add key=""Http"" value=""http://localhost:8989"" /> 
            </Route>-->
        </AuditRoutes>
      </Hyland.Logging>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Logging", xmldoc, new DefaultWebApplicationDataStructures());

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test127()
    {
        //Testing the parsing of the 241 Hyland.Authentication section from the web.config file.
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":{""trustedClients"":[{""StoreLocation"":""LocalMachine"",""StoreName"":""My"",""FindType"":""FindByThumbprint"",""FindValue"":""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"",""Description"":""OptionalDescription"",""id"":null}],""TrustMode"":""true""},""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var xmlNode = @"<Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
        <trustedClients trustMode=""On"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
      </Hyland.Authentication>";

        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };

        factory.ParseKeys(ds, xmldoc.DocumentElement, "Hyland.Authentication", xmldoc);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test128()
    {
        //Testing the parsing of the translator that came back from the COMACON Helper executable
        var factory = new DefaultGenericHelperMethods();
        var ds = JsonConvert.DeserializeObject<webApplicationWebConfigConfiguration>(cleanWebApplicationDataStructure);

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""type"":""1"",""htmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""type"":""2"",""htmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""type"":""1"",""htmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        var translatorValue = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");

        factory.ParseTranslator(ds, translatorValue);

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(ds));
    }

    [Fact]
    public void Test129()
    {
        //Tests the parsing of a 21.1 web.config and the iis settings to verify that determine if any of the Optimize for Windows Authentication settings are applied.
        var factory = new DefaultGenericHelperMethods();
        ServerManager manager = new ServerManager();
        Configuration config = manager.GetWebConfiguration("Default Web Site/AppServerx64-241");
        string xmlNode = @"<?xml version=""1.0"" encoding=""utf-8""?>
    <configuration>
      <configSections>
        <section name=""Hyland.Services"" type=""Hyland.Services.Configuration,Hyland.Services"" />
        <section name=""Hyland.XMLServices.DocumentConnector"" type=""Hyland.Core.XML.ConfigurationHandler,Hyland.Core.XML"" />
        <section name=""Hyland.PlatformRuntimeServices"" type=""Hyland.PlatformRuntimeServices.PlatformRuntimeServicesConfigurationSection, Hyland.Services"" />
        <section name=""Hyland.Logging"" type=""Hyland.Logging.Configuration.ClientConfigurationHandler,Hyland.Logging"" />
        <section name=""Hyland.MainframeService"" type=""Hyland.MainframeService.ConfigurationHandler,Hyland.MainframeService"" />
        <section name=""Hyland.PlatterManagement"" type=""Hyland.Core.PlatterManagement.ConfigurationHandler,Hyland.Core"" />
        <section name=""Hyland.Core.FullText"" type=""Hyland.Core.FullText.ConfigurationSection, Hyland.Core.FullText"" />
        <section name=""Hyland.WorkView.Core"" type=""Hyland.WorkView.Core.ConfigurationSection, Hyland.WorkView.Core"" />
        <section name=""Hyland.Core.ReportServices"" type=""Hyland.Core.ReportServices.ModuleSettings,Hyland.Core.ReportServices"" />
        <section name=""Hyland.Core.Wopi"" type=""Hyland.Core.Wopi.WopiConfigSection, Hyland.Core"" />
        <section name=""Hyland.Core.Media"" type=""Hyland.Common.Core.Media.MediaConfiguration, Hyland.Common.Core"" />
        <section name=""Hyland.Core.Media.HostedApplicationServer"" type=""Hyland.Applications.Web.ConfigSections.MediaHostedConfigSection, Hyland.Applications.Web"" />
        <section name=""Hyland.Web.AppServerPop"" type=""Hyland.Applications.Web.ConfigSections.AppServerPopConfigSection, Hyland.Applications.Web"" />
        <!-- ADFS sections -->
        <section name=""Hyland.Authentication"" type=""Hyland.Authentication.Configuration.AuthenticationConfigurationSection, Hyland.Authentication"" />
        <section name=""system.identityModel"" type=""System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <section name=""system.identityModel.services"" type=""System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"" />
        <!-- End ADFS sections -->
        <!--LOB Broker Section-->
        <section name=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection"" type=""Hyland.Integrations.LOBBroker.LOBBrokerConfigSection, Hyland.Integrations.LOBBroker.Common"" allowLocation=""true"" allowDefinition=""Everywhere"" />
        <!--End LOB Broker Section-->
        <!-- External Access Client section -->
        <section name=""Hyland.Applications.Portals.ExternalAccess"" type=""Hyland.Applications.Web.ConfigSections.ExternalAccessClientConfigSection,Hyland.Applications.Web"" />
        <!-- End External Access Client section-->
        <!-- Responsive Apps section-->
        <section name=""Hyland.ResponsiveApps"" type=""Hyland.ResponsiveApps.Services.Core.Configuration.ResponsiveAppsConfigurationSection, Hyland.ResponsiveApps.Services.Core"" />
        <!-- End Responsive Apps section-->
        <!-- SharePoint Integration section -->
        <section name=""Hyland.Applications.Sharepoint.Services"" type=""Hyland.Applications.Sharepoint.Services.ConfigurationHandler,Hyland.Applications.Sharepoint.Services"" />
        <section name=""Hyland.Applications.Sharepoint.SearchAdapter"" type=""Hyland.Applications.Sharepoint.SearchAdapter.Configuration,Hyland.Applications.Sharepoint.SearchAdapter"" />
        <!-- End SharePoint Integration section -->
        <!-- Content Composer section -->
        <section name=""Hyland.ContentComposer.Core"" type=""Hyland.Applications.Web.ConfigSections.ContentComposerConfigSection, Hyland.Applications.Web"" />
        <!-- End Content Composer section -->
      </configSections>

      <connectionStrings>
        <!-- ADO.NET connection string
          Fill in the [parameters]. Provider name is the database type.-->
    	  <add name=""[DataSourceName]"" connectionString=""Data Source=[server\instance];database=[databaseName];User Id=[user name];Password=[password]"" providerName=""[providerName]"" />
      </connectionStrings>
      <appSettings>
        <!-- Server Designation for this application server.
        Useful to see what server a user is connected to in a load-balanced environment. -->
        <add key=""ServerDesignation"" value="""" />
    	<add key=""dmsdatasource"" value=""[Datasource]"" />
        <!-- This is used to determine if the connection to the database should be made with OS Authentication
             or SQL Authentication.  If it's set to true it needs to have a OS/domain user which has access to
             the database and is configured as the user for this Application Server.  This user requires the 
             same database permissions that the ""hsi"" user would have.
        -->
        <add key=""UseOSAuthentication"" value=""false"" />
        <!-- Message pop up warning when number of documents returned from query exceed the value
            Value should not exceed DocumentQueryLimit if you want to the warning to appear.      
        -->
        <add key=""DocumentQueryWarningThreshold"" value=""500"" />
        <!-- Document queries are limited when number of returned documents exceed the value.
            Max supported value is 10000.
        -->
        <add key=""DocumentQueryLimit"" value=""2000"" />
        <!--The number of seconds an item will exist within the item cache before it will be expired-->
        <add key=""ItemCacheTimeout"" value=""60"" />
        <!--Settings for image rendering and image quality-->
        <add key=""RawImagesAllowed"" value=""true"" />
        <!--Setting for initializing the out of process image rendering service-->
        <add key=""UseIsolatedImageProcess"" value=""true"" />
        <add key=""CompressionQuality"" value=""70"" />
        <!--Setting for initializing the Chromium Image service used by Unity Forms-->
        <add key=""EnableIsolatedChromiumProcess"" value=""true"" />
        <!--Timeout in seconds for sending a Form to a TIFF file using the process image rendering service-->
        <add key=""FormSaveToTiffTimeout"" value=""60"" />
    	<!--Configuration to print image form via PDF. ""TRUE"" means printing via PDF else ""FALSE"" means printing via screenshot. -->
        <add key=""PrintImageFormViaPDF"" value=""false""/>
        <!-- Specify a custom path for TPCF Worker directory-->
        <add key=""TPCFWorkerLocationOverride"" value="""" />
        <!--Settings for FileMonitoring Engine-->
        <add key=""DefaultStoragePath"" value="""" />
        <!--Settings for FOS Admittance Monitoring-->
        <add key=""watchFolder"" value="""" />
        <add key=""siteIDKeywordType"" value=""Site ID"" />
        <add key=""cleanupTimerInterval"" value=""15"" />
        <add key=""maxFileAgeInHours"" value=""4"" />
        <!--Settings for EIS -->
        <!-- ValidateMessageSchema - Set to true to perform validation on the Message Schema with Xml Rendition-->
        <add key=""ValidateMessageSchema"" value=""true"" />
        <!-- ContinueOnValidationError - Set to true to Log error and continue when validation fails-->
        <add key=""ContinueOnValidationError"" value=""false"" />
        <!-- EisDataSetCacheCleanUpInterval - EIS Dataset cache cleanup interval set in Minutes. Default is One Hour-->
        <add key=""DataSetCacheCleanUpIntervalInMins"" value=""60"" />
        <!-- EIS to retrieve AppNetDirectory example: ""http://localhost/AppNet"" -->
        <add key=""AppNetDirectory"" value=""[virtualRoot]"" />
        <!-- EIS to retrieve DocPopURL with clientType as HTML example: ""true/false"" -->
        <add key=""UseHTMLClientType"" value=""false"" />
        <!--Delay in minutes to start the timer the Message Broker uses to monitor for message sending issues and 
        completed messages needing archiving. -->
        <add key=""MessageBrokerMonitorStartDelayInMinutes"" value="""" />
        <!-- Username to connect to GCS.
             Username can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,userName"" -->
        <add key=""GCSUsername"" value="""" />
        <!-- Password to connect to GCS.
             Password can be in plaintext or use ASPNET_SETREG.exe to encrypt. Example shown below.
             example: ""registry:HKLM\SOFTWARE\Hyland\GCS\UsageBasedBilling\identity\ASPNET_SETREG,password"" -->
        <add key=""GCSPassword"" value="""" />
        <!-- useLegacyKeyForUsageBasedBilling - Set to true to use legacy public key to validate the response coming back from GCS. -->
        <add key=""useLegacyKeyForUsageBasedBilling"" value=""false"" />
        <!--Time interval in minutes to perform phone home to GCS server. Default value is set to 60 minutes -->
        <add key=""GCSPhoneHomeIntervalInMinutes"" value=""60"" />
        <!-- The Data Capture Server location for creating a WCF connection. -->
        <add key=""DataCaptureServerWCFEndpointAddress"" value=""net.tcp://localhost:9050/Hyland.DataCapture.ServiceManager/service"" />
        <!-- This setting controls if the server will accept only https connections or not. 
          If you set this to false all incoming requests have to be made over https. 
          If you set this to true then both http and https connections are accepted. 
          The recommended setting is false.-->
        <add key=""AllowInsecureConnection"" value=""false"" />
        <!-- OWIN setting specifiying the application server origin. Used to create absolute links. 
          In a load-balanced environment, hostname would be the load-balancer.
          example: ""https://hostname/AppServer""	-->
        <add key=""AppServerOrigin"" value=""[virtualRoot]"" />
        <!--Settings to enable OWIN startup-->
        <add key=""owin:AutomaticAppStartup"" value=""false"" />
        <!--Location of the OWIN startup class-->
        <add key=""owin:appStartup"" value=""Hyland.Owin.Core.Startup, Hyland.Owin.Core"" />
        <!-- Location of the Identity Model Server  -->
        <add key=""IdentityModelServerURI"" value="""" />
        <!-- WorkView Mobile Settings-->
        <add key=""mobileAppsPath"" value=""[unc path]"" />
        <add key=""corsPolicy"" value=""*"" />
        <add key=""endpoints:WorkViewMobile"" value=""false"" />
        <!-- Responsive Apps Settings-->
        <add key=""endpoints:ResponsiveApps"" value=""false"" />
        <!-- WOPI Endpoint for Office Online Server-->
        <add key=""endpoints:Wopi"" value=""false"" />
        <!--Sesame Endpoint for Office Integrations-->
        <add key=""endpoints:Sesame"" value=""false"" />
        <!-- Iron Mountain Policy Center integration -->
        <add key=""endpoints:GovernanceRulesAsAService"" value=""false"" />
        <!-- FHIR Settings-->
        <add key=""endpoints:FHIR"" value=""false"" />
        <add key=""SMARTonFHIRApplicationId"" value=""[GUID]"" />
        <!-- PPL Apps Settings-->
        <add key=""endpoints:PPL"" value=""false"" />
        <!-- Forms Settings-->
        <add key=""endpoints:Forms"" value=""false"" />
        <!-- This is the URL Patient Portal will send down for viewing unity forms. Do not add a trailing slash. -->
        <add key=""DocPopUrl"" value="""" />
        <!-- Maximum number (inclusive) of cached statement comp documents. This defaults to 1 document. -->
        <add key=""StatementCompCacheLimit"" value="""" />
        <!-- Changes the Unity forms rendering behavior when form elements exceed the width of the form.
          Set this to ""true"" to prevent the form from expanding to match the width of the largest element. -->
        <add key=""UnityFormsToggleMaxFormWidth"" value=""false"" />
        <!-- OnBase Integration API Settings-->
        <add key=""owin:oia:msgItemTypeId"" value=""[Message Item Type ID]"" />
        <add key=""owin:oia:lifeCycleId"" value=""[Lifecycle ID]"" />
        <add key=""owin:oia:tmpFilePath"" value=""[UNC Path]"" />
        <add key=""owin:oia:tmpFileAgeInMs"" value=""[Temp File Age ms]"" />
        <add key=""owin:oia:cleanupIntervalInMs"" value=""[Cleanup Interval ms]"" />
        <add key=""UseOnBaseFulltext"" value=""false"" />
        <!-- IDP Url for Content Composer authentication -->
        <add key=""ContentComposerIdpPath"" value="""" />
        <!-- Timeout in minutes used to determine how long keyword metadata is stored in memory.  WARNING, increasing this
             value over the default of 20 minutes will increase memory consumption on the application server.  Lowering
             this value can result in undesirable behavior. -->
        <add key=""KeywordDataCacheTimeout"" value=""20"" />

        <!-- Sharebase folder descriptors fetch related configuration-->
        <add key =""SB_MaxQueryExecutionParallelism"" value =""10""/>
        <add key =""SB_FolderFetchBatchSize"" value =""300""/>
        <!-- Sharebase folder Database Command Time Out in Seconds-->
        <add key =""SB_DatabaseCommandTimeOut"" value =""300""/>
      </appSettings>

      <!--HYLAND DIAGNOSTICS
        Used for debugging on machines with Hyland.Logging installed
        -->
      <Hyland.Logging>
        <WindowsEventLogging sourcename=""Hyland Application Server"" />
        <Routes>
          <Route name=""DiagnosticsConsole"">
            <add key=""Http"" value=""http://localhost:8989"" />
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""ErrorEventLog"">
            <!-- Write errors to the Event Log using the source specified above -->
            <add key=""HylandLog"" />
            <add key=""minimum-level"" value=""Error"" />
          </Route>
          <!--<Route name=""ELK"">
                <add key=""Http"" value=""http://localhost:5586""/>
                <add key=""CompactHttpFormat""/>
            </Route>-->
          <Route name=""NamedPipeCoreEventLog"">
            <add key=""EventLog"" value=""Hyland Named Pipe Core"" />
            <add key=""include-profiles"" value=""named-pipe-core""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
          <Route name=""PIMManagerEventLog"">
            <add key=""EventLog"" value=""Hyland PIM Manager"" />
            <add key=""include-profiles"" value=""pim-manager""/>
            <!-- <add key=""minimum-level"" value=""Trace"" /> -->
          </Route>
        </Routes>
        <AuditRoutes>
          <!--<Route name=""DiagnosticsConsole"">
                <add key=""Http"" value=""http://localhost:8989"" /> 
            </Route>-->
        </AuditRoutes>
      </Hyland.Logging>

      <Hyland.Web.AppServerPop>
        <EnableChecksum value=""false"" />
        <ChecksumKey value="""" />
        <EnableLegacyChecksumCreation value=""false"" />
      </Hyland.Web.AppServerPop>

      <Hyland.Applications.Portals.ExternalAccess>
        <username value="""" />
        <password value="""" />
        <minPoolSize value=""0"" />
        <maxPoolSize value=""0"" />
      </Hyland.Applications.Portals.ExternalAccess>

      <Hyland.ResponsiveApps>
        <!-- WorkViewApi is the path to the WorkView web api facet. Example: ""https://hostname/AppServer/private/workview/api/""-->
        <!-- <WorkViewApi url=""https://[Server]/[AppServer]/private/workview/api/"" /> -->
        <!-- WorkViewFiles is the path to the WorkView static file server facet. Example: ""https://hostname/AppServer/private/workview/files/""-->
        <!-- <WorkViewFiles url=""https://[Server]/[AppServer]/private/workview/files/"" /> -->
        <!-- ResponsiveAppsApi is the path to the Responsive Apps web api facet. Example: ""https://hostname/AppServer/private/responsive-apps/api/""-->
        <!-- <ResponsiveAppsApi url=""https://[Server]/[AppServer]/private/responsive-apps/api/"" /> -->
        <!-- IdentityProvider is the path to the Identity Provider including tenant and user population. Example: ""https://hostname/idp/workview/mobile/""-->
        <!-- <IdentityProvider url=""https://[Server]/idp/[tenant]/[population]"" /> -->
        <!-- CoreAccessTokenLifetime is the property that is used for configuring the default length (in seconds) that a ReAuth token is good for when accessed through resonsive-apps-->
        <CoreAccessTokenLifetime value=""691200"" />
        <!-- Used for Responsive Apps to add additional apps to the list returned by the getapps endpoint -->
        <Apps>
          <!-- <App name=""[appName]"" icon=""[urlToAppIcon]"" url=""[urlToApp]"" /> -->
        </Apps>
      </Hyland.ResponsiveApps>

      <!-- Content Composer settings -->
      <Hyland.ContentComposer.Core>
        <ClientId value="""" />
        <ClientSecret value="""" />
        <Username value="""" />
        <Password value="""" />
      </Hyland.ContentComposer.Core>

      <!-- SharePoint Integrations settings -->
      <Hyland.Applications.Sharepoint.Services>
        <PoolSize max=""5"" min=""1"" />
        <ExpandKeysets value=""true"" />
      </Hyland.Applications.Sharepoint.Services>

      <Hyland.Applications.Sharepoint.SearchAdapter>
        <PoolSize max=""4"" min=""1"" />
        <DataSource name=""[DATASOURCE]"" />
        <VirtualRoot value=""http://[WEB SERVER]/[VIRTUAL ROOT]"" />
        <StripDomainOnSecurityCheck value=""true"" />
        <isDocPop value=""true"" />
      </Hyland.Applications.Sharepoint.SearchAdapter>

      <!-- End SharePoint Integrations settings-->
      <Hyland.PlatterManagement>
        <Logging>
          <!-- This controls whether file I/O details (reading and writing) are logged. -->
          <FileIODetail value=""false"" />
        </Logging>
        <DiskgroupAlias>
          <!-- The alias must map to a mount location which is equal to the contents of physicalplatter.lastuseddrive. -->
          <!-- type attribute can be ""unc"" or ""unix"".  Default is ""unc"" -->
          <!--
          <Alias   oldname=""\\ftp:\anonymous:<pwd>\\ftp-server\:21\\Diskgroups\FTPTest1\copy1"" 
              newname=""\\file-server\DISKGROUPS\FTPTest1\copy1"" 
              type=""unc""/>
          -->
        </DiskgroupAlias>
        <ForeignStorageDevices>
          <!-- Setting for Centera inline blobs in KB.  Default is 75. -->
          <EMCTHRESHOLD value="""" />
          <!-- Settings for platter management caching of files at the data source machine(for PCL, AFP files, etc. -->
          <PmCacheLocation value="""" />
          <!-- Path to cache location -->
          <PmCacheTimeout value="""" />
          <!-- Timeout in minutes.  Default is 60 minutes. -->
          <PmCacheSize value="""" />
          <!-- Cache size in MB.  Default is 500. -->
        </ForeignStorageDevices>
        <FileAccess>
          <PMAccessLevel value="""" />
          <!-- 0 or empty for Default, 1 to Always use UNC, 2 to Never to UNC -->
        </FileAccess>
        <TemporaryFiles>
          <!-- The minimum amount of time a temporary file should exist without being accessed before it expires. Default is 00:05:00 (five minutes). -->
          <TempFileExpirationThreshold value="""" />
        </TemporaryFiles>
      </Hyland.PlatterManagement>

      <Hyland.Services>
        <!-- POOL SETTINGS
          Controls the size of the session pools when using disconnected web services.

          minSessions (default 0) - This parameter dictates the minimum number of OnBase sessions
          available in the session pool.

          maxSessions (default 10) - This parameter dictates the maximum number of OnBase sessions
          available in the session pool.  Requests from the pool that exceed this value will block
          until another session is placed back into the pool.
        -->
        <poolSettings minSessions=""0"" maxSessions=""10"">
          <!-- Parameters that should be used in the session pool.
             parameter
              (attributes: 
              name = ""[licenseType]""
              value = ""[queryMeter]"" use query metering)
          -->
          <!--
          <parameters>
            <parameter name=""licenseType"" value=""queryMeter""/>
          </parameters
          -->
          <!-- Allows specification of a Service Login for use in Session Pools.  -->
          <!--
            <serviceLogin username=""[serviceUserName]"" password=""[servicePassword]"" />
          -->
        </poolSettings>
        <!-- SECURITY SETTINGS
          Controls the security behavior of the Hyland APIs.

          useQueryContext (default false) - This parameter indicates if query context security will be
          used during the course of retrieval.  Query context means that a document must be retrieved
          through a document query before the document itself is accessible via another call.  If this
          parameter is omitted, the default is true.  Note: this value should be set to false when being
          used for disconnected web services.

          filterExceptions (default true) - This parameter indicates if the application server should not 
          send detailed information about exception. For example, the exact stack trace of the exception will 
          be filtered. This reduces the amount of information revealed to a malicious attacker when the server 
          is attacked. The information is still available via Diagnostics Console and Diagnostics Server for 
          an authorized user.
        -->
        <securitySettings useQueryContext=""false"" filterExceptions=""true"" />
        <Endpoint useRemoting=""true"" />
        <!-- SESSION SETTINGS
         Controls the session behavior.

         enableTimeout (default false) - Controls the timeout behavior for unused sessions. 
         If enableTimeout is set to true the AppServer will timeout unused sessions and disconnect them.
         The timeout period is based on the ASP.NET session timeout found in the system.web\session 
         section with a minimum of 10 minutes-->
        <session enableTimeout=""false"" />
        <applicationServerCallback url="""" />
        <webServerBaseUrl url="""" />
        <!--requestValidation increases the security of your application server installation. It controls the level at 
        which the application server will validate client requests.

        Currently the only valid values for minVersion are 0 and 1. A value of zero (0) indicates that the application
        server will not validate incoming requests. Requests will still be authenticated, but will not be verified to be
        coming from a valid source. Anything other than zero (0) enables validation. A value of one (1) is currently the 
        only supported validation level.

        Setting minVersion to 1 will force the application server to validate that incoming requests are coming from a
        valid source. Note that if older clients are communicating to the application server that do not support request
        validation and this value is set to anything other than zero (0), those clients will not be able to communicate to
        the application server. If there are clients older than the release version of the application server that will not
        be upgraded you should leave this value at zero (0).-->
        <requestValidation minVersion=""0"" />
      </Hyland.Services>

      <!--
        The Hyland.XMLServices.DocumentConnector block controls the behavior of the InfoPath and Document Connectors.
        -->
      <Hyland.XMLServices.DocumentConnector>
        <loginId name="""" />
        <loginPassword name="""" />
        <loginDatasource name="""" />
        <pool min=""0"" max=""5"" />
      </Hyland.XMLServices.DocumentConnector>

      <!--
        The Hyland.Core.FullText block defines options used by the Full Text Service Framework.
      -->
      <Hyland.Core.FullText>
        <!-- The length of time (in seconds) before the search will timeout. -->
        <SearchTimeout value=""30"" />
        <!--Enables Full Text search logs in the specified path(<SearchLog enableSearchlog=""true"" path=""<HostName>/SearchLogs""/>). Path should have full access rights for 'Everyone'.-->
        <SearchLog enableSearchlog=""false"" path="""" />
      </Hyland.Core.FullText>

      <!--
        The Hyland.Core.WorkView block defines options used by WorkView.
      -->
      <Hyland.WorkView.Core>
        <!-- Sets Max results for Unity client editable embedded filters (Default: 250, Max: 2000). -->
        <!--<UnityEditableFilterMaxRows value=""250"" />-->
        <!--Sets the ERP date format for processing results for LOB Broker classes.-->
        <!--<ERPDateFormat value=""yyyyMMdd""/>-->
        <!--Adds additional domains that should be supported by iframes in the formatted text attribute control. Adding a domain to this list will add `allow-scripts`, `allow-same-origin`, and `allow-forms`
    		overrides to the sandbox attribute on the iframe. Add domains as a comma separated list
    		Example:

    			<FormattedTextIframeSupportedDomains value=""*.mydomain.com,sub.myotherdomain.com""/>

    			In this example *.mydomain.com will enable all sub-domains for mydomain.com (Ex: www.mydomain.com and test.mydomain.com would be valid), sub.myotherdomain.com would
    			only allow sandbox overrides for that specific domain and sub-domain. 
    		-->
        <!--<FormattedTextIframeSupportedDomains value=""""/>-->
      </Hyland.WorkView.Core>

      <Hyland.Core.Media />
      <Hyland.Core.Media.HostedApplicationServer>
        <url value="""" />
        <datasource value="""" />
        <username value="""" />
        <password value="""" />
      </Hyland.Core.Media.HostedApplicationServer>

      <Hyland.Authentication>
        <adfs enabled=""false"" synchronizeUserAttributes=""true"" authenticationOnly=""false"" />
        <trustedClients trustMode=""On"">
          <add storeLocation=""LocalMachine"" storeName=""My"" findType=""FindByThumbprint"" findValue=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" description=""OptionalDescription"" />
        </trustedClients>
        <!--<accessTokenValidation idp="""" audience="""" nameClaimType=""username"" apiName="""" apiSecret=""""/>-->
      </Hyland.Authentication>

      <!--
        Hyland.Core.Wopi - Settings specific to WOPI viewer integration.
        The 'useOfficeWebAppServer' attribute determines whether to use the WOPI viewer or continue to use the legacy viewer
        The 'owaServerUri' attribute points to the Office Web Apps server. Example: ""https://localhost/""
        The 'owaProxyBase' attribute points to the WOPI Service. Example: ""https://localhost/AppServer/private""
      -->
      <!--<Hyland.Core.Wopi>
     <useOfficeWebAppServer value=""false""/>
        <owaServerUri value=""https://[servername]/""/>
        <owaProxyBase value=""https://[servername]/[appserver]/private"" />
      </Hyland.Core.Wopi>-->

      <!-- Uncomment this section to enable LOB Broker Integration -->
      <!--<Hyland.Integrations.LOBBroker.LOBBrokerConfigSection TraceLevel=""5"" >
        <AccountsPayableAPI
           VendorCacheSearchMinChars=""1""
            VendorMasterKeyedLookupOp=""GetVenMasterRecordbyVenIDNCompID""
            VendorMasterLookupSequence=""GetVenMasterRecordbyVenIDNCompID, GetVenMasterRecordbyPONumNCompID, GetVenMasterRecordbyPhoneNCompID, GetVenMasterRecordbyTaxID, GetVenMasterRecordbyVATID, GetVenMasterRecordbyZipCodeNCompID, GetVenMasterRecordByVenAddressNCompID, GetVenMasterRecordbyWebSiteNCompID, GetVenMasterRecordbyBankAccountNumber, GetVenMasterRecordbyVenNameNCompID""
            VendorMasterLookupReturnMultiple=""false""
             VendorCacheAutoCompleteResultsMax=""30""  />

        <DataSources>
          -->
      <!--The relay endpoint will point to the WCF .config ""endpoint"" attribute ""name"".-->
      <!--To use UTC time based cache refresh, set UseUTCTimeCacheRefresh to ""true"".-->
      <!--
          <DataSource Name=""APAcceleratorRelay""
                 API_Type=""Hyland.Integrations.LOBBroker.AccountsPayableOperationSet""
                 API_DLL=""Hyland.Integrations.LOBBroker.AccountsPayable.dll""
                 LOB_RelayEndpoint =""LOBBrokerEndpoint""
                 Schemas_DLL=""Hyland.Integrations.LOBBroker.Schemas.dll""
                 UseUTCTimeCacheRefresh=""false"">

            <Operations>
              <Operation Name=""GetPONumberOpenList"" NoInputArg=""true"" CacheRefreshMinutes=""5"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetVendorList"" NoInputArg=""true"" CacheRefreshMinutes=""60"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCompanyList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetCurrencyCodesList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetProcessLevelList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetTermsList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetGeneralLedgerSegments"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetAccountCategoryList"" NoInputArg=""true"" CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetFinancialWorktags""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
              <Operation Name=""GetActivityList""  NoInputArg=""true""  CacheRefreshMinutes=""720"" CacheRefreshUTCTime=""23:59:59"" />
            </Operations>
          </DataSource>
        </DataSources>
      </Hyland.Integrations.LOBBroker.LOBBrokerConfigSection> -->

      <system.web>
        <webServices>
          <protocols>
            <add name=""HttpGet"" />
            <add name=""HttpPost"" />
            <add name=""HttpPostLocalhost"" />
            <add name=""Documentation"" />
          </protocols>
        </webServices>
        <!--  HTTPRUNTIME
          By default the maximum size a request may be is 30000 KB.  If files larger than 30000 KB (30 MB)
          need to be uploaded increase the size of the maxRequestLength.  MaxRequestLength value is in KiloBytes.
          By default the maximum number of seconds that a request is allowed to execute is 300 seconds.
          If uploading large documents, the executionTimeout value may need to be increased for proper processing.

          If uploads larger than 30MB are required, additional changes are required.
          Refer to the maxAllowedContentLength comments for information regarding the changes.
         -->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <httpRuntime targetFramework=""4.7.2"" requestValidationType=""Hyland.Services.HttpRequestValidator, Hyland.Services"" maxRequestLength=""30000"" executionTimeout=""300"" />
        <httpCookies httpOnlyCookies=""true"" />
        <!-- IDENTITY
          By setting impersonate=""true"" the username and password set in the registry will be used
          when the application is started.

          For the Web Server, impersonation is (most likely) not needed. The default account of
          NetworkService or ApplicationPoolIdentity should have the proper file permissions and network
          permissions to communicate with the Application Server.

          Use Impersonation on the Application Server for proper NTFS file security.
          When using NT Authentication, LDAP Authentication, Active Directory Authentication, and certain SSOs
          the Application Server will require a user with additional permissions to complete user authentication.

          Use a user with rights to the domain to allow NTFS file security.
          Use a user with Account Operator rights to allow Domain Authentication.

          Use aspnet_setreg.exe to encrypt and set the username and password in the registry.
            aspnet_setreg -k:SOFTWARE\Hyland\AppNet\Identity -u:<domain>\<username> -p:<password>

          NOTE: Each time aspnet_setreg.exe is run, the security on the 
            HKLM:SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG key is reset. Use regedt32 to update 
            the security to allow read permissions by the user running the ASP .Net worker process.
        -->
        <!--
        <identity impersonate=""false""
          userName=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,userName""
          password=""registry:HKLM\SOFTWARE\Hyland\AppNet\Identity\ASPNET_SETREG,password""
        />
        -->

        <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug=""true"" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug=""true"" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
        -->
        <compilation defaultLanguage=""c#"" debug=""false"" targetFramework=""4.7.2"" />
        <!--  CUSTOM ERROR MESSAGES
            Set customErrors mode=""On"" or ""RemoteOnly"" to enable custom error messages, ""Off"" to disable. 
            Add <error> tags for each of the errors you want to handle.

            ""On"" Always display custom (friendly) messages.
            ""Off"" Always display detailed ASP.NET error information.
            ""RemoteOnly"" Display custom (friendly) messages only to users not running 
            on the local Web server. This setting is recommended for security purposes, so 
            that you do not display application detail information to remote clients.
        -->
        <customErrors mode=""RemoteOnly"" />
        <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are ""Windows"", 
          ""Forms"", ""Passport"" and ""None""

          ""None"" No authentication is performed. 
          ""Windows"" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
          its settings for the application. Anonymous access must be disabled in IIS. 
          ""Forms"" You provide a custom form (Web page) for users to enter their credentials, and then 
          you authenticate them in your application. A user credential token is stored in a cookie.
          ""Passport"" Authentication is performed via a centralized authentication service provided
          by Microsoft that offers a single logon and core profile services for member sites.
        -->
        <authentication mode=""Windows"" />
        <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: ""*"" mean everyone, ""?"" means anonymous 
          (unauthenticated) users.
        -->
        <authorization>
          <allow users=""*"" />
          <!-- Allow all users -->
          <!--  <allow     users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
              <deny      users=""[comma separated list of users]""
                    roles=""[comma separated list of roles]""/>
          -->
        </authorization>
        <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled=""true"" to enable application trace logging.  If pageOutput=""true"", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the ""trace.axd"" page from your web application
          root.
        -->
        <trace enabled=""false"" requestLimit=""10"" pageOutput=""false"" traceMode=""SortByTime"" localOnly=""true"" />
        <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless=""true"".
        -->
        <sessionState mode=""Off"" timeout=""20"" />
        <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
        -->
        <globalization requestEncoding=""utf-8"" responseEncoding=""utf-8"" />
        <pages controlRenderingCompatibilityVersion=""3.5"" clientIDMode=""AutoID"" />
      </system.web>
      <system.net>
        <connectionManagement>
          <add address=""*"" maxconnection=""24"" />
        </connectionManagement>
      </system.net>
      <system.webServer>
        <validation validateIntegratedModeConfiguration=""false"" />
        <modules>
          <!-- Http Trace -->
        </modules>
        <handlers>
          <add name=""DownloadHandler.ashx_*"" path=""DownloadHandler.ashx"" type=""Hyland.Services.FileDownloadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptUploadHandler.ashx_*"" path=""OptUploadHandler.ashx"" type=""Hyland.Services.FileUploadHandler, Hyland.Services"" verb=""*"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Copied from the Web Server to support Topaz signatures in the remote mode Desktop -->
          <add name=""FileServiceHandler.ashx_*"" path=""FileServiceHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.FileServiceHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""HttpServiceHandler.ashx_*"" path=""HttpServiceHandler.ashx"" verb=""*"" type=""Hyland.Services.HttpServiceHandler,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""OptimizedServicePipeline_*"" path=""OptimizedServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <add name=""AuthOptServicePipeline_*"" path=""AuthOptServicePipeline.ashx"" verb=""*"" type=""Hyland.Services.ServicePipeline,Hyland.Services"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Welcome Integration (Kiosk) -->
          <add name=""EpicWelcomeUploadHandler.ashx_*"" path=""EpicWelcomeUploadHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.Welcome.WelcomeFileUploadHandler,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Required for Epic Print Service / Epic Release of Information (ROI) Integration -->
          <add name=""EpicROIHandler.ashx_*"" path=""EpicROIHandler.ashx"" verb=""*"" type=""Hyland.Core.ServiceHandlers.Integrations.Epic.ROI.EpicROIHandlerFactory,Hyland.Core.ServiceHandlers"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- Http Trace -->
          <add name=""Owin"" verb="""" path=""workview/files"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <add name=""Wopi"" path=""wopi/files/*.*"" verb=""*"" type=""Microsoft.Owin.Host.SystemWeb.OwinHttpHandler, Microsoft.Owin.Host.SystemWeb"" />
          <!-- FHIR requires dots in resource ids, plus all HTTP verbs. -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForFhirApi"" path=""private/fhir"" verb=""*"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
          <!-- OIA requires GET,POST,PUT,DELETE -->
          <add name=""ExtensionlessUrlHandler-Integrated-4.0-ForOIA"" path=""private/oia"" verb=""GET,POST,PUT,DELETE"" type=""System.Web.Handlers.TransferRequestHandler"" preCondition=""integratedMode,runtimeVersionv4.0"" />
        </handlers>
        <!--If uploads larger than 30MB are expected, maxAllowedContentLength as well as maxRequestLength must be increased.-->
        <!--Uploads that are below maxAllowedContentLength but above maxRequestLength will display a friendly error message to the user.-->
        <!--Uploads that are above maxAllowedContentLength will be rejected and a 404 error will occur.-->
        <!--Therefore, this value (in bytes) should be larger and not equal to maxRequestLength (in kilobytes) or users will not receive a friendly error message.-->
        <!--Uncomment the section below and enter the value as needed.-->
        <!--This setting should be changed in both the web and application server's web.config.-->
        <!-- WARNING - Do not set this value below 4MB or uploads over 4MB will fail - WARNING -->
        <security>
          <requestFiltering>
            <requestLimits maxAllowedContentLength=""30000000"" />
          </requestFiltering>
        </security>
        <defaultDocument>
          <files>
            <clear />
            <add value=""service.asmx"" />
          </files>
        </defaultDocument>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <applicationInitialization skipManagedModules=""true"">
            <add initializationPage=""/Service.svc"" />
        </applicationInitialization>
        -->
        <!-- ""Powered By"" header removal -->
        <httpProtocol>
          <customHeaders>
            <remove name=""X-Powered-By"" />
          </customHeaders>
        </httpProtocol>
      </system.webServer>
      <system.diagnostics>
        <!-- Per MSDN: http://msdn.microsoft.com/en-us/library/ms733025%28v=vs.110%29.aspx
            Trace Level	    | Nature of the Tracked Events
            ================================================================
            Off	            - N/A
            Critical	      - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Error	          - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Warning	        - ""Negative"" events: events that indicate an unexpected processing or an error condition.
            Verbose	        - ""Positive"" events: events that mark successful milestones.
            Information	    - ""Positive"" events: events that mark successful milestones.
            ActivityTracing	- Flow events between processing activities and components.
            All	            - Application may function properly. All events are emitted.
          -->
        <sources>
          <!-- Logs all stages of WCF pipeline -->
          <source name=""System.ServiceModel"" switchValue=""Off"" propagateActivity=""false"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs messages flowing through pipeline -->
          <source name=""System.ServiceModel.MessageLogging"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
          <!-- Logs when objects are read or written -->
          <source name=""System.Runtime.Serialization"" switchValue=""Off"">
            <listeners>
              <add name=""wcf_log"" />
            </listeners>
          </source>
        </sources>
        <sharedListeners>
          <add initializeData=""C:\hsi_logs\wcf_log.svclog"" type=""System.Diagnostics.XmlWriterTraceListener"" name=""wcf_log"" />
        </sharedListeners>
        <trace autoflush=""true"" />
        <switches>
          <!-- 
                This switch controls tracing globally through Hyland.Logging.
                It configures the level of information from Trace that is logged.
                For no information set the value to zero. Set the value to 1, 2, 3, or 4 for
                minimal, normal, detailed, or verbose messages, respectively.
                -->
          <add name=""hylandTracing"" value=""0"" />
        </switches>
      </system.diagnostics>
      <configProtectedData>
        <providers>
          <add name=""DpapiProvider"" type=""System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"" />
        </providers>
      </configProtectedData>
      <!--
      The system.identityModel section is used to enable Windows Identity Foundation options.

      The audienceUri identifies the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.
      The certificate identified by the thumbprint in the trustedIssuers element is the token-signing certificate found on the ADFS server.
      -->
      <!--
      <system.identityModel>
        <identityConfiguration saveBootstrapContext=""true"">
          <securityTokenHandlers>
            <securityTokenHandlerConfiguration>
              <audienceUris>
                <add value=""https://Audience/URI/"" />
              </audienceUris>
              <issuerNameRegistry type=""System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"">
                <trustedIssuers>
                  <add thumbprint=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCD"" name=""Optional_Friendly_Name_For_The_Certificate"" />
                </trustedIssuers>
              </issuerNameRegistry>
            </securityTokenHandlerConfiguration>
          </securityTokenHandlers>
        </identityConfiguration>
      </system.identityModel>
      -->
      <!--
      system.identityModel.services is used to configure authentication using the WS-Federation protocol.

      wsFederation node
        The 'issuer' attribute specifies the URI of the token issuer.  It sets the base URL for authentication requests.
        The 'realm' attribute specifies the URI used to identify the relying party (RP - this application).  This much exactly (case, trailing slash, etc.) match the Relying Party Trust Identifier on the ADFS sever.

      The certificate identified by the certificateReference element is the encryption certificate configured on the Relying Party Trust on the ADFS server.
      -->
      <!--
      <system.identityModel.services>
        <federationConfiguration>
          <cookieHandler requireSsl=""false"" />
          <wsFederation issuer=""https://issuer/adfs/ls/"" realm=""https://realm/URI/"" />
          <serviceCertificate>
            <certificateReference x509FindType=""FindByThumbprint"" findValue=""ZYXWVUTSRQPONMLKJIHGFEDCBA0987654321ZYXW"" storeLocation=""LocalMachine"" storeName=""My"" />
          </serviceCertificate>
        </federationConfiguration>
      </system.identityModel.services>
      -->
      <system.serviceModel>
        <!-- WCF Logging -->
        <diagnostics>
          <!-- Enable Message Logging here. -->
          <!-- log all messages received or sent at the transport or service model levels -->
          <messageLogging logEntireMessage=""true"" logMessagesAtServiceLevel=""true"" logMalformedMessages=""true"" logMessagesAtTransportLevel=""true"" />
        </diagnostics>
        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />
        <services>
          <service name=""Hyland.Services.Web.WcfService"" behaviorConfiguration=""AppServerBehavior"">
            <!-- ""Azure Service Bus Endpoint"" section 
                This endpoint binding is used to create an endpoint on an Azure Service Bus.  Uncomment this section to enable
                it.  Also un-comment the sections below labeled ""Azure Service Bus Endpoint section"".
                NOTE: the parameter [Unique AppServer Name] should be a unique name on the Azure Service Bus. -->
            <!--
          <endpoint binding=""netTcpRelayBinding"" 
                    bindingConfiguration=""AppServerNetTcpRelayBinding"" 
                    contract=""Hyland.Services.Web.IAppServerService"" 
                    behaviorConfiguration=""sbTokenProvider"" 
                    address=""sb://[Service Bus Name].servicebus.windows.net/[Unique AppServer Name]"" />
          -->
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Integrations.Epic.ImageRetrievalAPI.WcfService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""AppServerForEpicBasicHttpBinding"" name=""EpicImageRetrievalApiHttpBinding"" contract=""IBinaryDataRetrieval"" />
          </service>
          <service behaviorConfiguration=""SPSearchBehavior"" name=""SPSearch.SearchService"">
            <endpoint address="""" binding=""basicHttpBinding"" bindingConfiguration=""SPSearchBinding"" contract=""SPSearch.ISearchService"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.OnBaseAnywhere.CentralServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Applications.IA.ProviderServerServices"">
            <endpoint address="""" bindingConfiguration=""OAHttpBinding"" binding=""basicHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" />
          </service>
          <service name=""Hyland.Core.ServiceHandlers.Core.Security.CoreAccessTokenServices"">
            <!--<endpoint name=""InsecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""InsecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />-->
            <endpoint name=""SecureTransport"" address="""" binding=""basicHttpBinding"" bindingConfiguration=""SecureCoreAccessTokenTransport"" contract=""Hyland.Common.Core.Security.ICoreAccessTokenServices"" />
          </service>
        </services>
        <client>
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.IProviderServer"" name=""BasicHttpBinding_IProviderServer"" behaviorConfiguration=""clientCert"" />
          <endpoint binding=""basicHttpBinding"" bindingConfiguration=""OAHttpBinding"" contract=""Hyland.Common.Core.IA.Services.ICentralServer"" name=""BasicHttpBinding_ICentralServer"" behaviorConfiguration=""clientCert"" />
          <endpoint address=""https://www.docusign.net/api/3.0/api.asmx"" binding=""basicHttpBinding"" bindingConfiguration=""APIServiceSoap"" contract=""DocuSignWeb.APIServiceSoap"" name=""APIServiceSoap"" />
          <!--This endpoint is used to connect to LOB Broker Relay Service. By default the endpoint uses secure binding(LOBBrokerBinding_Secure). 
          To use the endpoint in a non secure channel(http)
          1. change the bindingConfiguration to insecure binding (LOBBrokerBinding). 
          2. change the address url to use http scheme -->
          <endpoint address=""https://localhost/Hyland.Integrations.LOBBrokerRelayService/LOBBrokerRelayService.svc"" name=""LOBBrokerEndpoint"" binding=""basicHttpBinding"" bindingConfiguration=""LOBBrokerBinding_Secure"" behaviorConfiguration=""LOBBrokerClientCertificateAuthentication"" contract=""Hyland.Integrations.LOBBroker.ILOBBrokerRelayService_v17"" />
        </client>
        <bindings>
          <basicHttpBinding>
            <binding name=""AppServerForEpicBasicHttpBinding"" transferMode=""Streamed"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""OAHttpBinding"" transferMode=""Streamed"" maxReceivedMessageSize=""21474836480"" sendTimeout=""2.00:00:00"" receiveTimeout=""2.00:00:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""SecureCoreAccessTokenTransport"" transferMode=""Buffered"">
              <security mode=""Transport"" />
            </binding>
            <binding name=""InsecureCoreAccessTokenTransport"" transferMode=""Buffered"" />
            <binding name=""APIServiceSoap"">
              <security mode=""TransportWithMessageCredential"" />
            </binding>
            <binding name=""LOBBrokerBinding"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
            </binding>
            <binding name=""LOBBrokerBinding_Secure"" maxReceivedMessageSize=""2147483647"" transferMode=""Streamed"" messageEncoding=""Mtom"" sendTimeout=""00:05:00"" receiveTimeout=""00:05:00"">
              <readerQuotas maxArrayLength=""2147483647"" maxStringContentLength=""2147483647"" />
              <security mode=""TransportWithMessageCredential"">
                <transport clientCredentialType=""None"" />
                <message clientCredentialType=""Certificate"" />
              </security>
            </binding>
            <binding name=""MwsBinding"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""None"" />
            </binding>
            <binding name=""MwsBinding_SSL"" maxBufferPoolSize=""2147483600"" maxReceivedMessageSize=""2147483600"" receiveTimeout=""24.20:31:23.6470000"">
              <readerQuotas maxStringContentLength=""2147483647"" maxArrayLength=""2147483647"" />
              <security mode=""Transport"">
                <transport clientCredentialType=""None"" />
              </security>
            </binding>
            <binding name=""SPSearchBinding"">
              <security mode=""TransportCredentialOnly"">
                <transport clientCredentialType=""Windows"" />
              </security>
            </binding>
          </basicHttpBinding>
        </bindings>
        <behaviors>
          <endpointBehaviors>
            <behavior name=""clientCert"">
              <clientCredentials>
                <clientCertificate storeLocation=""LocalMachine"" x509FindType=""FindByThumbprint"" findValue="""" />
              </clientCredentials>
            </behavior>
            <behavior name=""LOBBrokerClientCertificateAuthentication"">
              <clientCredentials>
                <clientCertificate findValue=""[CertificateSubjectName]"" storeLocation=""LocalMachine"" storeName=""My"" x509FindType=""FindBySubjectName"" />
              </clientCredentials>
            </behavior>
          </endpointBehaviors>
          <serviceBehaviors>
            <behavior name=""AppServerBehavior"">
              <serviceMetadata httpGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <behavior name=""SPSearchBehavior"">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
              <useRequestHeadersForMetadataAddress />
            </behavior>
            <!-- Default Behavior -->
            <behavior name="""">
              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true"" />
              <serviceDebug includeExceptionDetailInFaults=""false"" />
            </behavior>
          </serviceBehaviors>
          <!-- ""Azure Service Bus Endpoint"" section -->
          <!--
            <endpointBehaviors>
                <behavior name=""sbTokenProvider"">
                    <transportClientEndpointBehavior>
                        <tokenProvider>
                            <sharedSecret issuerName=""[Service Bus Issuer]"" issuerSecret=""[Service Bus Key]"" />
                        </tokenProvider>
                    </transportClientEndpointBehavior>
            </behavior>
            </endpointBehaviors>
            -->
        </behaviors>
        <!-- ""Azure Service Bus Endpoint"" section -->
        <!--
        <extensions>
          <behaviorExtensions>
             <add name=""transportClientEndpointBehavior"" type=""Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </behaviorExtensions>
          <bindingExtensions>
            <add name=""netTcpRelayBinding"" type=""Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement, Microsoft.ServiceBus, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"" />
          </bindingExtensions>
        </extensions>
        -->
      </system.serviceModel>
      <runtime>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""IdentityModel"" publicKeyToken=""e7877f4675df049f"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-3.10.9.0"" newVersion=""3.10.9.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Net.Http.Formatting"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Web.Http"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.2.3.0"" newVersion=""5.2.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.AspNetCore.Http"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.22.0"" newVersion=""2.1.22.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Caching.Memory"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Configuration.Binder"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.10.0"" newVersion=""2.1.10.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.DependencyInjection.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Logging.Abstractions"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Options"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.1.0"" newVersion=""2.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Extensions.Primitives"" publicKeyToken=""adb9793829ddae60"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.6.0"" newVersion=""2.1.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.IdentityModel.Tokens"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Net.Http.Headers"" culture=""neutral"" publicKeyToken=""adb9793829ddae60"" />
            <bindingRedirect oldVersion=""0.0.0.0-2.1.14.0"" newVersion=""2.1.14.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Owin"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.0"" newVersion=""4.0.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Microsoft.Win32.Registry"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.1.0"" newVersion=""4.1.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""Newtonsoft.Json"" publicKeyToken=""30ad4fe6b2a6aeed"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-11.0.0.0"" newVersion=""11.0.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""SimpleInjector"" publicKeyToken=""984cb50dea722e99"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.12.0"" newVersion=""4.0.12.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Buffers"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Collections.Immutable"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.2.5.0"" newVersion=""1.2.5.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.ComponentModel.Annotations"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.2.1.0"" newVersion=""4.2.1.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Configuration.ConfigurationManager"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.3.0"" newVersion=""4.0.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Data.SqlClient"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.5.0.0"" newVersion=""4.5.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Diagnostics.PerformanceCounter"" publicKeyToken=""cc7b13ffcd2ddd51"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.2.0"" newVersion=""4.0.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.IdentityModel.Tokens.Jwt"" publicKeyToken=""31bf3856ad364e35"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-5.4.0.0"" newVersion=""5.4.0.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Memory"" culture=""neutral"" publicKeyToken=""cc7b13ffcd2ddd51"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.1.1"" newVersion=""4.0.1.1"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.TypeExtensions"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.2.0"" newVersion=""4.1.2.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Runtime.CompilerServices.Unsafe"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.0.6.0"" newVersion=""4.0.6.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Reflection.Metadata"" publicKeyToken=""b03f5f7f11d50a3a"" culture=""neutral"" />
            <bindingRedirect oldVersion=""0.0.0.0-1.4.3.0"" newVersion=""1.4.3.0"" />
          </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns=""urn:schemas-microsoft-com:asm.v1"">
          <dependentAssembly>
            <assemblyIdentity name=""System.Security.Principal.Windows"" culture=""neutral"" publicKeyToken=""b03f5f7f11d50a3a"" />
            <bindingRedirect oldVersion=""0.0.0.0-4.1.3.0"" newVersion=""4.1.3.0"" />
          </dependentAssembly>
        </assemblyBinding>    
      </runtime>
    </configuration>";
        XmlDocument xmldoc = new XmlDocument { InnerXml = xmlNode };
        XmlNode root = xmldoc.DocumentElement;
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        var translator = JsonConvert.DeserializeObject<NETCoreToNetFrameworkTranslator>(@"{""knownKeys"":[{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientId"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-ID"",""Value"":""id"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""ClientSecret"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Client-Secret"",""Value"":""secret"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Username"",""Value"":""UN"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""Password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Content-Composer-Password"",""Value"":""PW"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.ContentComposer.Core"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-Content-Composer-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableChecksum"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Validate-Against-Checksum"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""ChecksumKey"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Pop-Integrations-Checksum-Key"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""EnableLegacyChecksumCreation"",""AttributeName"":""value"",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Enable-Legacy-Checksum-Creation"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Web.AppServerPop"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Pop-Integrations-Encrypt-Configuration"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""url"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-URL"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""datasource"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Datasource"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""Integrations-Media-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Core.Media.HostedApplicationServer"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Integrations-Media-Encrypt-OnBase-Cloud-Settings"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""username"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Username"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""password"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-Password"",""Value"":"""",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""minPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Minimum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""maxPoolSize"",""AttributeName"":""value"",""Type"":""2"",""HtmlIdName"":""EAC-UserLevel-Maximum-Pool-Size"",""Value"":""0"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""},{""Section"":""Hyland.Applications.Portals.ExternalAccess"",""PathName"":""IsEncrypted"",""AttributeName"":"""",""Type"":""1"",""HtmlIdName"":""Encrypt-EAC"",""Value"":""false"",""Version"":"""",""minimumValue"":"""",""maximumValue"":""""}],""connectionStrings"":{""connectionStrings"":[{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL No Integrated Security"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""False"",""Host"":""DataSource/Host"",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""Oracle No TNS No Integrated Security"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""False"",""UserId"":""UserID"",""Password"":""Password"",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":""DataSource"",""Database"":""Database""},""oracle"":{""TNSConnectionString"":""true"",""Host"":"""",""Database"":"""",""Protocol"":""TCP"",""Port"":""""},""Name"":""SQL Integrated Security Additional Options"",""Provider"":""System.Data.SqlClient"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Host"",""Database"":""Database"",""Protocol"":""TCP"",""Port"":""1234""},""Name"":""Oracle TNS Integrated Security Additional Options"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""Hosting"",""Database"":""TestDatabase"",""Protocol"":""TCPS"",""Port"":""123456""},""Name"":""Oracle Other"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""},{""sql"":{""DataSource"":"""",""Database"":""""},""oracle"":{""TNSConnectionString"":""True"",""Host"":""HostingServer"",""Database"":""AnotherDatabase"",""Protocol"":""TCPS"",""Port"":""12""},""Name"":""Oracle Other2"",""Provider"":""Oracle.ManagedDataAccess.Client"",""IntegratedSecurity"":""True"",""UserId"":"""",""Password"":"""",""AdditionalOptions"":"""",""id"":""""}],""EncryptConnectionStrings"":""False""}}");
        factory.CreateOptimizeWindowsAuthenticationForArray(config, new DefaultWebApplicationDataStructures(), xmldoc, webconfigconfig, "Application Server", translator, root.SelectSingleNode("appSettings"));

        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":null,""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";

        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }

    [Fact]
    public void Test130()
    {
        var factory = new DefaultGenericHelperMethods();
        webApplicationWebConfigConfiguration webconfigconfig = new webApplicationWebConfigConfiguration();
        factory.ParseSessionAdministration(webconfigconfig, @"C:\inetpub\wwwroot\AppServerx64-241\Admin\sessionAdminSecurity.config");
        string expectedJsonDataStructure = @"{""Type"":"""",""Version"":"""",""PhysicalPath"":"""",""Path"":"""",""SiteName"":"""",""ApplicationName"":"""",""Bitness"":"""",""knownKeys"":[],""translatorKnownKeys"":[],""unknownAttributeKeys"":[],""unknownElementKeys"":[],""connectionStrings"":null,""hylandLogging"":null,""hylandIdentityProviderUrl"":null,""requiredKeywords"":[],""hylandAuthenticationADFS"":null,""hylandAuthentication"":null,""hylandResponsiveApps"":null,""hylandServicesParameters"":null,""hylandPlatterManagement"":null,""WindowsAuthOptimizeFor"":[],""navigationPanel"":null,""customValidation"":null,""healthcareWebViewer"":null,""keywordDropdownTypeAhead"":null,""IisConfiguration"":{""application"":null,""applicationPool"":null},""sessionAdministration"":{""users"":[],""roles"":[]},""elementsToHide"":{""elements"":[]},""processingErrors"":{""CriticalErrors"":[],""NonCriticalErrors"":[]},""publicCommentIntegrations"":[],""tooltips"":[]}";
        Assert.Equal(expectedJsonDataStructure, JsonConvert.SerializeObject(webconfigconfig));
    }
}
