// <auto-generated />
using System;
using COMACON.DatabaseContexts.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COMACON.Migrations
{
    [DbContext(typeof(COMACONSqliteDbContext))]
    [Migration("20240923194711_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.PasswordPolicy", b =>
                {
                    b.Property<long>("PswdPolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PolicyDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("PolicyEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("PolicyType")
                        .HasColumnType("INTEGER");

                    b.HasKey("PswdPolicyId");

                    b.ToTable("PasswordPolicies");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.PasswordRule", b =>
                {
                    b.Property<long>("PswdRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("PswdPolicyId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RuleEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RuleType")
                        .HasColumnType("INTEGER");

                    b.Property<short?>("RuleValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("PswdRuleId");

                    b.HasIndex("PswdPolicyId");

                    b.ToTable("PasswordRules");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.RoleXPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleXPermissions");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.SecurityLog", b =>
                {
                    b.Property<long>("SecurityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AffectedUserNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserNum")
                        .HasColumnType("INTEGER");

                    b.HasKey("SecurityLogId");

                    b.HasIndex("AffectedUserNum");

                    b.HasIndex("UserNum");

                    b.ToTable("SecurityLogs");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.Session", b =>
                {
                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserNum")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccessToken");

                    b.HasIndex("UserNum");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.SystemTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatabaseVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SystemTables", t =>
                        {
                            t.HasCheckConstraint("CK_SystemTable_Id", "[Id] = 1");
                        });
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.UserAccount", b =>
                {
                    b.Property<int>("UserNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("AuthMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("LastEditedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastEditedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PasswordLastChanged")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PasswordResetOnNextLogin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserNum");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastEditedBy");

                    b.HasIndex("RoleId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.PasswordRule", b =>
                {
                    b.HasOne("COMACON.DatabaseContexts.SQLite.PasswordPolicy", "PasswordPolicy")
                        .WithMany("PasswordRules")
                        .HasForeignKey("PswdPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PasswordPolicy");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.RoleXPermission", b =>
                {
                    b.HasOne("COMACON.DatabaseContexts.SQLite.Permission", "Permission")
                        .WithMany("RoleXPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMACON.DatabaseContexts.SQLite.Role", "Role")
                        .WithMany("RoleXPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.SecurityLog", b =>
                {
                    b.HasOne("COMACON.DatabaseContexts.SQLite.UserAccount", "AffectedUser")
                        .WithMany()
                        .HasForeignKey("AffectedUserNum");

                    b.HasOne("COMACON.DatabaseContexts.SQLite.UserAccount", "User")
                        .WithMany("SecurityLogs")
                        .HasForeignKey("UserNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffectedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.Session", b =>
                {
                    b.HasOne("COMACON.DatabaseContexts.SQLite.UserAccount", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.UserAccount", b =>
                {
                    b.HasOne("COMACON.DatabaseContexts.SQLite.UserAccount", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("COMACON.DatabaseContexts.SQLite.UserAccount", "LastEditedByUser")
                        .WithMany()
                        .HasForeignKey("LastEditedBy");

                    b.HasOne("COMACON.DatabaseContexts.SQLite.Role", "Role")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastEditedByUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.PasswordPolicy", b =>
                {
                    b.Navigation("PasswordRules");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.Permission", b =>
                {
                    b.Navigation("RoleXPermissions");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.Role", b =>
                {
                    b.Navigation("RoleXPermissions");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("COMACON.DatabaseContexts.SQLite.UserAccount", b =>
                {
                    b.Navigation("SecurityLogs");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
